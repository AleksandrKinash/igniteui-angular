{"version":3,"sources":["tests/unit/carousel.spec.ts"],"names":[],"mappings":"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","file":"tests/unit/carousel.spec.js","sourcesContent":["/// <reference path=\"../../typings/globals/jasmine/index.d.ts\" />\n/// <reference path=\"../../typings/globals/es6-shim/index.d.ts\" />\n\n\nimport { inject, TestComponentBuilder, ComponentFixture } from '@angular/core/testing';\nimport {Component, ViewChild, ContentChildren, QueryList} from '@angular/core';\nimport * as Infragistics from '../../src/main';\n\ndeclare var Simulator: any;\n\n\nfunction dispatchEv(element: HTMLElement, eventType: string): void {\n    let event = new Event(eventType);\n    element.dispatchEvent(event);\n}\n\nexport function main() {\n    describe('Inragistics Angular2 Carousel', () => {\n\n        let builder: TestComponentBuilder;\n\n\n        beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n            builder = tcb;\n        }));\n\n\n        it(\"should initialize a carousel with two slides and then destroy it\", (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n\n                fixture.detectChanges();\n\n                expect(fixture.componentInstance.viewChild).toBeDefined();\n                expect(fixture.componentInstance.viewChild instanceof Infragistics.Carousel).toBe(true);\n                expect(fixture.componentInstance.viewChild.slides[0] instanceof Infragistics.Slide).toBe(true);\n\n                fixture.detectChanges();\n\n                expect(fixture.componentInstance.viewChild.slides instanceof Array).toBe(true);\n                expect(fixture.componentInstance.loop).toBe(true);\n                expect(fixture.componentInstance.viewChild.pause).toBe(false);\n                expect(fixture.componentInstance.viewChild.slides.length).toBe(2);\n                expect(fixture.componentInstance.viewChild.interval).toBe(2500);\n\n                fixture.componentInstance.viewChild.ngOnDestroy();\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.isDestroyed).toBe(true);\n\n                done();\n            });\n        });\n\n        it(\"Carousel disabled looping\", (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n                fixture.detectChanges();\n\n                let lastSlide = fixture.componentInstance.viewChild.get(1);\n                let firstSlide = fixture.componentInstance.viewChild.get(0);\n\n                fixture.componentInstance.viewChild.loop = false;\n                fixture.detectChanges();\n                fixture.componentInstance.viewChild.next();\n                fixture.componentInstance.viewChild.next();\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.current).toBe(lastSlide.index);\n\n                fixture.componentInstance.viewChild.prev();\n                fixture.componentInstance.viewChild.prev();\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.current).toBe(firstSlide.index);\n\n                done();\n            });\n        });\n\n        it('Carousel getter/setter tests', (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n\n                fixture.detectChanges();\n\n                // Setters\n                fixture.componentInstance.viewChild.loop = false;\n                fixture.componentInstance.viewChild.pause = false;\n                fixture.componentInstance.viewChild.interval = 666;\n                fixture.componentInstance.viewChild.navigation = false;\n\n                fixture.detectChanges();\n\n                // Getters\n                expect(fixture.componentInstance.viewChild.loop).toBe(false);\n                expect(fixture.componentInstance.viewChild.pause).toBe(false);\n                expect(fixture.componentInstance.viewChild.interval).toBe(666);\n                expect(fixture.componentInstance.viewChild.navigation).toBe(false);\n\n                done();\n            });\n        });\n\n        it('Carousel add/remove slides tests', (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n\n                fixture.detectChanges();\n\n                let currentSlide = fixture.componentInstance.viewChild.get(fixture.componentInstance.viewChild.current);\n                fixture.componentInstance.viewChild.remove(currentSlide);\n\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.slides.length).toBe(1);\n\n                currentSlide = fixture.componentInstance.viewChild.get(fixture.componentInstance.viewChild.current);\n                fixture.componentInstance.viewChild.remove(currentSlide);\n\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.slides.length).toBe(0);\n\n                fixture.componentInstance.viewChild.add(currentSlide);\n                fixture.componentInstance.viewChild.add(currentSlide);\n\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.slides.length).toBe(2);\n\n                done();\n            });\n        });\n\n        it(\"Carousel public methods\", (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n                fixture.detectChanges();\n                fixture.componentInstance.viewChild.pause = false;\n                fixture.detectChanges();\n\n                fixture.componentInstance.viewChild.stop();\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.isPlaying).toBe(false);\n\n                fixture.componentInstance.viewChild.next();\n                let currentSlide = fixture.componentInstance.viewChild.get(fixture.componentInstance.viewChild.current);\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.get(1)).toBe(currentSlide);\n\n                currentSlide = fixture.componentInstance.viewChild.get(0);\n                fixture.componentInstance.viewChild.prev();\n                fixture.detectChanges();\n                expect(fixture.componentInstance.viewChild.get(0)).toBe(currentSlide);\n\n                done();\n            });\n        });\n\n        it(\"Carousel emit events\", (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n                fixture.detectChanges();\n\n                let carousel = fixture.componentInstance.viewChild;\n                let native = fixture.nativeElement;\n\n                spyOn(carousel.slideChanged, 'emit');\n                carousel.next();\n                fixture.detectChanges();\n                expect(carousel.slideChanged.emit).toHaveBeenCalledWith(carousel);\n\n                spyOn(carousel.slideAdded, 'emit');\n                carousel.add(carousel.get(carousel.current));\n                fixture.detectChanges();\n                expect(carousel.slideAdded.emit).toHaveBeenCalledWith(carousel);\n\n                spyOn(carousel.slideRemoved, 'emit');\n                carousel.remove(carousel.get(carousel.current));\n                fixture.detectChanges();\n                expect(carousel.slideRemoved.emit).toHaveBeenCalledWith(carousel);\n\n                spyOn(carousel.carouselPaused, 'emit');\n                carousel.stop();\n                fixture.detectChanges();\n                expect(carousel.carouselPaused.emit).toHaveBeenCalledWith(carousel);\n\n                spyOn(carousel.carouselPlaying, 'emit');\n                carousel.play();\n                fixture.detectChanges();\n                expect(carousel.carouselPlaying.emit).toHaveBeenCalledWith(carousel);\n\n                done();\n\n            });\n        });\n\n        it('Carousel click handlers', (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n                fixture.detectChanges();\n\n                let prevNav, nextNav,\n                    carousel, carouselNative;\n\n                carouselNative = fixture.componentInstance.viewChild.element_ref.nativeElement;\n                carousel = fixture.componentInstance.viewChild;\n                prevNav = carouselNative.querySelector('a.left');\n                nextNav = carouselNative.querySelector('a.right');\n\n                spyOn(carousel, 'prev');\n                dispatchEv(prevNav, 'click');\n                fixture.detectChanges();\n                expect(carousel.prev).toHaveBeenCalled();\n\n                spyOn(carousel, 'next');\n                dispatchEv(nextNav, 'click');\n                fixture.detectChanges();\n                expect(carousel.next).toHaveBeenCalled();\n\n                done();\n            });\n        });\n\n        it('Carousel keyboard handlers', (done: () => void) => {\n            return builder.createAsync(CarouselTestComponent).then(fixture => {\n                fixture.detectChanges();\n\n                let carousel, carouselNative;\n\n                carouselNative = fixture.componentInstance.viewChild.element_ref.nativeElement;\n                carousel = fixture.componentInstance.viewChild;\n\n                carousel.pause = true;\n                fixture.detectChanges();\n\n                spyOn(carousel, 'prev');\n                carouselNative.dispatchEvent(new KeyboardEvent('keydown', {key: \"ArrowLeft\"}));\n                fixture.detectChanges();\n                expect(carousel.prev).toHaveBeenCalled();\n\n                spyOn(carousel, 'next');\n                carouselNative.dispatchEvent(new KeyboardEvent('keydown', {key: \"ArrowRight\"}));\n                fixture.detectChanges();\n                expect(carousel.next).toHaveBeenCalled();\n\n                done();\n            });\n        });\n    });\n}\n\n@Component({\n    selector: 'test-cmp',\n    template: `<ig-carousel [loop]=\"loop\" [pause]=\"pause\" [interval]=\"interval\">\n                    <ig-slide></ig-slide>\n                    <ig-slide></ig-slide>\n                </ig-carousel>`,\n    directives: [\n        Infragistics.Carousel,\n        Infragistics.Slide\n    ]\n})\nclass CarouselTestComponent {\n    loop = true;\n    pause = false;\n    swipes_left = 0;\n    swipes_right = 0;\n    interval = 2500;\n    taps = 0;\n\n    @ViewChild(Infragistics.Carousel) public viewChild: Infragistics.Carousel;\n}"],"sourceRoot":"/source/"}