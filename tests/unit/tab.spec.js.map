{"version":3,"sources":["tests/unit/tab.spec.ts"],"names":[],"mappings":"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","file":"tests/unit/tab.spec.js","sourcesContent":["// modeled after https://github.com/angular/angular/blob/cee2318110eeea115e5f6fc5bfc814cbaa7d90d8/modules/angular2/test/common/directives/ng_for_spec.ts\n/// <reference path=\"../../typings/globals/jasmine/index.d.ts\" />\n/// <reference path=\"../../typings/globals/es6-shim/index.d.ts\" />\n\nimport { inject, async, fakeAsync, tick } from '@angular/core/testing';\nimport { TestComponentBuilder, ComponentFixture } from '@angular/core/testing';\n\nimport {Component, ViewChild} from '@angular/core';\nimport * as Infragistics from '../../src/main';\n\n// HammerJS simulator from https://github.com/hammerjs/simulator, manual typings TODO\ndeclare var Simulator: any;\n\nexport function main() {\n    describe('Infragistics Angular2 Tab Bar', function() { \n         it('should initialize ig-tab-bar and ig-tabs',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n              var template = '<ig-tab-bar><ig-tab></ig-tab><ig-tab></ig-tab></ig-tab-bar>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => {\n                    var tabBar = fixture.componentInstance.viewChild,\n                        tabs = tabBar.tabs;                 \n                    expect(tabBar).toBeDefined();\n                    expect(tabBar instanceof Infragistics.TabBar).toBeTruthy();\n                    expect(tabs.length).toBe(2);\n                    fixture.detectChanges();\n                    expect(tabs instanceof Array).toBeTruthy();\n                    expect(tabs[0] instanceof Infragistics.Tab).toBeTruthy();\n                    expect(tabs[1] instanceof Infragistics.Tab).toBeTruthy();\n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n         it('should initialize default values of properties',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n                var template = '<ig-tab-bar><ig-tab></ig-tab><ig-tab></ig-tab></ig-tab-bar>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => { \n                    var tabBar = fixture.componentInstance.viewChild;\n                    expect(tabBar.alignment).toBe(\"top\"); \n                    expect(tabBar.selectedIndex).toBeUndefined();       \n                    expect(tabBar.tabs[0].isDisabled).toBeFalsy();\n                    expect(tabBar.tabs[1].isDisabled).toBeFalsy();\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(0);\n                    expect(tabBar.selectedTab).toBe(tabBar.tabs[0]);\n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n        it('should initialize set/get properties',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n              var template = '<ig-tab-bar><ig-tab label=\"Tab 1\" icon=\"icon1\"></ig-tab><ig-tab label=\"Tab 2\" icon=\"icon2\"></ig-tab></ig-tab-bar>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => { \n                    var tabBar = fixture.componentInstance.viewChild,\n                        tabs = tabBar.tabs;\n                    let checkTabProperties = (tabIndex) => { \n                        expect(tabs[tabIndex].label).toBe(\"Tab \" + (tabIndex + 1));\n                        expect(tabs[tabIndex].icon).toBe(\"icon\" + (tabIndex + 1));\n                        expect(tabs[tabIndex].icon).toBe(\"icon\" + (tabIndex + 1));\n                    }; \n                    fixture.detectChanges();\n                    checkTabProperties(0);\n                    checkTabProperties(1);                    \n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n        it('should select/deselect tabs',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n              var template = '<ig-tab-bar><ig-tab></ig-tab><ig-tab></ig-tab></ig-tab-bar>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => { \n                    var tabBar = fixture.componentInstance.viewChild,\n                        tabs = tabBar.tabs,\n                        tab1 = tabs[0],\n                        tab2 = tabs[1];\n                    expect(tabBar.selectedIndex).toBeUndefined();  \n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(0);  \n                    expect(tabBar.selectedTab).toBe(tab1);\n                    tab2.select();\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(1);\n                    expect(tabBar.selectedTab).toBe(tab2);\n                    tabBar.select(0);\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(0);\n                    expect(tabBar.selectedTab).toBe(tab1);\n                    // selected index is out of the range\n                    tabBar.select(3);\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(0);\n                    expect(tabBar.selectedTab).toBe(tab1);\n                    // select disabled tab\n                    tab2.isDisabled = true;\n                    tabBar.select(1);\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(0);\n                    expect(tabBar.selectedTab).toBe(tab1);\n                    // deselected index is out of the range\n                    tabBar.deselect(3);\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBe(0);\n                    expect(tabBar.selectedTab).toBe(tab1);\n                    tab1.deselect();\n                    fixture.detectChanges();\n                    expect(tabBar.selectedIndex).toBeFalsy();\n                    expect(tabBar.selectedTab).toBeFalsy();\n                    \n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n        it('should remove tab',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n                var template = '<ig-tab-bar><ig-tab></ig-tab><ig-tab></ig-tab><ig-tab></ig-tab><ig-tab></ig-tab></ig-tab-bar>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => { \n                    var tabBar = fixture.componentInstance.viewChild, \n                    tabs = tabBar.tabs,\n                    lastTab;\n                    expect(tabs.length).toBe(4);\n                    // remove tab outside the range\n                    tabBar.remove(5);\n                    fixture.detectChanges();\n                    expect(tabs.length).toBe(4);\n                    lastTab = tabs[tabs.length - 1];\n                    tabBar.remove(lastTab.index);\n                    fixture.detectChanges();\n                    expect(tabs.length).toBe(3);\n                    expect(tabs.indexOf(lastTab)).toBe(-1); // the tab is removed and is not part of the tab array\n                    tabBar.remove(0);\n                    fixture.detectChanges();\n                    expect(tabs.length).toBe(2);\n                    expect(tabs[0].index).toBe(0);\n                    expect(tabs[1].index).toBe(1);\n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n        it('should calculate height and marginTop on top alignment',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n                var template = '<div #wrapperDiv><ig-tab-bar><ig-tab label=\"Tab 1\">Content of Tab 1</ig-tab><ig-tab label=\"Tab 2\">Content of Tab 2</ig-tab></ig-tab-bar></div>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => { \n                    var tabBar = fixture.componentInstance.viewChild,\n                        tab1 = tabBar.tabs[0],\n                        tab2 = tabBar.tabs[1],\n                        testWrapperHeight = 600;\n                    fixture.componentInstance.wrapperDiv.nativeElement.style.height = testWrapperHeight + \"px\";\n                    fixture.componentInstance.wrapperDiv.nativeElement.style.position = \"relative\";\n                    expect(tabBar.alignment).toBe(\"top\");\n                    expect(tab1.marginTop).toBeFalsy();\n                    expect(tab2.marginTop).toBeFalsy();\n                    expect(tab1.height).toBeFalsy();\n                    expect(tab2.height).toBeFalsy();\n                    fixture.detectChanges();\n                    expect(tabBar.alignment).toBe(\"top\");\n                    expect(tab1.marginTop).toBe(tabBar.tabListHeight + \"px\");\n                    expect(tab2.marginTop).toBe(tabBar.tabListHeight + \"px\");\n                    expect(tab1.height).toBe(testWrapperHeight - tabBar.tabListHeight + \"px\");\n                    expect(tab2.height).toBe(testWrapperHeight - tabBar.tabListHeight + \"px\");\n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n        it('should calculate height and marginTop on bottom alignment',\n           async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n                var template = '<div #wrapperDiv><ig-tab-bar alignment=\"bottom\"><ig-tab label=\"Tab 1\">Content of Tab 1</ig-tab><ig-tab label=\"Tab 2\">Content of Tab 2</ig-tab></ig-tab-bar></div>';\n                return tcb.overrideTemplate(TabBarTestComponent, template)\n                .createAsync(TabBarTestComponent)\n                .then((fixture) => { \n                    var tabBar = fixture.componentInstance.viewChild,\n                        tab1 = tabBar.tabs[0],\n                        tab2 = tabBar.tabs[1],\n                        testWrapperHeight = 600;\n                    fixture.componentInstance.wrapperDiv.nativeElement.style.height = testWrapperHeight + \"px\";\n                    fixture.componentInstance.wrapperDiv.nativeElement.style.position = \"relative\";\n                    expect(tabBar.alignment).toBe(\"top\");\n                    expect(tab1.marginTop).toBeFalsy();\n                    expect(tab2.marginTop).toBeFalsy();\n                    expect(tab1.height).toBeFalsy();\n                    expect(tab2.height).toBeFalsy();\n                    fixture.detectChanges();\n                    expect(tabBar.alignment).toBe(\"bottom\");\n                    expect(tab1.marginTop).toBe(\"0px\");\n                    expect(tab2.marginTop).toBe(\"0px\");\n                    expect(tab1.height).toBe(testWrapperHeight - tabBar.tabListHeight + \"px\");\n                    expect(tab2.height).toBe(testWrapperHeight - tabBar.tabListHeight + \"px\");\n                }).catch (reason => {\n                    console.log(reason);\n                    return Promise.reject(reason);\n                });\n         })));\n         // end of tests\n    });\n}\n\n@Component({\n    selector: 'test-cmp',\n    template: '<div></div>', //\"Component 'TestComponent' must have either 'template' or 'templateUrl' set.\"\n    directives: [\n        Infragistics.TabBar,\n        Infragistics.Tab\n    ]\n})\nclass TabBarTestComponent {\n     @ViewChild(Infragistics.TabBar) viewChild: Infragistics.TabBar;\n     @ViewChild(\"wrapperDiv\") wrapperDiv;\n}\n\n@Component({\n    selector: 'test-cmp', \n    template: '<div></div>', //\"Component 'TestComponent' must have either 'template' or 'templateUrl' set.\"\n    directives: [Infragistics.Tab]\n})\nclass TabTestComponent {\n     @ViewChild(Infragistics.TabBar) viewChild: Infragistics.Tab;\n}\n\n//class TestComponentPin extends TestComponentDI {\n     //pin: boolean = true;\n     //enableGestures: string = \"\";\n//}"],"sourceRoot":"/source/"}