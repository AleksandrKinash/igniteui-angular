////
/// @group themes
/// @access public
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// Chip Theme
/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @param {Color} $text-color [rgba(0, 0, 0, .74)] - The chip text color.
/// @param {Color} $background [rgba(0, 0, 0, .04)] - The chip background color.
/// @param {Color} $border-color [transparent] - The chip border color.
///
/// @param {Color} $hover-text-color [rgba(0, 0, 0, .74)] - The chip text hover color.
/// @param {Color} $hover-background [rgba(0, 0, 0, .08)] - The chip hover background color.
/// @param {Color} $hover-border-color [transparent] - The chip hover border color.
///
/// @param {color} $selected-text-color [igx-contrast-color of secondary 500] - The selected chip text color.
/// @param {color} $selected-background [secondary 500] - The selected chip background color.
/// @param {color} $selected-border-color [primary 300] The selected chip border color.
///
/// @param {color} $hover-selected-text-color [igx-contrast-color of secondary 300] - The selected chip hover text color.
/// @param {color} $hover-selected-background [secondary 300] - The selected chip hover background color.
/// @param {color} $hover-selected-border-color [secondary 900] - The selected chip hover border color.
///
/// @param {color} $focus-selected-text-color [igx-contrast-color of secondary 300] - The selected chip text focus color.
/// @param {color} $focus-selected-background [secondary 300] - The selected chip focus background color.
/// @param {color} $focus-selected-border-color [secondary 900] - The selected chip focus border color.
///
///
/// @requires extend
/// @requires text-contrast
/// @requires igx-color
///
/// @example scss Change the background color
///   $my-chip-theme: igx-chip-theme($chip-background: black);
///   // Pass the theme to the igx-chip component mixin
///   @include igx-chip($my-chip-theme);
@function igx-chip-theme(
    $palette: $default-palette,

    $text-color: null,
    $background: null,
    $border-color: null,

    $hover-text-color: null,
    $hover-background: null,
    $hover-border-color: null,

    $focus-text-color: null,
    $focus-background: null,
    $focus-border-color: null,

    $selected-text-color: null,
    $selected-background: null,
    $selected-border-color: null,

    $hover-selected-text-color: null,
    $hover-selected-background: null,
    $hover-selected-border-color: null,

    $focus-selected-text-color: null,
    $focus-selected-background: null,
    $focus-selected-border-color: null
) {
    $default-theme: (
        name: 'igx-chip',
        text-color: igx-color($palette, grays, 700),
        background: igx-color($palette, grays, 200),
        border-color: transparent,

        hover-text-color: igx-color($palette, grays, 700),
        hover-background: igx-color($palette, grays, 300),
        hover-border-color: transparent,

        focus-text-color: igx-color($palette, grays, 700),
        focus-background: igx-color($palette, grays, 300),
        focus-border-color: transparent,

        selected-text-color: igx-contrast-color($palette, 'grays', 400),
        selected-background: igx-color($palette, 'grays', 400),
        selected-border-color: igx-color($palette, 'grays', 800),

        hover-selected-text-color: igx-contrast-color($palette, 'secondary', 300),
        hover-selected-background: igx-color($palette, secondary, 300),
        hover-selected-border-color: igx-color($palette, secondary, 900),

        focus-selected-text-color: igx-contrast-color($palette, 'secondary', 300),
        focus-selected-background: igx-color($palette, secondary, 300),
        focus-selected-border-color: igx-color($palette, secondary, 900)
    );

    @if not($text-color) and $background {
        $text-color: text-contrast($background);
    }

    @if not($hover-background) and $background {
        $hover-background: darken($background, 5%);
    }

    @if not($hover-text-color) and $hover-background {
        $hover-text-color: text-contrast($hover-background);
    }

    @if not($focus-background) and $background {
        $focus-background: darken($background, 5%);
    }

    @if not($focus-text-color) and $focus-background {
        $focus-text-color: text-contrast($focus-background);
    }

    @if not($selected-text-color) and $selected-background {
        $selected-text-color: text-contrast($selected-background);
    }

    @if not($hover-selected-text-color) and $hover-selected-background {
        $hover-selected-text-color: text-contrast($hover-selected-background);
    }

    @return extend($default-theme, (
        palette: $palette,

        text-color: $text-color,
        background: $background,
        border-color: $border-color,

        hover-text-color: $hover-text-color,
        hover-background: $hover-background,
        hover-border-color: $hover-border-color,

        focus-text-color: $focus-text-color,
        focus-background: $focus-background,
        focus-border-color: $focus-border-color,

        selected-text-color: $selected-text-color,
        selected-background: $selected-background,
        selected-border-color: $selected-border-color,

        hover-selected-text-color: $hover-selected-text-color,
        hover-selected-background: $hover-selected-background,
        hover-selected-border-color: $hover-selected-border-color,

        focus-selected-text-color: $focus-selected-text-color,
        focus-selected-background: $focus-selected-background,
        focus-selected-border-color: $focus-selected-border-color
    ));
}

/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} igx-root-css-vars
/// @requires rem
/// @requires --var
@mixin igx-chip($theme) {
    @include igx-root-css-vars($theme);

    $transition: all 120ms $ease-in-out-cubic;
    $chip-max-width: rem(170px);
    $chip-min-width: rem(96px);

    $chip-height: (
        comfortable: rem(32px),
        cosy: rem(24px),
        compact: rem(24px)
    );

    $chip-padding: (
        comfortable: 0 rem(8px),
        cosy: 0 rem(4px),
        compact: 0 rem(2px)
    );

    $transition: all 120ms $ease-in-out-cubic;

    %igx-chips-area {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        flex-wrap: wrap;
        width: 100%;

        &:empty {
            display: none;
        }
    }

    %igx-chip {
        position: relative;
        display: inline-flex;
        transition-property: top, left;
        touch-action: none;

        igx-icon {
            width: rem(18px);
            height: rem(18px);
            font-size: rem(18px);
            outline-style: none;
        }

        &:focus {
            outline-style: none;
        }
    }

    %igx-chip__prefix,
    %igx-chip__suffix {
        display: inline-flex;
        align-items: center;
    }

    %igx-chip__item {
        display: flex;
        align-items: center;
        justify-content: center;
        height: map-get($chip-height, 'comfortable');
        padding: 0 rem(4px);
        color: --var($theme, 'text-color');
        background: --var($theme, 'background');
        border: 1px solid transparent;
        border-radius: map-get($chip-height, 'comfortable') / 2;
        user-select: none;
        cursor: pointer;
        transition: $transition;

        &:hover {
            color: --var($theme, 'hover-text-color');
            background: --var($theme, 'hover-background');
        }

        &:focus{
            color: --var($theme, 'focus-text-color');
            background: --var($theme, 'focus-background');
            outline-style: none;
        }
    }

    %igx-chip__content {
        @include ellipsis();
        padding: 0 rem(8px);
        max-width: $chip-max-width;
    }

    %igx-chip__remove {
        display: inline-flex;
        color: currentColor;
        margin-right: rem(4px);

        &:empty {
            display: none;
        }
    }

    %igx-chip__item--cosy {
        border-radius: map-get($chip-height, 'cosy') / 2;
        height: map-get($chip-height, 'cosy');
        padding: map-get($chip-padding, 'cosy');
    }

    %igx-chip__item--compact {
        border-radius: map-get($chip-height, 'compact') / 2;
        height: map-get($chip-height, 'compact');
        padding: map-get($chip-padding, 'compact');
    }

    %igx-chip__item--selected {
        background: --var($theme, 'selected-background');

        &:hover {
            background: --var($theme, 'hover-selected-background');
            border-color: --var($theme, 'hover-selected-border-color');
        }

        &:focus {
            background: --var($theme, 'focus-selected-background');
            border-color: --var($theme, 'focus-selected-border-color');
        }
    }

    %igx-chip--cosy {
        %igx-chip__item {
            border-radius: map-get($chip-height, 'cosy') / 2;
            height: map-get($chip-height, 'cosy');
        }
    }

    %igx-chip--compact {
        %igx-chip__item {
            border-radius: map-get($chip-height, 'compact') / 2;
            height: map-get($chip-height, 'compact');
        }
    }

    %igx-chip--disabled {
        %igx-chip__item {
            cursor: default;
            pointer-events: none;
        }
    }

    %igx-chip__ghost {
        position: absolute;
        z-index: 10;
    }

    %igx-chip__ghost--cosy {
        border-radius: map-get($chip-height, 'cosy') / 2;
        height: map-get($chip-height, 'cosy');
        padding: map-get($chip-padding, 'cosy');
    }

    %igx-chip__ghost--compact {
        border-radius: map-get($chip-height, 'compact') / 2;
        height: map-get($chip-height, 'compact');
        padding: map-get($chip-padding, 'compact');
    }
}

/// Adds typography styles for the igx-chip component.
/// Uses the 'body-2'
/// category from the typographic scale.
/// @group typography
/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.
/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.
/// @requires {mixin} igx-type-style
@mixin igx-chip-typography($type-scale, $categories: (text: 'body-2')) {
    $text: map-get($categories, 'text');

    @include igx-scope('.igx-typography') {
        %igx-chip {
            @include igx-type-style($type-scale, $text) {
                font-weight: 600;
            }
        }
    }
}
