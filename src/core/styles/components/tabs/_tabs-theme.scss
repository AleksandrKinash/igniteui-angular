////
/// @group themes
/// @access public
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// If only background color is specified,
/// the idle item color will be assigned automatically to a contrasting color.
/// @param {Color} $header-background [null] - The background color used for the tabs header.
/// @param {Color} $item-text-color [null] - The text-color used for the tabs.
/// @param {Color} $item-active-color [null] - The color used for the active tab text color.
/// @param {Color} $indicator-color [null] - The color used for the active tab indicator.
/// @param {Color} $item-focus-bg [null] - The background color used for the selected/focused tab.
/// @param {Color} $button-icon-color [null] - The color used for the button icon/text color.
/// @param {Color} $button-background [null] - The color used for the button background.
/// @param {Color} $button-background [null] - The color used for the button background when is on :hover.
/// @requires text-contrast
/// @example scss Set a custom background color
///   $my-tabs-theme: igx-tabs-theme(
//      $header-background: black
//    );
///   // Pass the theme to the igx-tabs component mixin
///   @include igx-tabs($my-tabs-theme);
@function igx-tabs-theme(
    // Normal/hover
    $item-background: null,
    $item-hover-background: null,
    $item-text-color: null,
    $item-hover-color: null,

    // Focus/Active
    $item-active-color: null,
    $item-active-icon-color: null,
    $item-active-background: null,
    $indicator-color: null,

    $button-color: null,
    $button-background: null,
    $button-hover-background: null,
    $button-hover-color: null,

    $tabs-riple-color: null,
    $buttons-riple-color: null
) {

    @if not($item-text-color) and $item-background {
        $item-text-color: text-contrast($item-background);
    }

    @if not($item-hover-color) and $item-hover-background {
        $item-hover-color: text-contrast($item-hover-background);
    }

    @if not($button-color) and $button-background {
        $button-color: text-contrast($button-background);
    }

    @if not($button-hover-color) and $button-hover-background {
        $button-hover-color: text-contrast($button-hover-background);
    }

    @if not($tabs-riple-color) and $item-active-background {
        $tabs-riple-color: text-contrast($item-active-background);
    }

    @if not($tabs-riple-color) and $item-background {
        $tabs-riple-color: text-contrast($item-background);
    }

    @if not($buttons-riple-color) and $button-background {
        $buttons-riple-color: text-contrast($button-background);
    }

    @return (
        item-text-color: $item-text-color,
        item-background: $item-background,
        item-hover-color: $item-hover-color,
        item-hover-background: $item-hover-background,
        item-active-color: $item-active-color,
        item-active-icon-color: $item-active-icon-color,
        item-active-background: $item-active-background,
        indicator-color: $indicator-color,
        button-color: $button-color,
        button-background: $button-background,
        button-hover-background:$button-hover-background,
        button-hover-color:$button-hover-color,
        tabs-riple-color: $tabs-riple-color,
        buttons-riple-color: $buttons-riple-color,
    );
}

/// @param {Map} $theme - The theme used to style the component.
/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @requires igx-tabs-theme
/// @requires igx-color
/// @requires igx-elevation
/// @requires extend
/// @requires {mixin} ellipsis
/// @requires rem
@mixin igx-tabs($theme, $palette: $default-palette) {
    $default-theme: igx-tabs-theme(
        $item-text-color: igx-color($palette, 'grays', 600),
        $item-background: white,
        $item-hover-color: igx-color($palette, 'grays', 600),
        $item-hover-background: igx-color($palette, 'grays', 200),
        $item-active-color: igx-color($palette, 'grays', 800),
        $item-active-icon-color: igx-color($palette, 'primary', 500),
        $item-active-background: igx-color($palette, 'grays', 200),
        $indicator-color: igx-color($palette, 'primary', 500),
        $button-color: igx-color($palette, 'grays', 500),
        $button-background: white,
        $button-hover-background: igx-color($palette, 'grays', 100),
        $button-hover-color: igx-color($palette, 'grays', 600),
        $tabs-riple-color: igx-color($palette, 'grays', 100),
        $buttons-riple-color: igx-color($palette, 'grays', 100)
    );

    $this: extend($default-theme, $theme);

    // @debug $this;
    $item-min-width: 160px;
    $item-max-width: 264px;
    $item-padding: 0 rem(24px);
    $tabs-height: rem(48px);
    $tabs-height-icon: rem(77px);
    $label-font-size: rem(14px, 16px);
    $label-line-height: rem(12px, 16px);
    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);
    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);

    %igx-tabs {
        display: flex;
        flex-direction: column;
    }

    // HEADER
    %igx-tabs__header {
        display: flex;
        align-items: center;
        overflow: hidden;
    }

    // ITEM WRAPPER
    %igx-tabs__header-wrapper-fixed {
        flex: 1 1 auto;
        overflow: hidden;
    }

    // ITEM HOLDER (The element that scrolls)
    %igx-tabs__header-wrapper-fluid {
        display: inline-flex;
        align-items: center;
        position: relative;
        flex-wrap: nowrap;
        transition: transform .2s $tabs-animation-function;
    }

    // MENU ITEM
    %igx-tabs__header-menu-item {
        display: inline-flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        min-width: $item-min-width;
        max-width: $item-max-width;
        height: $tabs-height;
        // Flex basis & shrink are Needed for IE11
        flex-basis: auto;
        flex-shrink: 0;
        padding: $item-padding;
        overflow: hidden;
        cursor: pointer;
        position: relative;
        transition: background .3s $tabs-animation-function;
        user-select: none;
        background: map-get($this, 'item-background');
        color: map-get($this, 'item-text-color');

        &::-moz-focus-inner {
            border: 0;
        }

        &:focus {
            background: map-get($this, 'item-active-background');
            color: map-get($this, 'item-active-color');
        }

        &:hover {
            background: map-get($this, 'item-hover-background');
            color: map-get($this, 'item-hover-color');
        }

        @include igx-ripple((
            color: map-get($this, 'tabs-riple-color')
        ));
    }

    %igx-tabs__header-menu-item--disabled {
        opacity: .5;
        cursor: default;
        pointer-events: none;
    }

    %igx-tabs__header-menu-item--selected {
        background: map-get($this, 'item-active-background');
        color: map-get($this, 'item-active-color');

        &:hover {
            background: map-get($this, 'item-active-background');
            color: map-get($this, 'item-active-color');
        }

        %igx-tabs__header-menu-item-icon {
            color: map-get($this, 'item-active-icon-color')
        }
    }

    %igx-tabs__header-menu-item-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        padding-bottom: rem(10px);
    }

    %igx-tabs__header-menu-item-indicator {
        position: absolute;
        bottom: 0;
        transform: translateX(0);
        height: 2px;
        min-width: rem(160px);
        background: map-get($this, 'indicator-color');
        transition: transform .3s $tabs-animation-function, width .5s $tabs-animation-function;
    }

    // SCROLL BUTTONS
    %igx-tabs__header-button {
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        padding: 0;
        min-width: rem(48px);
        width: rem(48px);
        min-height: $tabs-height;
        height: $tabs-height;
        cursor: pointer;
        box-shadow: igx-elevation($elevations, 8);
        position: relative;
        background: map-get($this, 'button-background');
        color: map-get($this, 'button-color');

        &:hover {
            background: map-get($this, 'button-hover-background');
            color: map-get($this, 'button-hover-color');
        }

        &:focus {
            outline: 0;
            background: map-get($this, 'button-hover-background');
        }

        &::-moz-focus-inner {
            border: 0;
        }

        .igx-icon {
            line-height: rem(28px, 16px);
        }

        @include igx-ripple((
            color: map-get($this, 'buttons-riple-color')
        ));
    }

    %igx-tabs__header-button--active {
        box-shadow: igx-elevation($elevations, 8);
    }

    // LABELS
    %igx-tabs__item-label {
        @include ellipsis();
        font-size: $label-font-size;
        line-height: $label-line-height;
        max-width: 100%;
        text-align: center;
    }

    %igx-tabs__content-fixed {
        flex: 1 1 auto;
        overflow: hidden;
    }

    %igx-tabs__content-fluid {
        display: inline-flex;
        align-items: center;
        position: relative;
        flex-wrap: nowrap;
    }

    %igx-tabs__group {
        min-width: 100%;
        display: none;
        transition: transform .3s $tabs-animation-function;
    }

    %igx-tabs__group--selected {
        display: inline-flex;
        min-width: 100%;
    }

    %igx-tabs--fixed {
        %igx-tabs__header-wrapper-fluid {
            display: flex;
        }

        %igx-tabs__header-menu-item {
            flex: 1 1 auto;
        }
    }

    %igx-tabs--icons {
        %igx-tabs__header-button
        %igx-tabs__header-menu-item {
            min-height: $tabs-height-icon;
            height: $tabs-height-icon;
        }
    }
}

