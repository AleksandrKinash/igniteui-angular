$component-name: 'igx-snackbar';

$components: register-component($components, #{$component-name});

@function igx-snackbar-theme(
    $background: null,
    $text-color: null,
    $button-color: null
) {
    @if not($button-color) and $background {
        $button-color: text-contrast($background);
    }

    @if not($text-color) and $background {
        $text-color: text-contrast($background);
    }

    @return (
        background: $background,
        text-color: $text-color,
        button-color: $button-color
    );
}

@mixin igx-snackbar($theme, $palette: $default-palette) {
    $default-theme: igx-snackbar-theme(
        $background: #323232,
        $text-color: #fff,
        $button-color: igx-color($palette, 'secondary')
    );

    $this: extend($default-theme, $theme);

    // @debug $this;

    $snackbar-min-height: rem(48px) !default;
    $snackbar-padding: rem(7px) rem(24px) !default;
    $snackbar-button-left-margin: rem(24px) !default;
    $snackbar-font-size: rem(14px) !default;
    $snackbar-button-line-height: rem(16px) !default;
    $snackbar-button-font-weight: 600 !default;

    %igx-snackbar-display {
        position: relative;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: space-between;
        min-height: $snackbar-min-height;
        padding: $snackbar-padding;
        color: map-get($this, 'text-color');
        background: map-get($this, 'background');
        backface-visibility: hidden;
    }

    %igx-snackbar-message {
        font-size: $snackbar-font-size;
    }

    %igx-snackbar-button {
        background: transparent;
        color: map-get($this, 'button-color');
        border: 0;
        line-height: $snackbar-button-line-height;
        margin-left: $snackbar-button-left-margin;
        text-transform: uppercase;
        user-select: none;
        font-weight: $snackbar-button-font-weight;
        -webkit-tap-highlight-color: transparent;
        outline: none;
        transition: color .2s ease;

        &:hover {
            color: map-get($this, 'button-color');
        }
    }
}
