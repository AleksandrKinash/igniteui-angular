{"version":3,"sources":["../../base/_normalize.scss","../../base/utilities/_quirks.scss","../../base/utilities/_bem.scss","../../components/_common/_igx-display-container.scss","../../components/_common/_igx-vhelper.scss","../../components/_common/_igx-toggle.scss","../../typography/_typography.scss","../_palettes.scss","../../base/utilities/_functions.scss","../../base/utilities/_mixins.scss","../../components/ripple/_ripple-theme.scss","../../components/avatar/_avatar-theme.scss","../../components/badge/_badge-theme.scss","../../components/bottom-nav/_bottom-nav-theme.scss","../../base/elevations/_index.scss","../../base/animations/_easings.scss","../../components/button/_button-theme.scss","../../components/button-group/_button-group-theme.scss","../../components/calendar/_calendar-theme.scss","../../components/card/_card-theme.scss","../../base/animations/entrances/_scale.scss","../../base/animations/exits/_scale.scss","../../components/carousel/_carousel-theme.scss","../../base/animations/generic/_scale.scss","../../components/checkbox/_checkbox-theme.scss","../../components/date-picker/_date-picker-theme.scss","../../components/dialog/_dialog-theme.scss","../../components/grid/_grid-theme.scss","../../components/grid-filtering/_grid-filtering-theme.scss","../../components/grid-summary/_grid-summary-theme.scss","../../components/icon/_icon-theme.scss","../../components/input/_input-group-theme.scss","../../components/list/_list-theme.scss","../../components/navbar/_navbar-theme.scss","../../components/navdrawer/_navdrawer-theme.scss","../../components/grid-paginator/_grid-paginator-theme.scss","../../components/progress/_progress-theme.scss","../../components/radio/_radio-theme.scss","../../components/slider/_slider-theme.scss","../../components/snackbar/_snackbar-theme.scss","../../components/switch/_switch-theme.scss","../../components/tabs/_tabs-theme.scss","../../components/toast/_toast-theme.scss","../../components/time-picker/_time-picker-theme.scss"],"names":[],"mappings":"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","file":"../igniteui-angular.css","sourcesContent":["html {\r\n    box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n    box-sizing: inherit;\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n    color: inherit;\r\n    font: inherit;\r\n    margin: 0;\r\n}\r\n\r\ntextarea {\r\n    overflow: auto;\r\n}\r\n\r\nbutton,\r\nhtml input[type='button'],\r\ninput[type='reset'],\r\ninput[type='submit'] {\r\n    -webkit-appearance: button;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n    cursor: default;\r\n}\r\n\r\ninput[type='number']::-webkit-outer-spin-button {\r\n    height: auto;\r\n}\r\n\r\ninput[type='search']::-webkit-search-cancel-button,\r\ninput[type='search']::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n}\r\n\r\nhtml,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\nsub,\r\nsup,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    vertical-align: baseline\r\n}\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\nsection {\r\n    display: block\r\n}\r\n\r\nol,\r\nul {\r\n    list-style: none\r\n}\r\n\r\nblockquote,\r\nq {\r\n    quotes: none\r\n}\r\n\r\nblockquote::before,\r\nblockquote::after,\r\nq::before,\r\nq::after {\r\n    content: '';\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0\r\n}\r\n","// Angular hack for binding to [hidden] property\n// not working \n[hidden] {\n    display: none !important;\n}\n","////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type String - The Element separator used. Default '__'.\n$bem--sep-elem: if(variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n/// @type String - The Modifier separator used. Default '--'.\n$bem--sep-mod: if(variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n/// @type String - The Modifier Value separator used. Default '-'.\n$bem--sep-mod-val: if(variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n/// @returns {String}\n@function bem--selector-to-string($s) {\n    @if $s == null {\n        @return '';\n    }\n    //cast to string\n    $s: inspect($s);\n    @if str-index($s, '(') {\n        // ruby sass => \"(selector,)\"\n        @return str-slice($s, 2, -3);\n    } @else {\n        // libsass => \"selector\"\n        @return str-slice($s, 1, -1);\n    }\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n/// @returns {String}\n/// @example scss - Returns\n///   .#{$x}\n@function bem--with-dot($x) {\n    $first: str-slice($x, 0, 1);\n    @return if($first=='.', $x, '.'+$x);\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n/// @param {List} $m - The modifier list to get converted.\n/// @returns {String}\n@function bem--mod-str($m) {\n    @if type-of($m) == 'map' {\n        $mm: nth($m, 1);\n        @return nth($mm, 1) + $bem--sep-mod-val + nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block__element\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block--modifier .block__element\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return str-index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return str-index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return str-index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return str-slice($x, 1, str-index($x, $bem--sep-mod)-1);\n    } @else if bem--contains-elem($x) {\n        @return str-slice($x, 1, str-index($x, $bem--sep-elem)-1);\n    } @else if bem--contains-pseudo($x) {\n        @return str-slice($x, 1, str-index($x, ':')-1);\n    }\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n/// @param {String} $x - The selector to search for.\n/// @returns {String}\n@function bem--extract-first-selector($x) {\n    $eow: str-index($x, ' ') or -1;\n    @return str-slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access public\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem,emod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n    @if not ($elem or $mods) {\n        @return $block;\n    }\n    @if $elem {\n        // User passed an element-specific modifier\n        @if (type-of($elem) == list) and nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if type-of(nth($elem, 2)) == list {\n                @error 'Only one element-modifier allowed.';\n            }\n            $elem: str-slice(bem-selector(nth($elem, 1), $m: nth($elem, 2)), 2);\n        }\n        $elem: bem--elem-str($block, $elem);\n    }\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n    @if type-of($mods) != list {\n        $mods: ($mods, );\n    }\n    $bemcls: '';\n    @for $i from 1 to length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, nth($mods, $i)) + ', ';\n    }\n    $bemcls: $bemcls + bem--bem-str($block, $elem, nth($mods, -1));\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public\n/// @param {String} $block - The block name.\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n@mixin bem-elem($elem, $m: null, $mod: null) {\n    $this: bem--selector-to-string(&);\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bemerald doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n    $mod: $m or $mod;\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    @if not (bem--contains-pseudo($this) or bem--contains-mod($this)) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .myblock__myelem { ... }\n        @at-root {\n            #{bem-selector($block, $e: ($elem, $mod))} {\n                @content;\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .myblock:active .myblock__myelem { ... }\n        // .myblock--mymod .myblock__myelem { ... }\n        @at-root {\n            $selector: bem--extract-first-selector($this) + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            #{$selector} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n    @if (bem--contains-elem($this)) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n    @if (bem--contains-pseudo($this)) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n        @if (bem--contains-elem($this)) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n        @if (bem--contains-pseudo($this)) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n        $mod-classes: append($mod-classes, #{bem-selector($block: $this, $m: $mod)})\n    }\n    @at-root {\n        #{implode($mod-classes)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n@mixin elem($elem, $m: null, $mod: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n@mixin e($elem, $m: null, $mod: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","﻿%display-container {\r\n    display: inherit;\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n%display-container--inactive {\r\n    width: 100%;\r\n}\r\n\r\n@include b(igx-display-container) {\r\n    @extend %display-container !optional;\r\n\r\n    @include m(inactive) {\r\n        @extend %display-container--inactive !optional;\r\n    }\r\n}\r\n","%vhelper-display {\r\n    display: block;\r\n    overflow: auto;\r\n    z-index: 24;\r\n}\r\n\r\n%vhelper--vertical {\r\n    position: absolute;\r\n    width: 18px;\r\n    top: 0;\r\n    right: 0;\r\n}\r\n\r\n%vhelper--horizontal {\r\n    width: 100%;\r\n}\r\n\r\n%vhelper-content--vertical {\r\n    width: 1px;\r\n}\r\n\r\n%vhelper-content--horizontal {\r\n    height: 1px;\r\n}\r\n\r\n@include b(igx-vhelper) {\r\n    @include m(vertical) {\r\n        @extend %vhelper-display !optional;\r\n        @extend %vhelper--vertical !optional;\r\n\r\n        @include e(placeholder-content) {\r\n            @extend %vhelper-content--vertical !optional;\r\n        }\r\n    }\r\n\r\n    @include m(horizontal) {\r\n        @extend %vhelper-display !optional;\r\n        @extend %vhelper--horizontal !optional;\r\n\r\n        @include e(placeholder-content) {\r\n            @extend %vhelper-content--horizontal !optional;\r\n        }\r\n    }\r\n}\r\n","%igx-toggle--hidden {\n    display: none !important;\n}\n\n@include b(igx-toggle) {\n    @include m(hidden) {\n        @extend %igx-toggle--hidden !optional;\n    }\n}\n","////\n/// @group typography\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n\n/// Defines the typography used in\n/// the application.\n/// @param {Map} $config\n@mixin igx-typography($config) {\n    $font-family: map-get($config, 'font-family');\n    $font-weight: 400;\n    $font-weight-headings: 600;\n    $link-color: igx-color($default-palette, 'secondary');\n\n    // paragraph\n    $paragraph-margin-top: 0;\n    $paragraph-margin-bottom: rem(27px);\n    $paragraph-line-height-desktop: rem(27px);\n    $paragraph-line-height-phone: rem(22px);\n    // H1\n    $h1-margin-top: rem(27px);\n    $h1-margin-bottom: rem(54px);\n    $h1-font-size-desktop: rem(48px);\n    $h1-line-height-desktop: rem(54px);\n    $h1-font-size-tablet: rem(40px);\n    $h1-line-height-tablet: rem(45px);\n    $h1-font-size-phone: rem(32px);\n    $h1-line-height-phone: rem(40px);\n    // H2\n    $h2-margin-top: rem(27px);\n    $h2-margin-bottom: rem(27px);\n    $h2-font-size-desktop: rem(36px);\n    $h2-line-height-desktop: rem(45px);\n    $h2-font-size-tablet: rem(32px);\n    $h2-line-height-tablet: rem(40px);\n    $h2-font-size-phone: rem(26px);\n    $h2-line-height-phone: rem(30px);\n    // H3\n    $h3-margin-top: rem(27px);\n    $h3-margin-bottom: 0;\n    $h3-font-size-desktop: rem(28px);\n    $h3-line-height-desktop: rem(35px);\n    $h3-font-size-tablet: rem(24px);\n    $h3-line-height-tablet: rem(30px);\n    $h3-font-size-phone: rem(22px);\n    $h3-line-height-phone: rem(27px);\n    // H4\n    $h4-margin-top: rem(27px);\n    $h4-margin-bottom: 0;\n    $h4-font-size-desktop: rem(18px);\n    $h4-line-height-desktop: rem(22px);\n    $h4-font-size-tablet: rem(18px);\n    $h4-line-height-tablet: rem(22px);\n    $h4-font-size-phone: rem(22px);\n    $h4-line-height-phone: rem(27px);\n    // Blockquote\n    $blockquote-font-size-desktop: rem(24px);\n    $blockquote-line-height-desktop: rem(35px);\n    $blockquote-font-size-tablet: rem(24px);\n    $blockquote-line-height-tablet: rem(35px);\n    $blockquote-font-size-phone: rem(20px);\n    $blockquote-line-height-phone: rem(27px);\n\n\n    $medium-screen: 768px;\n    $large-screen: 1024px;\n\n    a {\n        text-decoration: none;\n        color: $link-color;\n    }\n\n    html {\n        font-size: $browser-context;\n        line-height: $browser-line-height;\n        font-size-adjust: 100%;\n        font-family: $font-family, sans-serif;\n        font-weight: $font-weight;\n        color: igx-color($default-palette, 'grays', 800);\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        font-weight: $font-weight-headings;\n    }\n\n    ul,\n    ol,\n    pre,\n    table,\n    blockquote {\n        margin-top: 0;\n        margin-bottom: 1.6875rem;\n    }\n\n    ul ul,\n    ol ol,\n    ul ol,\n    ol ul {\n        margin-top: 0;\n        margin-bottom: 0;\n    }\n\n    blockquote {\n        font-size: $blockquote-font-size-desktop;\n        line-height: $blockquote-line-height-tablet;\n        font-style: italic;\n\n        &::before,\n        &::after {\n            content: '\\'';\n        }\n    }\n\n    /* Let's make sure all's aligned */\n    hr {\n        margin: -1px 0;\n        border: 1px solid;\n    }\n\n    a,\n    b,\n    i,\n    strong,\n    em,\n    small,\n    code {\n        line-height: 0;\n    }\n\n    sub,\n    sup {\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n    }\n\n    sup {\n        top: -.5em;\n    }\n\n    sub {\n        bottom: -.25em;\n    }\n\n    @media only screen and (min-width: 0) {\n        h1 {\n            font-size: $h1-font-size-phone;\n            line-height: $h1-line-height-phone;\n            margin-top: $h1-margin-top;\n            margin-bottom: $h1-margin-bottom;\n        }\n\n        h2 {\n            font-size: $h2-font-size-phone;\n            line-height: $h2-line-height-phone;\n            margin-top: $h2-margin-top;\n            margin-bottom: $h2-margin-bottom;\n        }\n\n        h3 {\n            font-size: $h3-font-size-phone;\n            line-height: $h3-line-height-phone;\n            margin-top: $h3-margin-top;\n            margin-bottom: $h3-margin-bottom;\n        }\n\n        h4 {\n            font-size: $h4-font-size-phone;\n            line-height: $h4-line-height-phone;\n            margin-top: $h4-margin-top;\n            margin-bottom: $h4-margin-bottom;\n        }\n\n        p {\n            line-height: $paragraph-line-height-phone;\n            margin-top: $paragraph-margin-top;\n            margin-bottom: $paragraph-margin-bottom;\n        }\n    }\n\n    @media only screen and (min-width: $medium-screen) {\n        h1 {\n            font-size: $h1-font-size-tablet;\n            line-height: $h1-line-height-tablet;\n            margin-top: $h1-margin-top;\n            margin-bottom: $h1-margin-bottom;\n        }\n\n        h2 {\n            font-size: $h2-font-size-tablet;\n            line-height: $h2-line-height-tablet;\n            margin-top: $h2-margin-top;\n            margin-bottom: $h2-margin-bottom;\n        }\n\n        h3 {\n            font-size: $h3-font-size-tablet;\n            line-height: $h3-line-height-tablet;\n            margin-top: $h3-margin-top;\n            margin-bottom: $h3-margin-bottom;\n        }\n\n        h4 {\n            font-size: $h4-font-size-tablet;\n            line-height: $h4-line-height-tablet;\n            margin-top: $h4-margin-top;\n            margin-bottom: $h4-margin-bottom;\n        }\n\n        p {\n            line-height: $paragraph-line-height-desktop;\n            margin-top: $paragraph-margin-top;\n            margin-bottom: $paragraph-margin-bottom;\n        }\n    }\n\n    @media only screen and (min-width: $large-screen) {\n        h1 {\n            font-size: $h1-font-size-desktop;\n            line-height: $h1-line-height-desktop;\n            margin-top: $h1-margin-top;\n            margin-bottom: $h1-margin-bottom;\n        }\n\n        h2 {\n            font-size: $h2-font-size-desktop;\n            line-height: $h2-line-height-desktop;\n            margin-top: $h2-margin-top;\n            margin-bottom: $h2-margin-bottom;\n        }\n\n        h3 {\n            font-size: $h3-font-size-desktop;\n            line-height: $h3-line-height-desktop;\n            margin-top: $h3-margin-top;\n            margin-bottom: $h3-margin-bottom;\n        }\n\n        h4 {\n            font-size: $h4-font-size-desktop;\n            line-height: $h4-line-height-desktop;\n            margin-top: $h4-margin-top;\n            margin-bottom: $h4-margin-bottom;\n        }\n\n        p {\n            margin-top: $paragraph-margin-top;\n            margin-bottom: $paragraph-margin-bottom;\n        }\n    }\n}\n","/// Default theme palette.\n/// Will be the one used if no theme palette is specified.\n/// @group palettes\n/// @type Map\n/// @prop {Map} primary - The primary sub-palette created from the primary color.\n/// @prop {Map} secondary - The secondary sub-palette created from the secondary color.\n/// @prop {Map} grays - The grays sub-palette. Included by default in every igx-palette.\n/// @prop {Color} primary.100 [#a7d9fa] - The 100 variant of the `primary` color.\n/// @prop {Color} primary.200 [#6dbcf1] - The 200 variant of the `primary` color.\n/// @prop {Color} primary.300 [#3ca9f2] - The 300 variant of the `primary` color.\n/// @prop {Color} primary.400 [#1da0f7] - The 400 variant of the `primary` color.\n/// @prop {Color} primary.500 [#09f] - The 500 variant of the `primary` color (default).\n/// @prop {Color} primary.600 [#0089e5] - The 600 variant of the `primary` color.\n/// @prop {Color} primary.700 [#007ed2] - The 700 variant of the `primary` color.\n/// @prop {Color} primary.800 [#0072be] - The 800 variant of the `primary` color.\n/// @prop {Color} primary.900 [#0065a8] - The 900 variant of the `primary` color.\n/// @prop {Color} primary.A100 [#55bbff] - The A100 variant of the `primary` color.\n/// @prop {Color} primary.A200 [#27a9ff] - The A200 variant of the `primary` color.\n/// @prop {Color} primary.A400 [#008deb] - The A400 variant of the `primary` color.\n/// @prop {Color} primary.A700 [#0066aa] - The A700 variant of the `primary` color.\n/// @prop {Color} secondary.100 [#f0b2ce] - The 100 variant of the `secondary` color.\n/// @prop {Color} secondary.200 [#e17fab] - The 200 variant of the `secondary` color.\n/// @prop {Color} secondary.300 [#dc5391] - The 300 variant of the `secondary` color.\n/// @prop {Color} secondary.400 [#df3683] - The 400 variant of the `secondary` color.\n/// @prop {Color} secondary.500 [#e41c77] - The 500 variant of the `secondary` color (default).\n/// @prop {Color} secondary.600 [#dc0a6a] - The 600 variant of the `secondary` color.\n/// @prop {Color} secondary.700 [#d30060] - The 700 variant of the `secondary` color.\n/// @prop {Color} secondary.800 [#bf0057] - The 800 variant of the `secondary` color.\n/// @prop {Color} secondary.900 [#a5044d] - The 900 variant of the `secondary` color.\n/// @prop {Color} secondary.A100 [#f65fa4] - The A100 variant of the `secondary` color.\n/// @prop {Color} secondary.A200 [#f3348b] - The A200 variant of the `secondary` color.\n/// @prop {Color} secondary.A400 [#df0d6d] - The A400 variant of the `secondary` color.\n/// @prop {Color} secondary.A700 [#a2094f] - The A700 variant of the `primary` color.\n/// @prop {Color} grays.100 [rgba(0, 0, 0, .04)] - The 100 variant of the `grays` color.\n/// @prop {Color} grays.200 [rgba(0, 0, 0, .08)] - The 200 variant of the `grays` color.\n/// @prop {Color} grays.300 [rgba(0, 0, 0, .12)] - The 300 variant of the `grays` color.\n/// @prop {Color} grays.400 [rgba(0, 0, 0, .26)] - The 400 variant of the `grays` color.\n/// @prop {Color} grays.500 [rgba(0, 0, 0, .38)] - The 500 variant of the `grays` color.\n/// @prop {Color} grays.600 [rgba(0, 0, 0, .54)] - The 600 variant of the `grays` color.\n/// @prop {Color} grays.700 [rgba(0, 0, 0, .62)] - The 700 variant of the `grays` color.\n/// @prop {Color} grays.800 [rgba(0, 0, 0, .74)] - The 800 variant of the `grays` color.\n/// @prop {Color} grays.900 [rgba(0, 0, 0, .87)] - The 900 variant of the `grays` color.\n/// @prop {Color} info [#1377d5] - The `info` color. Default for every palette if not specified.\n/// @prop {Color} success [#4eb862] - The `success` color. Default for every palette if not specified.\n/// @prop {Color} warn [#fbb13c] - The `warn` color. Default for every palette if not specified.\n/// @prop {Color} error [#ff134a] - The `error`. Default for every palette if not specified.\n/// @requires igx-palette\n$default-palette: igx-palette($primary: #09f, $secondary: #e41c77) !default;\n\n/// Global Overlay Color\n/// @group palettes\n/// @type Color\n/// @prop {Map} $palette [$default-palette] - The palette used to extract the color from.\n/// @prop {String} $color [grays] - The name of the sub-palette to take the color from.\n/// @requires igx-color\n$overlay-color: igx-color($default-palette, 'grays') !default;\n\n/// Default elevations. Work in progress.\n/// Subject to change.\n/// @group elevations\n/// @type Map\n/// @prop {Color} $color-1 [rgba(0, 0, 0, .26)] - The color used for the umbra shadow.\n/// @prop {Color} $color-2 [rgba(0, 0, 0, .12)] - The color used for the penumbra shadow.\n/// @prop {Color} $color-3 [rgba(0, 0, 0, .08)] - The color used for the ambient shadow.\n/// @requires igx-elevations\n$elevations: igx-elevations(\n    rgba(0, 0, 0, .26),\n    rgba(0, 0, 0, .12),\n    rgba(0, 0, 0, .08)\n) !default;\n","////\r\n/// @group Utilities\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// Converts pixels to relative values (em).\r\n/// @access public\r\n/// @param {number|string} $pixels - The pixel value to be converted.\r\n/// @param {number|string} $context [$browser-context] - The base context to convert against.\r\n@function em($pixels, $context: $browser-context) {\r\n    @if (unitless($pixels)) {\r\n        $pixels: $pixels * 1px;\r\n    }\r\n    @if (unitless($context)) {\r\n        $context: $context * 1px;\r\n    }\r\n    @return ($pixels / $context) * 1em;\r\n}\r\n\r\n/// Pixels to root relative values (rem).\r\n/// @access public\r\n/// @param {number|string} $pixels - The pixel value to be converted.\r\n/// @param {number|string} $context [$browser-context] - The base context to convert against.\r\n@function rem($pixels, $context: $browser-context) {\r\n    @if (unitless($pixels)) {\r\n        $pixels: $pixels * 1px;\r\n    }\r\n    @if (unitless($context)) {\r\n        $context: $context * 1px;\r\n    }\r\n    @return ($pixels / $context) * 1rem;\r\n}\r\n\r\n/// Generates a color shade from base color and saturation level.\r\n/// @access private\r\n/// @group Palettes\r\n/// @param {Color} $color - The base color to be used to generate a color shade.\r\n/// @param {number|string} $saturation - The saturation level used to create the color shade.\r\n@function gen-color($color, $saturation) {\r\n    @if ($saturation == 50) {\r\n        @return lighten(saturate($color, 10.4), 37.7);\r\n    } @else if ($saturation == 100) {\r\n        @return lighten(desaturate($color, 10.4), 31.8);\r\n    } @else if ($saturation == 200) {\r\n        @return lighten(desaturate($color, 17), 18.7);\r\n    } @else if ($saturation == 300) {\r\n        @return lighten(desaturate($color, 12.9), 9.1);\r\n    } @else if ($saturation == 400) {\r\n        @return lighten(desaturate($color, 6.6), 4.1);\r\n    } @else if ($saturation == 600) {\r\n        @return darken(saturate($color, 12.4), 5.1);\r\n    } @else if ($saturation == 700) {\r\n        @return darken(saturate($color, 24.5), 8.8);\r\n    } @else if ($saturation == 800) {\r\n        @return darken(saturate($color, 23.2), 12.7);\r\n    } @else if ($saturation == 900) {\r\n        @return darken(saturate($color, 16.1), 17);\r\n    } @else if ($saturation == 'A100') {\r\n        @return lighten(saturate($color, 10.4), 16.7);\r\n    } @else if ($saturation == 'A200') {\r\n        @return lighten(saturate($color, 10.4), 7.7);\r\n    } @else if ($saturation == 'A400') {\r\n        @return darken(saturate($color, 10.4), 3.9);\r\n    } @else if ($saturation == 'A700') {\r\n        @return darken(saturate($color, 10.4), 16.6);\r\n    }\r\n}\r\n\r\n/// Retrieves a color from a color palette.\r\n/// @access public\r\n/// @group Palettes\r\n/// @param {Map} $palette - The source palette map.\r\n/// @param {string} $color - The target color from the color palette.\r\n/// @param {number|string} $variant [500] - The target color shade from the color palette.\r\n/// @returns {Color} White if no palette, color, and variant matches found.\r\n@function igx-color($palette, $color, $variant: 500) {\r\n    @if map-exists($palette) and map-key-exists($palette, $color) and map-key-exists($color, $variant) {\r\n        @return map-get(map-get($palette, $color), $variant);\r\n    }\r\n    @return #fff;\r\n}\r\n\r\n/// Retrieves a contrast text color for a given color from a color palette.\r\n/// @access public\r\n/// @group Palettes\r\n/// @param {Map} $palette - The source palette map.\r\n/// @param {string} $color - The target color from the color palette.\r\n/// @param {number|variant} $variant - The target color shade from the color palette.\r\n/// @returns {Color} [#fff] - Returns white if now palette, color and/or variant matches found.\r\n@function igx-contrast-color($palette, $color, $variant: 500) {\r\n    @if map-exists($palette) and map-key-exists($palette, $color) and map-key-exists($color, $variant) {\r\n        @return map-get(map-get(map-get($palette, $color), 'contrast'), $variant);\r\n    }\r\n    @return #fff;\r\n}\r\n\r\n/// Returns a contrast color for a passed color.\r\n/// @access public\r\n/// @group Palettes\r\n/// @param {Color} $color - The color used to return a contrast color for.\r\n/// @returns {Color} - Returns either white or black depending on the brightness of the input color.\r\n@function text-contrast($color) {\r\n    @if type-of($color) == color {\r\n        $color-brightness: round((red($color) * 299) + (green($color) * 587) + (blue($color) * 114) / 1000);\r\n        $light-color: round((red(#fff) * 299) + (green(#fff) * 587) + (blue(#fff) * 114) / 1000);\r\n        @if abs($color-brightness) < ($light-color / 2) {\r\n            @return #fff;\r\n        } @else {\r\n            @return #000;\r\n        }\r\n    }\r\n    @return $color;\r\n}\r\n\r\n/// Test if `$value` is a valid direction.\r\n/// @access private\r\n/// @param {*} $value - The value to test.\r\n/// @return {Bool}\r\n@function is-direction($value) {\r\n    $is-keyword: index( ( to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);\r\n    $is-angle: type-of($value)=='number' and index('deg' 'grad' 'turn' 'rad', unit($value));\r\n    @return $is-keyword or $is-angle;\r\n}\r\n\r\n/// Test if a component, or list of components\r\n/// is in the list of known components.\r\n/// @access private\r\n/// @param {String|List} $excludes - The components list to check in.\r\n/// @return {List}\r\n@function is-component($items) {\r\n    $register: map-keys($components);\r\n    @each $item in $items {\r\n        @if not(index($register, $item)) {\r\n            @error unquote('Can\\'t exclude \"#{$item}\" because it is not in the list of known components.');\r\n        }\r\n    }\r\n    @return $items;\r\n}\r\n\r\n/// Converts numbers to HEX value strings.\r\n/// @access private\r\n/// @param {number} $num - The number to convert.\r\n/// @param {radix} $radix - The base radix to use for the conversion.\r\n/// @return {String}\r\n@function to-string($num, $radix: 16) {\r\n    $chars: '0123456789abcdef';\r\n    $result: '';\r\n    $sign: '';\r\n    @if $num < 0 {\r\n        $sign: '-';\r\n        $num: abs($num);\r\n    }\r\n    @if $num >= 0 and $num < $radix {\r\n        @return $sign + str-slice($chars, ($num + 1), ($num + 1));\r\n    }\r\n    $q: $num;\r\n    @while $q !=0 {\r\n        $r: $q % $radix;\r\n        $q: floor($q / $radix);\r\n        $result: str-slice($chars, ($r + 1), ($r + 1)) + $result;\r\n    }\r\n    @return $sign + $result;\r\n}\r\n\r\n/// Converts a rgba color to a hexidecimal color.\r\n/// @access public\r\n/// @requires {function} to-string\r\n/// @param {Color} $rgba - The rgba color to convert.\r\n/// @return {Color}\r\n@function hexrgba($rgba) {\r\n    @if type-of($rgba) == color {\r\n        $red: red($rgba);\r\n        $green: green($rgba);\r\n        $blue: blue($rgba);\r\n        $a: alpha($rgba);\r\n        $r: floor($a * $red + (1 - $a) * 255);\r\n        $g: floor($a * $green + (1 - $a) * 255);\r\n        $b: floor($a * $blue + (1 - $a) * 255);\r\n        @return rgb($r, $g, $b);\r\n    }\r\n    @return $rgba;\r\n}\r\n\r\n/// Extends a Map object with the properties of another Map object.\r\n/// @access private\r\n/// @param {Map} $map1 - The source map to get extended.\r\n/// @param {Map} $map2 - The map extending the source map.\r\n/// @returns {Map} - Returns the original map extended with the properties of the second map.\r\n@function extend($map1, $map2) {\r\n    $result: ();\r\n    @each $key, $value in $map2 {\r\n        @if not($value) {\r\n            $result: map-merge($result, (\r\n                #{$key}: map-get($map1, $key)\r\n            ));\r\n        } @else {\r\n            $result: map-merge($result, (\r\n                #{$key}: $value\r\n            ));\r\n        }\r\n    }\r\n    $result: map-merge($map1, $result);\r\n    @return $result;\r\n}\r\n\r\n/// Generates a Material-like color palette for a single color.\r\n/// @access private\r\n/// @group Palettes\r\n/// @requires {function} gen-color\r\n/// @param {Color} $color - The base color used to generate the palette.\r\n/// @returns {Map} - A map consisting of 26 color variations.\r\n@function generate-palette($color) {\r\n    @return (\r\n        100: gen-color($color, 100),\r\n        200: gen-color($color, 200),\r\n        300: gen-color($color, 300),\r\n        400: gen-color($color, 400),\r\n        500: $color,\r\n        600: gen-color($color, 600),\r\n        700: gen-color($color, 700),\r\n        800: gen-color($color, 800),\r\n        900: gen-color($color, 900),\r\n        A100: gen-color($color, 'A100'),\r\n        A200: gen-color($color, 'A200'),\r\n        A400: gen-color($color, 'A400'),\r\n        A700: gen-color($color, 'A700'),\r\n        contrast: (\r\n            100: text-contrast(gen-color($color, 100)),\r\n            200: text-contrast(gen-color($color, 200)),\r\n            300: text-contrast(gen-color($color, 300)),\r\n            400: text-contrast(gen-color($color, 400)),\r\n            500: text-contrast($color),\r\n            600: text-contrast(gen-color($color, 600)),\r\n            700: text-contrast(gen-color($color, 700)),\r\n            800: text-contrast(gen-color($color, 800)),\r\n            900: text-contrast(gen-color($color, 900)),\r\n            A100: text-contrast(gen-color($color, 'A100')),\r\n            A200: text-contrast(gen-color($color, 'A200')),\r\n            A400: text-contrast(gen-color($color, 'A400')),\r\n            A700: text-contrast(gen-color($color, 'A700')),\r\n        )\r\n    );\r\n}\r\n\r\n/// Generates a color palette.\r\n/// @access public\r\n/// @group Palettes\r\n/// @requires {function} generate-palette\r\n/// @param {Color} $primary - The primary color used to generate the primary color palette.\r\n/// @param {Color} $secondary - The secondary color used to generate the secondary color palette.\r\n/// @param {Color} $info [#1377d5] - The information color used throughout the application.\r\n/// @param {Color} $success [#4eb862] - The success color used throughout the application.\r\n/// @param {Color} $warn [#fbb13c] - The warning color used throughout the application.\r\n/// @param {Color} $error [#ff134a] - The error color used throughout the application.\r\n/// @returns {Map} - A map consisting of 74 color variations, including the `primary`, `secondary`, `grays`,\r\n/// `info`, `success`, `warn`, and `error` colors.\r\n@function igx-palette(\r\n    $primary,\r\n    $secondary,\r\n    $info: #1377d5,\r\n    $success: #4eb862,\r\n    $warn: #fbb13c,\r\n    $error: #ff134a\r\n) {\r\n    $primary-palette: generate-palette($primary);\r\n    $secondary-palette: generate-palette($secondary);\r\n\r\n    // @debug 'Primary Colors Palette: #{$primary-palette}';\r\n    // @debug 'secondary Colors Palette: #{$secondary-palette}';\r\n    // @debug 'Warn Colors Palette: #{$warn-palette}';\r\n\r\n    @return (\r\n        primary: $primary-palette,\r\n        secondary: $secondary-palette,\r\n        info: (500: $info),\r\n        success: (500: $success),\r\n        warn: (500: $warn),\r\n        error: (500: $error),\r\n        grays: (\r\n            100: rgba(0, 0, 0, .04),\r\n            200: rgba(0, 0, 0, .08),\r\n            300: rgba(0, 0, 0, .12),\r\n            400: rgba(0, 0, 0, .26),\r\n            500: rgba(0, 0, 0, .38),\r\n            600: rgba(0, 0, 0, .54),\r\n            700: rgba(0, 0, 0, .62),\r\n            800: rgba(0, 0, 0, .74),\r\n            900: rgba(0, 0, 0, .87),\r\n            contrast: (\r\n                100: text-contrast(rgba(0, 0, 0, .04)),\r\n                200: text-contrast(rgba(0, 0, 0, .08)),\r\n                300: text-contrast(rgba(0, 0, 0, .12)),\r\n                400: text-contrast(rgba(0, 0, 0, .26)),\r\n                500: text-contrast(rgba(0, 0, 0, .38)),\r\n                600: text-contrast(rgba(0, 0, 0, .54)),\r\n                700: text-contrast(rgba(0, 0, 0, .62)),\r\n                800: text-contrast(rgba(0, 0, 0, .74)),\r\n                900: text-contrast(rgba(0, 0, 0, .87)),\r\n            )\r\n        )\r\n    );\r\n}\r\n\r\n/// Returns a string from the elements of a list.\r\n/// Works recursively so the elements can be lists themselves.\r\n/// @param {List} $list [null] - A list of elements to be turned into a string.\r\n/// @param {String} $glue [''] - A string symbol to join the elements by.\r\n@function implode($list, $glue: '') {\r\n    $result: null;\r\n    @for $i from 1 through length($list) {\r\n        $e: nth($list, $i);\r\n        @if type-of($e) == list {\r\n            $result: $result#{implode($e, $glue)};\r\n        } @else {\r\n            $result: if(\r\n                $i != length($list),\r\n                $result#{$e}#{$glue},\r\n                $result#{$e}\r\n            );\r\n        }\r\n    }\r\n    @return $result;\r\n}\r\n\r\n/// Returns a CSS property value. It could return either css '--var' or\r\n/// a plain string value based on theme configuration.\r\n/// @access public\r\n/// @param {map} $map - The source theme to be used to read values from.\r\n/// @param {string} $key - A key from the theme map to assign as value to the property.\r\n/// @example scss Assign the color property in a rule-set to a value from the default avatar theme.\r\n///   %igx-avatar-icon {\r\n///     color: --var($avatar-theme, 'icon-color');\r\n///   }\r\n///   // If legacy-support is off, it will produce the following:\r\n///   // %igx-avatar-icon {\r\n///   //   color: var(--igx-avatar-icon-color);\r\n///   // }\r\n///   // otherwise, it will return the value for key 'icon-color' in the '$avatar-theme':\r\n@function --var($map, $key) {\r\n    $igx-legacy-support: if(global-variable-exists('igx-legacy-support'), $igx-legacy-support, true);\r\n\r\n    @if map-has-key($map, $key) {\r\n        @if $igx-legacy-support == false {\r\n            @return unquote('var(--#{map-get($map, 'name')}-#{$key})');\r\n        } @else {\r\n            @return map-get($map, $key);\r\n        }\r\n    } @else {\r\n        @error unquote('The map you passed does not contain a key #{$key}');\r\n    }\r\n}\r\n\r\n/// Splits a string into a list by a given separator.\r\n/// @param {string} $string - The string to split.\r\n/// @param {string} $separator - The string separator to split the string by.\r\n///\r\n@function str-split($string, $separator) {\r\n    $split-arr: ();\r\n    $index : str-index($string, $separator);\r\n    @while $index != null {\r\n        $item: str-slice($string, 1, $index - 1);\r\n        $split-arr: append($split-arr, $item);\r\n        $string: str-slice($string, $index + 1);\r\n        $index : str-index($string, $separator);\r\n    }\r\n    $split-arr: append($split-arr, $string);\r\n    @return $split-arr;\r\n}\r\n","////\r\n/// @group Utilities\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// Hides the element from the DOM.\r\n/// @access public\r\n/// @example scss - Sample usage\r\n///   input[type=\"checkbox\"] {\r\n///     @include hide-default();\r\n///   }\r\n@mixin hide-default {\r\n    margin: 0;\r\n    position: absolute;\r\n    opacity: 0;\r\n    z-index: -1;\r\n    width: 0;\r\n    height: 0;\r\n    left: 0;\r\n    overflow: hidden;\r\n    pointer-events: none;\r\n}\r\n\r\n/// Generates a linear gradient.\r\n/// @access public\r\n/// @param {string} $direction - The direction of the gradient.\r\n/// @param {List} $color-stops - A list of color stops to be used in the gradient.\r\n/// @example scss - Sample usage\r\n///   .bozo {\r\n///     background: @include linear-gradient(\"to right\", red, orange);\r\n///   }\r\n/// @outputs The CSS representation of linear-gradient.\r\n@mixin linear-gradient($direction, $color-stops...) {\r\n    // Direction has been omitted and happens to be a color-stop\r\n    @if is-direction($direction) == false {\r\n        $color-stops: $direction, $color-stops;\r\n        $direction: 180deg;\r\n    }\r\n    background: linear-gradient($direction, $color-stops);\r\n}\r\n\r\n/// Registers a keyframes animation in the global keyframes registry list.\r\n/// @access public\r\n/// @group animations\r\n/// @param {String} $name - The name of the keyframes animation.\r\n@mixin keyframes($name) {\r\n    $keyframe: map-get($keyframes, $name);\r\n\r\n    @if $keyframe == null {\r\n        $keyframe: unique-id();\r\n        $keyframes: map-merge($keyframes, (#{$name}: $keyframe)) !global;\r\n\r\n        @at-root {\r\n            @keyframes #{$name} {\r\n                @content;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/// Registers a component to the list of known components.\r\n/// @access private\r\n/// @param {String} $name - The component name to register.\r\n@mixin register-component($name) {\r\n    $component: map-get($components, $name);\r\n    @if $component == null {\r\n        $component: unique-id();\r\n        $components: map-merge($components, (#{$name}: $component)) !global;\r\n    }\r\n}\r\n\r\n/// Animates an element.\r\n/// @access public\r\n/// @group animations\r\n/// @param {List} $animate - The list of animation properties.\r\n/// @example scss - Animating an element\r\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\r\n///\r\n///  .bozo {\r\n///     @include animation('fade-in' .3s ease-out);\r\n///  }\r\n@mixin animation($animate...) {\r\n    $max: length($animate);\r\n    $animations: '';\r\n    @for $i from 1 through $max {\r\n        $animations: #{$animations + nth($animate, $i)};\r\n        @if $i < $max {\r\n            $animations: #{$animations + ', '};\r\n        }\r\n    }\r\n    animation: $animations;\r\n}\r\n\r\n/// Applies text-overflow ellipsis to e text element.\r\n/// This won't work on display flex elements.\r\n/// @access public\r\n@mixin ellipsis() {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n/// Generates a CSS class name for a color from a\r\n/// given name, variant, prefix and suffix\r\n/// @access private\r\n/// @param {string} $name - The main class name.\r\n/// @param {string} $variant - An additional string to be attached to the main class name.\r\n/// @param {string} $prefix - A prefix to be attached to the name and variant string.\r\n/// @param {string} $prefix - A suffix to be attached to the name and variant string.\r\n@mixin gen-color-class($name, $variant, $prefix, $suffix) {\r\n    $prefix: if($prefix, '#{$prefix}-', '');\r\n    $suffix: if($suffix, '-#{$suffix}', '');\r\n\r\n    .#{$prefix}#{$name}-#{$variant}#{$suffix} {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Generates CSS class names for all colors from\r\n/// the color palette for a given property, with\r\n/// optional prefix and suffix attached to the class name.\r\n/// @access private\r\n/// @param {string} $prop - The CSS property to assign the palette color to.\r\n/// @param {string} $prefix - A prefix to be attached to the class name.\r\n/// @param {string} $suffix - A suffix to be attached to the class name.\r\n/// @example scss Generate background classes with colors from the palette.\r\n///   // Will generate class names like\r\n///   // .my-primary-500-bg { ... };\r\n///   @include gen-color-classes(\r\n///     $prop: 'background-color',\r\n///     $prefix: 'my', $suffix: 'bg'\r\n///   );\r\n/// @requires {mixin} gen-color-class\r\n@mixin gen-color-classes($prop, $prefix, $suffix) {\r\n    @each $palette-name, $sub-palette in $default-palette {\r\n        @each $variant, $color in $sub-palette {\r\n            @if type-of($color) != 'map' {\r\n                @include gen-color-class($palette-name, $variant, $prefix, $suffix) {\r\n                    #{$prop}: $color;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/// Generates CSS variables for a given palette.\r\n/// @access private\r\n/// @param {Map} $palette - The igx palette to use to generate css variables for.\r\n///\r\n/// @example scss Generate css variables for the `$default-palette`.\r\n///   @include css-vars-from-palette($default-palette);\r\n///\r\n@mixin css-vars-from-palette($palette) {\r\n    @each $palette-name, $sub-palette in $palette {\r\n        @each $variant, $color in $sub-palette {\r\n            @if type-of($color) != 'map' {\r\n                --igx-#{$palette-name}-#{$variant}: #{$color};\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/// Generates CSS variables for a given palette.\r\n/// @access public\r\n/// @param {Map} $palette - The igx palette to use to generate css variables for.\r\n/// @param {string} $scope [null] - The scope of the generated css variables.\r\n///\r\n/// @example scss Generate css variables for the `$default-palette`.\r\n///   @include css-vars-from-palette($default-palette, ':root');\r\n///\r\n/// @requires {mixin} css-vars-from-palette\r\n@mixin igx-palette-vars($palette, $scope: null) {\r\n    @if $scope == null {\r\n        @include css-vars-from-palette($palette);\r\n    } @else {\r\n        #{$scope} {\r\n            @include css-vars-from-palette($palette);\r\n        }\r\n    }\r\n}\r\n\r\n/// Generates CSS class names for all colors from\r\n/// the color palette for a given property, with\r\n/// optional prefix and suffix attached to the class name.\r\n/// @access private\r\n/// @param {string} $prop - The CSS property to assign the palette color to.\r\n/// @param {string} $prefix [null] - A prefix to be attached to the class name.\r\n/// @param {string} $suffix [igx] - A suffix to be attached to the class name.\r\n/// @example scss Generate background classes with colors from the palette.\r\n///   // Will generate class names like\r\n///   // .igx-primary-500-bg { ... };\r\n///   @include igx-color-classes(\r\n///     $prop: 'background-color',\r\n///     $suffix: 'bg'\r\n///   );\r\n/// @requires {mixin} gen-color-classes\r\n@mixin igx-color-classes($prop, $suffix: null, $prefix: 'igx') {\r\n    @include gen-color-classes($prop, $prefix, $suffix);\r\n}\r\n\r\n/// Parses a map of key value pairs\r\n/// from component themes to css variables.\r\n/// @access private\r\n/// @param {map} $theme - The component theme to be used to generate css variables.\r\n/// @example scss Convert theme colors to css variables.\r\n///   $my-theme: igx-avatar-theme($icon-color: red);\r\n///   :root {\r\n///     @include css-vars-from-theme($my-theme);\r\n///   }\r\n@mixin css-vars-from-theme($theme) {\r\n    $prefix: map-get($theme, 'name');\r\n\r\n    @each $key, $value in $theme {\r\n        @if $key != 'name' and $key != 'palette' {\r\n            --#{$prefix}-#{$key}: #{$value};\r\n        }\r\n    }\r\n}\r\n\r\n/// Add theme colors to the global root scope\r\n/// Ensures the operation is done only once.\r\n/// @access private\r\n/// @param {map} $theme - The component theme to get the\r\n/// @example scss Convert theme colors to css variables.\r\n/// @requires {mixin} css-vars-from-theme\r\n@mixin igx-root-css-vars($theme) {\r\n    $name: map-get($theme, 'name');\r\n\r\n    @if map-get($themes, $name) == null {\r\n        $id: unique-id();\r\n        $themes: map-merge($themes, (#{$name}: $id)) !global;\r\n\r\n        :root {\r\n            @include css-vars-from-theme($theme);\r\n        }\r\n    }\r\n}\r\n\r\n/// Add theme colors scoped to a specific element\r\n/// @access public\r\n/// @param {map} $theme - The component theme to get the\r\n/// @example scss Convert theme colors to css variables.\r\n/// @requires {mixin} css-vars-from-theme\r\n@mixin igx-css-vars($theme) {\r\n    @include css-vars-from-theme($theme);\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $color [null] - The color of the ripple.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the color\r\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\r\n///   // Pass the theme to the igx-ripple component mixin\r\n///   igx-ripple($my-ripple-theme);\r\n@function igx-ripple-theme(\r\n    $palette: $default-palette,\r\n    $color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-ripple',\r\n        color: igx-color($palette, 'grays', 800)\r\n    );\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        color: $color,\r\n        test: 'test'\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires --var\r\n@mixin igx-ripple($theme, $palette: $default-palette) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    %igx-ripple-display {\r\n        display: block;\r\n        position: absolute;\r\n        border-radius: 50%;\r\n        background: --var($theme, 'color');\r\n        pointer-events: none;\r\n        transform-origin: center;\r\n        transform: translate3d(0, 0, 0) scale(0);\r\n        will-change: opacity, transform;\r\n        opacity: .5;\r\n    }\r\n\r\n    %igx-ripple-wrapper {\r\n        overflow: hidden;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $icon-background [null]- The background color used for avatars of type icon.\r\n/// @param {Color} $icon-color [null] - The icon color used for avatars of type icon.\r\n/// @param {Color} $initials-background [null] - The background color used for avatars of type initials.\r\n/// @param {Color} $initials-color [null] - The text color used for avatars of type initials.\r\n/// @param {Color} $image-background [null] - The background color used for avatars of type image.\r\n/// @requires text-contrast\r\n/// @requires igx-color\r\n/// @requires extend\r\n///\r\n/// @example scss Change the background and icon colors in icon avatars\r\n///   $my-avatar-theme: igx-avatar-theme($icon-background: black, $icon-color: white);\r\n///   // Pass the theme to the igx-avatar component mixin\r\n///   @include igx-avatar($my-avatar-theme);\r\n@function igx-avatar-theme(\r\n    $palette: $default-palette,\r\n    $icon-background: null,\r\n    $icon-color: null,\r\n    $initials-background: null,\r\n    $initials-color: null,\r\n    $image-background: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-avatar',\r\n        icon-background: igx-color($palette, 'grays', 400),\r\n        icon-color: igx-color($palette, 'grays', 800),\r\n        initials-background: igx-color($palette, 'grays', 400),\r\n        initials-color: igx-color($palette, 'grays', 800),\r\n        image-background: transparent\r\n    );\r\n\r\n    @if not($icon-color) and $icon-background {\r\n        $icon-color: text-contrast($icon-background);\r\n    }\r\n\r\n    @if not($initials-color) and $initials-background {\r\n        $initials-color: text-contrast($initials-background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        icon-background: $icon-background,\r\n        icon-color: $icon-color,\r\n        initials-background: $initials-background,\r\n        initials-color: $initials-color,\r\n        image-background: $image-background,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-avatar($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $small-size: 40px;\r\n    $medium-size: 64px;\r\n    $large-size: 88px;\r\n\r\n    %igx-avatar-display {\r\n        position: relative;\r\n        user-select: none;\r\n    }\r\n\r\n    %igx-avatar--rounded {\r\n        border-radius: 50%;\r\n    }\r\n\r\n    %igx-avatar--small {\r\n        width: rem($small-size);\r\n        height: rem($small-size);\r\n        min-width: rem($small-size);\r\n    }\r\n\r\n    %igx-avatar--medium {\r\n        width: rem($medium-size);\r\n        height: rem($medium-size);\r\n        min-width: rem($medium-size);\r\n    }\r\n\r\n    %igx-avatar--large {\r\n        width: rem($large-size);\r\n        height: rem($large-size);\r\n        min-width: rem($large-size);\r\n    }\r\n\r\n    %igx-avatar-inner {\r\n        width: inherit;\r\n        height: inherit;\r\n        border-radius: inherit;\r\n    }\r\n\r\n    %igx-avatar-icon {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: --var($theme, 'icon-color');\r\n        background: --var($theme, 'icon-background');\r\n    }\r\n\r\n    %igx-avatar-image {\r\n        background-color: --var($theme, 'image-background');\r\n    }\r\n\r\n    %igx-avatar-initials {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        text-transform: uppercase;\r\n        color: --var($theme, 'initials-color');\r\n        background-color: --var($theme, 'initials-background');\r\n    }\r\n\r\n    %igx-avatar-initials--small {\r\n        font-size: rem($small-size / 2);\r\n        line-height: rem($small-size);\r\n    }\r\n\r\n    %igx-avatar-initials--medium {\r\n        font-size: rem($medium-size / 2);\r\n        line-height: rem($medium-size);\r\n    }\r\n\r\n    %igx-avatar-initials--large {\r\n        font-size: rem($large-size / 2);\r\n        line-height: rem($large-size);\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n///\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $icon-color [null] - The icon color used.\r\n/// @param {Color} $text-color [null] - The text color used.\r\n/// @param {Color} $border-color [null] - The border color used.\r\n/// @param {Color} $background-color [null] - The background color used.\r\n/// @param {Bool} $disable-shadow [true] - Sets the badge shadow visibility.\r\n/// @param {Bool} $disable-border [true] - Sets the badge border visibility.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires text-contrast\r\n/// @requires rem\r\n/// @requires {variable} $elevations\r\n///\r\n/// @example scss Change the text and icon colors in a badge\r\n///   $my-badge-theme: igx-badge-theme($icon-color: black, $background-color: white);\r\n///   // IE Supported theme - Pass the theme to the igx-badge component mixin\r\n///   @include igx-badge($my-badge-theme);\r\n///\r\n///   // Theming using css variables (not supported in IE11):\r\n///   @include igx-css-vars($my-badge-theme);\r\n@function igx-badge-theme(\r\n    $palette: $default-palette,\r\n\r\n    $icon-color: null,\r\n    $text-color: null,\r\n    $border-color: null,\r\n    $background-color: null,\r\n\r\n    $disable-shadow: true,\r\n    $disable-border: true\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-badge',\r\n        icon-color: #fff,\r\n        text-color: #fff,\r\n        border-color: #fff,\r\n        background-color: igx-color($palette, 'primary', 500),\r\n        badge-shadow: if($disable-shadow == true, none, igx-elevation($elevations, 1)),\r\n        border-width: if($disable-border == true, 0, rem(1px)),\r\n    );\r\n\r\n    @if not($icon-color) and $background-color {\r\n        $icon-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($text-color) and $background-color {\r\n        $text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        icon-color: $icon-color,\r\n        text-color: $text-color,\r\n        border-color: $border-color,\r\n        background-color: $background-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires --var\r\n/// @requires igx-color\r\n/// @requires rem\r\n@mixin igx-badge($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $palette: map-get($theme, 'palette');\r\n\r\n    $badge-width: 22px;\r\n    $badge-height: $badge-width;\r\n\r\n    $badge-border-radius-circle: $badge-width / 2;\r\n\r\n    $badge-font-size: rem(11px);\r\n    $badge-font-weight: normal;\r\n\r\n    $badge-icon-font-size: rem(12px);\r\n\r\n    $badge-value-padding: rem(4px);\r\n    $border-type: solid;\r\n\r\n    %igx-badge-display {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: $badge-width;\r\n        height: $badge-height;\r\n        font-size: $badge-font-size;\r\n        font-weight: $badge-font-weight;\r\n        color: --var($theme, 'text-color');\r\n        line-height: 1;\r\n\r\n        igx-icon {\r\n            display: inline-flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: $badge-width - 2px;\r\n            height: $badge-width - 2px;\r\n            font-size: $badge-icon-font-size;\r\n            font-weight: $badge-font-weight;\r\n            color: --var($theme, 'icon-color');\r\n        }\r\n    }\r\n\r\n    %igx-badge-value {\r\n        white-space: nowrap;\r\n        padding: $badge-value-padding;\r\n    }\r\n\r\n    %igx-badge--circle {\r\n        border-radius: $badge-border-radius-circle;\r\n        box-shadow: --var($theme, 'badge-shadow');\r\n        border-width: --var($theme, 'border-width');\r\n        border-color: --var($theme, 'border-color');\r\n        border-style: $border-type;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %igx-badge--default {\r\n        background-color: --var($theme, 'background-color');\r\n    }\r\n\r\n    %igx-circle--success {\r\n        background-color: igx-color($palette, 'success');\r\n    }\r\n\r\n    %igx-badge--info {\r\n        background-color: igx-color($palette, 'info');\r\n    }\r\n\r\n    %igx-circle--warn {\r\n        background-color: igx-color($palette, 'warn');\r\n    }\r\n\r\n    %igx-circle--error {\r\n        background-color: igx-color($palette, 'error');\r\n    }\r\n\r\n    %igx-badge--hidden {\r\n        visibility: hidden;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified,\r\n/// the idle item color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The background color used for the toast.\r\n/// @param {Color} $idle-item-color [null] - The text-color used for the idle color.\r\n/// @param {Color} $active-item-color [null] - The text-color used for the active color.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Set a custom background color\r\n///   $my-tabbar-theme: igx-toast-theme($background: black);\r\n///   // Pass the theme to the igx-bottom-nav component mixin\r\n///   @include igx-bottom-nav($my-tabbar-theme);\r\n@function igx-bottom-nav-theme(\r\n    $palette: $default-palette,\r\n\r\n    $background: null,\r\n    $idle-item-color: null,\r\n    $active-item-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-bottom-nav',\r\n        background: #fff,\r\n        idle-item-color: igx-color($palette, 'grays', 600),\r\n        active-item-color: igx-color($palette, 'primary')\r\n    );\r\n\r\n    @if not($idle-item-color) and $background {\r\n        $idle-item-color: rgba(text-contrast($background), .7);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        idle-item-color: $idle-item-color,\r\n        active-item-color: $active-item-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires igx-bottom-nav-theme\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires extend\r\n/// @requires {mixin} ellipsis\r\n/// @requires rem\r\n/// @requires --var\r\n/// @requires $ease-in-out-quad\r\n/// @requires $elevations\r\n@mixin igx-bottom-nav($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $palette: map-get($theme, 'palette');\r\n\r\n    // @debug $theme;\r\n\r\n    $menu-height: 56px;\r\n    $top-menu-shadow: igx-elevation($elevations, 8);\r\n    $bottom-menu-shadow: 0 -2px 4px -1px igx-color($palette, 'grays', 400),\r\n        0 -4px 5px 0 igx-color($palette, 'grays', 300),\r\n        0 -1px 10px 0 igx-color($palette, 'grays', 200);\r\n\r\n    $item-min-width: 80px;\r\n    $item-max-width: 168px;\r\n    $item-padding: 0 rem(12px, 16px);\r\n\r\n    $label-font-size: rem(12px, 16px);\r\n    $label-line-height: rem(12px, 16px);\r\n\r\n\r\n    %igx-tab-panel {\r\n        display: none;\r\n    }\r\n\r\n    %igx-tab-panel--selected {\r\n        display: block;\r\n    }\r\n\r\n    %igx-bottom-nav-menu {\r\n        display: flex;\r\n        position: fixed;\r\n        justify-content: center;\r\n        align-items: center;\r\n        left: 0;\r\n        right: 0;\r\n        height: $menu-height;\r\n        background: --var($theme, 'background');\r\n        overflow: hidden;\r\n        z-index: 8;\r\n    }\r\n\r\n    %igx-bottom-nav-menu--top {\r\n        top: 0;\r\n        bottom: inherit;\r\n        box-shadow: $top-menu-shadow;\r\n    }\r\n\r\n    %igx-bottom-nav-menu--bottom {\r\n        top: inherit;\r\n        bottom: 0;\r\n        box-shadow: $bottom-menu-shadow\r\n    }\r\n\r\n    %igx-bottom-nav-menu-item {\r\n        display: flex;\r\n        position: relative;\r\n        flex-flow: column nowrap;\r\n        flex: 1;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-width: $item-min-width;\r\n        max-width: $item-max-width;\r\n        height: 100%;\r\n        color: --var($theme, 'idle-item-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        overflow: hidden;\r\n        padding: $item-padding;\r\n        -webkit-tap-highlight-color: transparent;\r\n    }\r\n\r\n    %igx-bottom-nav-menu-item--disabled {\r\n        opacity: .5;\r\n        cursor: default;\r\n    }\r\n\r\n    %igx-active-tab {\r\n        color: --var($theme, 'active-item-color');\r\n        transition: color .15s $ease-in-out-quad, opacity .25s $ease-in-out-quad;\r\n    }\r\n\r\n    %igx-tab-label {\r\n        @include ellipsis();\r\n        padding-top: 4px;\r\n        font-size: $label-font-size;\r\n        line-height: $label-line-height;\r\n        max-width: 100%;\r\n        text-align: center;\r\n        transform: translateZ(0);\r\n        transition: transform .15s $ease-in-out-quad;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-tab-icon {\r\n        display: flex;\r\n        position: relative;\r\n        justify-content: center;\r\n        height: 24px;\r\n        padding: 0 8px;\r\n        transform: translateZ(0);\r\n        transition: transform .15s $ease-in-out-quad;\r\n        z-index: 1;\r\n\r\n        igx-badge {\r\n            position: absolute;\r\n            top: -6px;\r\n            right: -6px;\r\n            padding: 1px;\r\n        }\r\n    }\r\n\r\n    %igx-tab-icon--selected {\r\n        @extend %igx-active-tab;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    %igx-tab-label--selected {\r\n        @extend %igx-active-tab;\r\n        transform: translateY(-2px) scale(1.166667);\r\n    }\r\n}\r\n","////\n/// @group elevations\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Level 1 - Umbra Shadows\n/// @access private\n/// @param {Color} $color - The color used to generate umbra shadows.\n/// @returns {Map} Returns a map of 24 shadow elevations with the umbra color.\n@function _l1-shadows($color) {\n    @return (\n        1: 0 1px 3px 0 $color,\n        2: 0 1px 5px 0 $color,\n        3: 0 1px 8px 0 $color,\n        4: 0 2px 4px -1px $color,\n        5: 0 3px 5px -1px $color,\n        6: 0 3px 5px -1px $color,\n        7: 0 4px 5px -2px $color,\n        8: 0 5px 5px -3px $color,\n        9: 0 5px 6px -3px $color,\n        10: 0 6px 6px -3px $color,\n        11: 0 6px 7px -4px $color,\n        12: 0 7px 8px -4px $color,\n        13: 0 7px 8px -4px $color,\n        14: 0 7px 9px -4px $color,\n        15: 0 8px 9px -5px $color,\n        16: 0 8px 10px -5px $color,\n        17: 0 8px 11px -5px $color,\n        18: 0 9px 11px -5px $color,\n        19: 0 9px 12px -6px $color,\n        20: 0 10px 13px -6px $color,\n        21: 0 10px 13px -6px $color,\n        22: 0 10px 14px -6px $color,\n        23: 0 11px 14px -7px $color,\n        24: 0 11px 15px -7px $color\n    );\n}\n\n/// Level 2 - Penumbra Shadows\n/// @access private\n/// @param {Color} $color - The color used to generate penumbra shadows.\n/// @returns {Map} Returns a map of 24 shadow elevations with the penumbra color.\n@function _l2-shadows($color) {\n    @return (\n        1: 0 1px 1px 0 $color,\n        2: 0 2px 2px 0 $color,\n        3: 0 3px 4px 0 $color,\n        4: 0 4px 5px 0 $color,\n        5: 0 5px 8px 0 $color,\n        6: 0 6px 10px 0 $color,\n        7: 0 7px 10px 1px $color,\n        8: 0 8px 10px 1px $color,\n        9: 0 9px 12px 1px $color,\n        10: 0 10px 14px 1px $color,\n        11: 0 11px 15px 1px $color,\n        12: 0 12px 17px 2px $color,\n        13: 0 13px 19px 2px $color,\n        14: 0 14px 21px 2px $color,\n        15: 0 15px 22px 2px $color,\n        16: 0 16px 24px 2px $color,\n        17: 0 17px 26px 2px $color,\n        18: 0 18px 28px 2px $color,\n        19: 0 19px 29px 2px $color,\n        20: 0 20px 31px 3px $color,\n        21: 0 21px 33px 3px $color,\n        22: 0 22px 35px 3px $color,\n        23: 0 23px 36px 3px $color,\n        24: 0 24px 38px 3px $color\n    );\n}\n\n/// Level 3 - Ambient Shadows\n/// @access private\n/// @param {Color} $color - The color used to generate ambient shadows.\n/// @returns {Map} Returns a map of 24 shadow elevations with the ambient color.\n@function _l3-shadows($color) {\n    @return (\n        1: 0 2px 1px -1px $color,\n        2: 0 3px 1px -2px $color,\n        3: 0 3px 3px -2px $color,\n        4: 0 1px 10px 0 $color,\n        5: 0 1px 14px 0 $color,\n        6: 0 1px 18px 0 $color,\n        7: 0 2px 16px 1px $color,\n        8: 0 3px 14px 2px $color,\n        9: 0 3px 16px 2px $color,\n        10: 0 4px 18px 3px $color,\n        11: 0 4px 20px 3px $color,\n        12: 0 5px 22px 4px $color,\n        13: 0 5px 24px 4px $color,\n        14: 0 5px 26px 4px $color,\n        15: 0 6px 28px 5px $color,\n        16: 0 6px 30px 5px $color,\n        17: 0 6px 32px 5px $color,\n        18: 0 7px 34px 6px $color,\n        19: 0 7px 36px 6px $color,\n        20: 0 8px 38px 7px $color,\n        21: 0 8px 40px 7px $color,\n        22: 0 8px 42px 7px $color,\n        23: 0 9px 44px 8px $color,\n        24: 0 9px 46px 8px $color\n    );\n}\n\n/// Returns shadow based on elevation, umbra, penumbra, and ambient shadow colors.\n/// @access private\n/// @param {number} $elevation - The elevation level to generate a shadow for.\n/// @param {Color} $l1-color - The umbra color.\n/// @param {Color} $l2-color - The penumbra color.\n/// @param {Color} $l3-color - The ambient color.\n/// @returns {String} - A string to be used as box-shadow value.\n@function _elevation($elevation, $l1-color, $l2-color, $l3-color) {\n    @return unquote(\n        '#{map-get(_l1-shadows($l1-color), $elevation)},\n        #{map-get(_l2-shadows($l2-color), $elevation)},\n        #{map-get(_l3-shadows($l3-color), $elevation)}'\n    );\n}\n\n/// Returns an igx elevation from an igx-elevations produced map.\n/// @access public\n/// @param {Map} $elevations - The igx-elevations map to extract the elevation from.\n/// @param {number} $elevation - The elevation level from 1 to 24.\n/// @returns {String} Returns a box-shadow value.\n@function igx-elevation($elevations, $elevation) {\n    @if type-of($elevation) != number or not unitless($elevation) {\n        @error '$elevation must be a number';\n    }\n\n    @if $elevation < 1 or $elevation > 24 {\n        @error '$elevation must be between 1 and 24';\n    }\n\n    @return map-get($elevations, #{$elevation});\n}\n\n/// Generates a map of 24 shadows.\n/// @access public\n/// @requires _elevation\n/// @param {Color} $color-1 - The umbra shadow color.\n/// @param {Color} $color-2 - The penumbra shadow color.\n/// @param {Color} $color-3 - The ambient shadow color.\n@function igx-elevations($color-1, $color-2, $color-3) {\n    $result: ();\n\n    @for $i from 1 through 24 {\n        $elevation: (#{$i}: _elevation($i, $color-1, $color-2, $color-3));\n        $result: map-merge($result, $elevation)\n    }\n\n    @return $result;\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type Timing Function\n$ease-in-quad: cubic-bezier(.55, .085, .68, .53);\n/// @type Timing Function\n$ease-in-cubic: cubic-bezier(.55, .55, .675, .19);\n/// @type Timing Function\n$ease-in-quart: cubic-bezier(.895, .03, .685, .22);\n/// @type Timing Function\n$ease-in-quint: cubic-bezier(.755, .05, .855, .06);\n/// @type Timing Function\n$ease-in-sine: cubic-bezier(.47, 0, .745, .715);\n/// @type Timing Function\n$ease-in-expo: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-circ: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-back: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-out-quad: cubic-bezier(.25, .46, .45, .94);\n/// @type Timing Function\n$ease-out-cubic: cubic-bezier(.215, .61, .355, 1);\n/// @type Timing Function\n$ease-out-quart: cubic-bezier(.165, .84, .44, 1);\n/// @type Timing Function\n$ease-out-quint: cubic-bezier(.23, 1, .32, 1);\n/// @type Timing Function\n$ease-out-sine: cubic-bezier(.39, .575, .565, 1);\n/// @type Timing Function\n$ease-out-expo: cubic-bezier(.19, 1, .22, 1);\n/// @type Timing Function\n$ease-out-circ: cubic-bezier(.075, .82, .165, 1);\n/// @type Timing Function\n$ease-out-back: cubic-bezier(.175, .885, .32, 1.275);\n/// @type Timing Function\n$ease-in-out-quad: cubic-bezier(.455, .03, .515, .955);\n/// @type Timing Function\n$ease-in-out-cubic: cubic-bezier(.645, .045, .355, 1);\n/// @type Timing Function\n$ease-in-out-quart: cubic-bezier(.77, 0, .175, 1);\n/// @type Timing Function\n$ease-in-out-quint: .5s cubic-bezier(.86, 0, .07, 1);\n/// @type Timing Function\n$ease-in-out-sine: cubic-bezier(.445, .05, .55, .95);\n/// @type Timing Function\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n/// @type Timing Function\n$ease-in-out-circ: cubic-bezier(.785, .135, .15, .86);\n/// @type Timing Function\n$ease-in-out-back: cubic-bezier(.68, -.55, .265, 1.55);\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// Does ___not___ apply for disabled state colors.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for the component theme.\r\n/// @param {String} $button-roundness [null]- The edge roundness(border-radius) for flat and raised buttons.\r\n///\r\n/// @param {Color} $flat-text-color [null] - The idle text color of a flat button.\r\n/// @param {Color} $flat-hover-text-color [null] - The hover text color of a flat button.\r\n/// @param {Color} $flat-background [null] - The background color of a flat button.\r\n/// @param {Color} $flat-hover-background [null] - The hover background color of a flat button.\r\n/// @param {Color} $flat-focus-text-color [null] - The focus text color of a flat button.\r\n/// @param {Color} $flat-focus-background [null] - The focus background color of a flat button.\r\n///\r\n/// @param {Color} $raised-text-color [null] - The idle text color of a raised button.\r\n/// @param {Color} $raised-hover-text-color [null] - The hover text color of a raised button.\r\n/// @param {Color} $raised-background [null] - The background color of a raised button.\r\n/// @param {Color} $raised-hover-background [null] - The hover background of a raised button.\r\n/// @param {Color} $raised-focus-text-color [null] - The focus text color of a raised button.\r\n/// @param {Color} $raised-focus-background [null] - The focus background color of a raised button.\r\n///\r\n/// @param {Color} $fab-text-color [null] - The text color of a floating action button.\r\n/// @param {Color} $fab-hover-text-color [null] - The hover text color of a floating action button.\r\n/// @param {Color} $fab-background [null] - The background color of a floating action button.\r\n/// @param {Color} $fab-hover-background [null] - The hover background color of a floating action button.\r\n/// @param {Color} $fab-focus-text-color [null] - The focus text color of a floating action button.\r\n/// @param {Color} $fab-focus-background [null] - The focus background color of floating action button.\r\n///\r\n/// @param {Color} $icon-color [null] - The icon color of an icon button.\r\n/// @param {Color} $icon-hover-color [null] - The hover icon color of an icon button.\r\n/// @param {Color} $icon-background [null] - The background color of the an icon button.\r\n/// @param {Color} $icon-hover-background [null] - The hover background color of an icon button.\r\n/// @param {Color} $icon-focus-color [null] - The focus icon color of an icon button.\r\n/// @param {Color} $icon-focus-background [null] - The focus background color an icon button.\r\n///\r\n/// @param {Color} $disabled-color [null] - The disabled text/icon color of a button.\r\n/// @param {Color} $disabled-background [null] - The disabled background color of raised, fab, or icon buttons.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires igx-contrast-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Change the background and text colors in raised buttons\r\n///   $my-button-theme: igx-button-theme(\r\n///     $raised-text-color: white,\r\n///     $raised-background: black\r\n///   );\r\n///   // Pass the theme to the igx-button component mixin\r\n///   @include igx-button($my-button-theme);\r\n@function igx-button-theme(\r\n    $palette: $default-palette,\r\n    $button-roundness: null,\r\n\r\n    $flat-text-color: null,\r\n    $flat-background: null,\r\n    $flat-hover-background: null,\r\n    $flat-hover-text-color: null,\r\n    $flat-focus-background: null,\r\n    $flat-focus-text-color: null,\r\n\r\n    $raised-text-color: null,\r\n    $raised-background: null,\r\n    $raised-hover-background: null,\r\n    $raised-hover-text-color: null,\r\n    $raised-focus-background: null,\r\n    $raised-focus-text-color: null,\r\n\r\n    $fab-text-color: null,\r\n    $fab-background: null,\r\n    $fab-hover-background: null,\r\n    $fab-hover-text-color: null,\r\n    $fab-focus-background: null,\r\n    $fab-focus-text-color: null,\r\n\r\n    $icon-color: null,\r\n    $icon-background: null,\r\n    $icon-hover-background: null,\r\n    $icon-hover-color: null,\r\n    $icon-focus-background: null,\r\n    $icon-focus-color: null,\r\n\r\n    $disabled-color: null,\r\n    $disabled-background: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-button',\r\n        button-roundness: 2px,\r\n\r\n        flat-text-color: igx-color($palette, 'secondary', 500),\r\n        flat-background: transparent,\r\n\r\n        flat-hover-background: rgba(igx-color($palette, 'secondary'), .05),\r\n        flat-hover-text-color: igx-color($palette, 'secondary', 500),\r\n\r\n        flat-focus-background: rgba(igx-color($palette, 'secondary', 400), .12),\r\n        flat-focus-text-color: igx-color($palette, 'secondary', 500),\r\n\r\n        raised-text-color: igx-contrast-color($palette, 'secondary', 500),\r\n        raised-background: igx-color($palette, 'secondary', 500),\r\n        raised-hover-background: igx-color($palette, 'secondary', 600),\r\n        raised-hover-text-color: #fff,\r\n        raised-focus-background: igx-color($palette, 'secondary', 500),\r\n        raised-focus-text-color: igx-contrast-color($palette, 'secondary', 600),\r\n\r\n        fab-text-color: igx-contrast-color($palette, 'secondary', 500),\r\n        fab-background: igx-color($palette, 'secondary', 500),\r\n        fab-hover-text-color: null,\r\n        fab-hover-background: null,\r\n        fab-focus-background: igx-color($palette, 'secondary', 500),\r\n        fab-focus-text-color: igx-contrast-color($palette, 'secondary', 500),\r\n\r\n        icon-color: igx-color($palette, 'grays', 800),\r\n        icon-background: transparent,\r\n        icon-hover-background: igx-color($palette, 'grays', 100),\r\n        icon-hover-color: igx-color($palette, 'grays', 800),\r\n        icon-focus-background: igx-color($palette, 'grays', 400),\r\n        icon-focus-color: igx-color($palette, 'grays', 800),\r\n\r\n        disabled-color: igx-color($palette, 'grays', 400),\r\n        disabled-background: igx-color($palette, 'grays', 100)\r\n    );\r\n\r\n    @if not($flat-text-color) and $flat-background {\r\n        $flat-text-color: text-contrast($flat-background);\r\n    }\r\n\r\n    @if not($flat-hover-text-color) and $flat-hover-background {\r\n        $flat-hover-text-color: text-contrast($flat-hover-background);\r\n    }\r\n\r\n    @if not($flat-focus-text-color) and $flat-focus-background {\r\n        $flat-focus-text-color: text-contrast($flat-focus-background);\r\n    }\r\n\r\n    @if not($raised-text-color) and $raised-background {\r\n        $raised-text-color: text-contrast($raised-background);\r\n    }\r\n\r\n    @if not($raised-hover-text-color) and $raised-hover-background {\r\n        $raised-hover-text-color: text-contrast($raised-hover-background);\r\n    }\r\n\r\n    @if not($raised-focus-text-color) and $raised-focus-background {\r\n        $raised-focus-text-color: text-contrast($raised-focus-background);\r\n    }\r\n\r\n    @if not($fab-text-color) and $fab-background {\r\n        $fab-text-color: text-contrast($fab-background);\r\n    }\r\n\r\n    @if not($fab-hover-text-color) and $fab-hover-background {\r\n        $fab-hover-text-color: text-contrast($fab-hover-background);\r\n    }\r\n\r\n    @if not($fab-focus-text-color) and $fab-focus-background {\r\n        $fab-focus-text-color: text-contrast($fab-focus-background);\r\n    }\r\n\r\n    @if not($icon-color) and $icon-background {\r\n        $icon-color: text-contrast($icon-background);\r\n    }\r\n\r\n    @if not($icon-focus-color) and $icon-focus-background {\r\n        $icon-focus-color: text-contrast($icon-focus-background);\r\n    }\r\n\r\n    @if not($icon-hover-color) and $icon-hover-background {\r\n        $icon-hover-color: text-contrast($icon-hover-background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        button-roundness: $button-roundness,\r\n\r\n        flat-text-color: $flat-text-color,\r\n        flat-background: $flat-background,\r\n        flat-hover-background: $flat-hover-background,\r\n        flat-hover-text-color: $flat-hover-text-color,\r\n        flat-focus-background: $flat-focus-background,\r\n        flat-focus-text-color: $flat-focus-text-color,\r\n\r\n        raised-text-color: $raised-text-color,\r\n        raised-background: $raised-background,\r\n        raised-hover-background: $raised-hover-background,\r\n        raised-hover-text-color: $raised-hover-text-color,\r\n        raised-focus-background: $raised-focus-background,\r\n        raised-focus-text-color: $raised-focus-text-color,\r\n\r\n        fab-text-color: $fab-text-color,\r\n        fab-background: $fab-background,\r\n        fab-hover-background: $fab-hover-background,\r\n        fab-hover-text-color: $fab-hover-text-color,\r\n        fab-focus-background: $fab-focus-background,\r\n        fab-focus-text-color: $fab-focus-text-color,\r\n\r\n        icon-color: $icon-color,\r\n        icon-background: $icon-background,\r\n        icon-hover-background: $icon-hover-background,\r\n        icon-hover-color: $icon-hover-color,\r\n        icon-focus-background: $icon-focus-background,\r\n        icon-focus-color: $icon-focus-color,\r\n\r\n        disabled-color: $disabled-color,\r\n        disabled-background: $disabled-background,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-elevation\r\n/// @requires rem\r\n/// @requires --var\r\n/// @requires $elevations\r\n@mixin igx-button($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $button-border: none;\r\n    $button-font-size: rem(14px, 16px);\r\n    $button-line-height: 1;\r\n    $button-font-weight: 600;\r\n    $button-width: rem(88px);\r\n    $button-height: rem(36px);\r\n    $button-padding: 0 rem(16px, 16px);\r\n    $button-transition: all .15s ease-out;\r\n    $button-round-radius: 50%;\r\n\r\n    $button-disabled-shadow: none;\r\n\r\n    $button-raised-shadow: igx-elevation($elevations, 2);\r\n    $button-hover-shadow: igx-elevation($elevations, 4);\r\n    $button-raised-focus-shadow: igx-elevation($elevations, 8);\r\n\r\n    $button-floating-width: rem(56px);\r\n    $button-floating-height: $button-floating-width;\r\n    $button-floating-shadow: igx-elevation($elevations, 6);\r\n    $button-floating-hover-shadow: igx-elevation($elevations, 12);\r\n\r\n    $button-icon-width: rem(36px, 16px);\r\n    $button-icon-height: $button-icon-width;\r\n    $button-icon-font-size: rem(24px, 24px);\r\n    $button-icon-padding: 0;\r\n\r\n    %igx-button-display {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: relative;\r\n        min-width: $button-width;\r\n        height: $button-height;\r\n        padding: $button-padding;\r\n        font-size: $button-font-size;\r\n        font-weight: $button-font-weight;\r\n        line-height: $button-line-height;\r\n        text-align: center;\r\n        border: $button-border;\r\n        border-radius: --var($theme, 'button-roundness');\r\n        text-transform: uppercase;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        outline: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n        overflow: hidden;\r\n        transition: $button-transition;\r\n    }\r\n\r\n    %igx-button--flat {\r\n        background: --var($theme, 'flat-background');\r\n        color: --var($theme, 'flat-text-color');\r\n\r\n        &:hover {\r\n            background: --var($theme, 'flat-hover-background');\r\n            color: --var($theme, 'flat-hover-text-color');\r\n        }\r\n\r\n        &:focus,\r\n        &:active {\r\n            background: --var($theme, 'flat-focus-background');\r\n            color: --var($theme, 'flat-focus-text-color');\r\n        }\r\n    }\r\n\r\n    %igx-button--raised {\r\n        color: --var($theme, 'raised-text-color');\r\n        background: --var($theme, 'raised-background');\r\n        box-shadow: $button-raised-shadow;\r\n\r\n        &:focus,\r\n        &:hover {\r\n            color: --var($theme, 'raised-hover-text-color');\r\n            background: --var($theme, 'raised-hover-background');\r\n            box-shadow: $button-hover-shadow;\r\n        }\r\n\r\n        &:active {\r\n            color: --var($theme, 'raised-focus-text-color');\r\n            background: --var($theme, 'raised-focus-background');\r\n            box-shadow: $button-raised-focus-shadow;\r\n        }\r\n    }\r\n\r\n    %igx-button--round {\r\n        display: inline-flex;\r\n        position: relative;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: $button-border;\r\n        border-radius: $button-round-radius;\r\n        outline: none;\r\n        cursor: pointer;\r\n        transition: $button-transition;\r\n        user-select: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n        overflow: hidden;\r\n        // hack to allow circular overflow in safari...\r\n        filter: blur(0);\r\n    }\r\n\r\n    %igx-button--fab {\r\n        width: $button-floating-width;\r\n        height: $button-floating-height;\r\n        color: --var($theme, 'fab-text-color');\r\n        background: --var($theme, 'fab-background');\r\n        box-shadow: $button-floating-shadow;\r\n\r\n        &:hover {\r\n            box-shadow: $button-floating-hover-shadow;\r\n            color: --var($theme, 'fab-hover-text-color');\r\n            background: --var($theme, 'fab-hover-background');\r\n        }\r\n\r\n        &:focus,\r\n        &:active {\r\n            color: --var($theme, 'fab-focus-text-color');\r\n            background: --var($theme, 'fab-focus-background');\r\n        }\r\n    }\r\n\r\n    %igx-button--icon {\r\n        width: $button-icon-width;\r\n        height: $button-icon-width;\r\n        font-size: $button-icon-font-size;\r\n        padding: $button-icon-padding;\r\n        color: --var($theme, 'icon-color');\r\n        background: --var($theme, 'icon-background');\r\n\r\n        &:hover {\r\n            transition: $button-transition;\r\n            color: --var($theme, 'icon-hover-color');\r\n            background: --var($theme, 'icon-hover-background');\r\n        }\r\n\r\n        &:focus,\r\n        &:active {\r\n            color: --var($theme, 'icon-focus-color');\r\n            background: --var($theme, 'icon-focus-background');\r\n        }\r\n    }\r\n\r\n    %igx-button--disabled {\r\n        color: --var($theme, 'disabled-color') !important;\r\n        background: --var($theme, 'disabled-background') !important;\r\n        pointer-events: none;\r\n        box-shadow: $button-disabled-shadow;\r\n\r\n        &%igx-button--flat {\r\n            background: transparent !important;\r\n        }\r\n    }\r\n}\r\n\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// Does ___not___ apply for disabled state colors.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $item-text-color [null]- The text color for button group items.\r\n/// @param {Color} $item-background [null] - The background color for button group items .\r\n/// @param {Color} $item-border-color [null] - The border color between button group items.\r\n///\r\n/// @param {Color} $item-hover-text-color [null] - The hover text color for button group items.\r\n/// @param {Color} $item-hover-background [null] - The hover background color for button group items.\r\n///\r\n/// @param {Color} $item-selected-text-color [null]- The text color for a selected item in the button group.\r\n/// @param {Color} $item-selected-background [null] - The background color for a selected item in the button group.\r\n/// @param {Color} $item-selected-border-color [null] - The border color for a selected item from the button group.\r\n///\r\n/// @param {Color} $disabled-text-color [null]- The text/icon color for a disabled item in the button group.\r\n/// @param {Color} $disabled-background-color [null] - The background color for a disabled item in the button group.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Change the background, text, and border colors\r\n///   $my-button-group-theme: igx-button-group-theme(\r\n///     $item-text-color: white,\r\n///     $item-background: rgba(0, 0, 0, .8),\r\n///     $$item-border-color: #dadada\r\n///   );\r\n///   // Pass the theme to the igx-button-group component mixin\r\n///   @include igx-button-group($my-button-group-theme);\r\n@function igx-button-group-theme(\r\n    $palette: $default-palette,\r\n\r\n    $item-text-color: null,\r\n    $item-background: null,\r\n    $item-border-color: null,\r\n\r\n    $item-hover-text-color: null,\r\n    $item-hover-background: null,\r\n\r\n    $disabled-text-color: null,\r\n    $disabled-background-color: null,\r\n\r\n    $item-selected-text-color: null,\r\n    $item-selected-background: null,\r\n    $item-selected-border-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-button-group',\r\n        item-text-color: igx-color($palette, 'grays', 500),\r\n        item-background: #fff,\r\n        item-border-color: transparent,\r\n\r\n        item-hover-text-color: igx-color($palette, 'grays', 800),\r\n        item-hover-background: igx-color($palette, 'grays', 400),\r\n\r\n        item-selected-text-color: igx-color($palette, 'grays', 800),\r\n        item-selected-background: igx-color($palette, 'grays', 400),\r\n        item-selected-border-color: rgba(igx-color($palette, 'grays', 500), .12),\r\n\r\n        disabled-text-color: igx-color($palette, 'grays', 300),\r\n        disabled-background-color: igx-color($palette, 'grays', 100)\r\n    );\r\n\r\n    @if not($item-text-color) and $item-background  {\r\n        $item-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-hover-background) and $item-background {\r\n        $item-hover-background: rgba(text-contrast($item-background), .2);\r\n    }\r\n\r\n    @if not($item-hover-text-color) and $item-hover-background {\r\n        $item-hover-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-selected-background) and $item-background {\r\n        $item-selected-background: rgba(text-contrast($item-background), .2);\r\n    }\r\n\r\n    @if not($item-selected-border-color) and $item-background {\r\n        $item-selected-border-color: rgba(text-contrast($item-background), .2);\r\n    }\r\n\r\n    @if not($item-selected-background) and $item-background {\r\n        $item-selected-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-selected-text-color) and $item-selected-background {\r\n        $item-selected-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($disabled-text-color) and $item-background {\r\n        $disabled-text-color: rgba(text-contrast($item-background), .3);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        item-text-color: $item-text-color,\r\n        item-background: $item-background,\r\n        item-border-color: $item-border-color,\r\n\r\n        item-hover-text-color: $item-hover-text-color,\r\n        item-hover-background: $item-hover-background,\r\n\r\n        disabled-text-color:$disabled-text-color,\r\n        disabled-background-color:$disabled-background-color,\r\n\r\n        item-selected-text-color: $item-selected-text-color,\r\n        item-selected-background: $item-selected-background,\r\n        item-selected-border-color: $item-selected-border-color\r\n    ));\r\n}\r\n\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires --var\r\n@mixin igx-button-group($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $group-radius: 2px;\r\n    $group-shadow: igx-elevation($elevations, 2);\r\n\r\n    $group-item-min-width: 24px;\r\n    $group-item-min-height: 36px;\r\n    $group-item-border-thickness: 1px;\r\n    $group-item-font-weight: 600;\r\n\r\n    $group-items-margin: rem(10px, 16px);\r\n\r\n    %igx-group-display {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        justify-content: center;\r\n        border-radius: $group-radius;\r\n        box-shadow: $group-shadow;\r\n        transition: box-shadow .2s ease;\r\n        overflow: hidden;\r\n        background-color: --var($theme, 'item-background');\r\n\r\n        %igx-button--disabled {\r\n            color: --var($theme, 'disabled-text-color') !important;\r\n            background-color: --var($theme, 'disabled-background-color') !important;\r\n        }\r\n    }\r\n\r\n    %igx-group-vertical {\r\n        flex-flow: column nowrap;\r\n    }\r\n\r\n    %igx-group-item {\r\n        box-sizing: content-box;\r\n        flex-grow: 1;\r\n        flex-basis: 0;\r\n        border: initial;\r\n        border-radius: 0;\r\n        border-left: $group-item-border-thickness solid;\r\n        border-right: $group-item-border-thickness solid;\r\n        border-color: --var($theme, 'item-border-color');\r\n        color: --var($theme, 'item-text-color');\r\n        background-color: --var($theme, 'item-background');\r\n        min-width: $group-item-min-width;\r\n        min-height: $group-item-min-height;\r\n        font-weight: $group-item-font-weight;\r\n\r\n        &:first-child {\r\n            border-left-width: 0;\r\n        }\r\n\r\n        &:last-child {\r\n            border-right-width: 0;\r\n        }\r\n\r\n        &:hover,\r\n        &:focus{\r\n            color: --var($theme, 'item-hover-text-color');\r\n            background-color: --var($theme, 'item-hover-background');\r\n        }\r\n    }\r\n\r\n    %igx-group-item-vertical {\r\n        border-left: 0;\r\n        border-right: 0;\r\n        border-bottom: $group-item-border-thickness solid;\r\n        border-color: --var($theme, 'item-border-color');\r\n\r\n        &:first-child {\r\n            border-top: 0;\r\n        }\r\n    }\r\n\r\n    %igx-group-item-selected {\r\n        color: --var($theme, 'item-selected-text-color');\r\n        background-color: --var($theme, 'item-selected-background');\r\n        border-color: --var($theme, 'item-selected-border-color');\r\n\r\n        &:hover,\r\n        &:focus{\r\n            color: --var($theme, 'item-selected-text-color');\r\n            background-color: --var($theme, 'item-selected-background');\r\n            border-color: --var($theme, 'item-selected-border-color');\r\n        }\r\n    }\r\n\r\n    %igx-group-item-content {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        justify-content: center;\r\n        align-items: center;\r\n        text-align: center;\r\n\r\n        * ~ * {\r\n            margin-left: $group-items-margin;\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only header background color is specified, that color will be\r\n/// used as the leading color for all accented elements, such as:\r\n/// - current date color\r\n/// - selected date background\r\n/// - picker elements hover colors\r\n/// - year/month hover/selected colors\r\n/// If only background colors are specified, text/icon colors\r\n/// will be assigned automatically to a contrasting color.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $content-background [null] - The main content background color.\r\n/// @param {Color} $content-text-color [null] - The main content text color.\r\n///\r\n/// @param {Color} $header-background [null] - The header background color.\r\n/// @param {Color} $header-text-color [null] - The header text color.\r\n///\r\n/// @param {Color} $picker-arrow-color [null] - The idle picker arrow color.\r\n/// @param {Color} $picker-arrow-hover-color [null] - The picker hover arrow color.\r\n///\r\n/// @param {Color} $picker-text-color [null]- The idle picker month/year color.\r\n/// @param {Color} $picker-text-hover-color [null]-  The hover picker month/year color.\r\n///\r\n/// @param {Color} $inactive-text-color [null] - The text color for weekday labels and other month dates.\r\n/// @param {Color} $weekend-text-color [null] - The text color for weekend days.\r\n///\r\n/// @param {Color} $year-current-text-color [null] - The text color for the current/selected year.\r\n/// @param {Color} $month-current-text-color [null]- The text color for the current/selected month.\r\n///\r\n/// @param {Color} $year-hover-text-color [null] - The year hover text color.\r\n/// @param {Color} $month-hover-text-color [null] - The month hover text color.\r\n///\r\n/// @param {Color} $date-selected-background [null] - The background color for the selected date.\r\n/// @param {Color} $date-selected-text-color [null] - The text color for the selected date.\r\n///\r\n/// @param {Color} $date-current-text-color [null] - The text color for the current date.\r\n/// @param {Color} $date-hover-background [null] - The hover date background color.\r\n///\r\n/// @requires igx-color\r\n/// @requires igx-contrast-color\r\n/// @requires text-contrast\r\n/// @requires extend\r\n///\r\n/// @example scss Change the header and content background colors\r\n///   $my-calendar-theme: igx-calendar-theme(\r\n///     $header-background: purple,\r\n///     $content-background: black\r\n///   );\r\n///   // Pass the theme to the igx-calendar component mixin\r\n///   @include igx-calendar($my-calendar-theme);\r\n@function igx-calendar-theme(\r\n    $palette: $default-palette,\r\n\r\n    $content-background: null,\r\n    $content-text-color: null,\r\n\r\n    $header-background: null,\r\n    $header-text-color: null,\r\n\r\n    $picker-arrow-color: null,\r\n    $picker-arrow-hover-color: null,\r\n\r\n    $picker-text-color: null,\r\n    $picker-text-hover-color: null,\r\n\r\n    $inactive-text-color: null,\r\n    $weekend-text-color: null,\r\n\r\n    $year-current-text-color: null,\r\n    $month-current-text-color: null,\r\n\r\n    $year-hover-text-color: null,\r\n    $month-hover-text-color: null,\r\n\r\n    $date-selected-background: null,\r\n    $date-selected-text-color: null,\r\n\r\n    $date-current-text-color: null,\r\n    $date-hover-background: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-calendar',\r\n\r\n        content-background: #fff,\r\n        content-text-color: igx-color($palette, 'grays', 900),\r\n\r\n        header-background: igx-color($palette, 'secondary', 500),\r\n        header-text-color: igx-contrast-color($palette, 'secondary', 500),\r\n\r\n        picker-arrow-color: igx-color($palette, 'grays', 800),\r\n        picker-arrow-hover-color: igx-color($palette, 'secondary', 500),\r\n\r\n        picker-text-color: igx-color($palette, 'grays', 800),\r\n        picker-text-hover-color: igx-color($palette, 'secondary', 500),\r\n\r\n        inactive-text-color: igx-color($palette, 'grays', 400),\r\n        weekend-text-color: igx-color($palette, 'grays', 400),\r\n\r\n        year-current-text-color: igx-color($palette, 'secondary', 500),\r\n        month-current-text-color: igx-color($palette, 'secondary', 500),\r\n\r\n        year-hover-text-color: igx-color($palette, 'secondary', 500),\r\n        month-hover-text-color: igx-color($palette, 'secondary', 500),\r\n\r\n        date-selected-background: igx-color($palette, 'secondary', 500),\r\n        date-selected-text-color: igx-contrast-color($palette, 'secondary', 500),\r\n\r\n        date-current-text-color: igx-color($palette, 'secondary', 500),\r\n        date-hover-background: igx-color($palette, 'grays', 100)\r\n    );\r\n\r\n\r\n    @if not($content-text-color) and $content-background {\r\n        $content-text-color: text-contrast($content-background);\r\n    }\r\n\r\n    @if not($weekend-text-color) and $content-background {\r\n        $weekend-text-color: rgba($content-text-color, .7);\r\n    }\r\n\r\n    @if not($inactive-text-color) and $content-background {\r\n        $inactive-text-color: rgba($content-text-color, .5);\r\n    }\r\n\r\n    @if not($picker-arrow-color) and $content-background {\r\n        $picker-arrow-color: $content-text-color;\r\n    }\r\n\r\n    @if not($picker-arrow-hover-color) and $header-background {\r\n        $picker-arrow-hover-color: $header-background;\r\n    }\r\n\r\n    @if not($picker-text-color) and $content-background {\r\n        $picker-text-color: $content-text-color;\r\n    }\r\n\r\n    @if not($picker-text-hover-color) and $header-background {\r\n        $picker-text-hover-color: $header-background;\r\n    }\r\n\r\n    @if not($header-text-color) and $header-background {\r\n        $header-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($date-selected-background) and $header-background {\r\n        $date-selected-background: $header-background;\r\n    }\r\n\r\n    @if not($date-selected-text-color) and $date-selected-background {\r\n        $date-selected-text-color: $content-background;\r\n    }\r\n\r\n    @if not($date-hover-background) and $content-background {\r\n        $date-hover-background: rgba(text-contrast($content-background), .12);\r\n    }\r\n\r\n    @if not($date-current-text-color) and $header-background {\r\n        $date-current-text-color: $header-background;\r\n    }\r\n\r\n    @if not($year-hover-text-color) and $header-background {\r\n        $year-hover-text-color: $header-background;\r\n    }\r\n\r\n    @if not($month-hover-text-color) and $header-background {\r\n        $month-hover-text-color: $header-background;\r\n    }\r\n\r\n    @if not($year-current-text-color) and $header-background {\r\n        $year-current-text-color: $header-background;\r\n    }\r\n\r\n    @if not($month-current-text-color) and $header-background {\r\n        $month-current-text-color: $header-background;\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        content-background: $content-background,\r\n        content-text-color: $content-text-color,\r\n\r\n        header-background: $header-background,\r\n        header-text-color: $header-text-color,\r\n\r\n\r\n        picker-arrow-color: $picker-arrow-color,\r\n        picker-arrow-hover-color: $picker-arrow-hover-color,\r\n\r\n        picker-text-color: $picker-text-color,\r\n        picker-text-hover-color: $picker-text-hover-color,\r\n\r\n        weekend-text-color: $weekend-text-color,\r\n        inactive-text-color: $inactive-text-color,\r\n\r\n        year-current-text-color: $year-current-text-color,\r\n        month-current-text-color: $month-current-text-color,\r\n\r\n        year-hover-text-color: $year-hover-text-color,\r\n        month-hover-text-color: $month-hover-text-color,\r\n\r\n        date-selected-background: $date-selected-background,\r\n        date-selected-text-color: $date-selected-text-color,\r\n\r\n        date-current-text-color: $date-current-text-color,\r\n        date-hover-background: $date-hover-background\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires em\r\n/// @requires rem\r\n/// @requires --var\r\n/// @requires {mixin} ellipsis\r\n@mixin igx-calendar($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $cal-header-year-fs: em(18px);\r\n    $cal-header-year-lh: em(16px);\r\n    $cal-header-year-margin: 0;\r\n    $cal-header-date-fs: em(38px);\r\n    $cal-header-date-lh: em(22px);\r\n    $cal-header-date-margin: 0;\r\n    $cal-header-padding: em(16px);\r\n\r\n    $cal-picker-date-fs: em(18px);\r\n    $cal-picker-date-lh: em(22px);\r\n    $cal-picker-date-fw: 600;\r\n    $cal-picker-padding: em(16px);\r\n\r\n    $cal-value-w: em(40px);\r\n    $cal-value-h: $cal-value-w;\r\n    $cal-value-br: $cal-value-w / 2;\r\n    $cal-value-margin: em(2px);\r\n    $cal-value-fs: em(16px);\r\n    $cal-value-lh: $cal-value-h;\r\n    $cal-value-fw: 600;\r\n\r\n    $cal-value-year-fs: em(18px);\r\n    $cal-value-year-current-fs: em(24px);\r\n    $cal-value-year-hover-fs: em(27px);\r\n    $cal-value-month-margin: 0 em(12px);\r\n    $cal-value-month-height: em(91px);\r\n\r\n    $cal-row-padding: 0 em(16px);\r\n\r\n    %cal-display {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        width: 100%;\r\n        background: --var($theme, 'content-background');\r\n        overflow: hidden;\r\n        outline: none;\r\n\r\n        &[dir='rtl'] {\r\n            .prev,\r\n            .next {\r\n                @extend %cal-picker-arrow--rtl;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cal-display--vertical {\r\n        flex-flow: row nowrap;\r\n\r\n        %cal-header-display {\r\n            min-width: em(168px);\r\n        }\r\n    }\r\n\r\n    %cal-header-display {\r\n        background-color: --var($theme, 'header-background');\r\n        color: --var($theme, 'header-text-color');\r\n        padding: $cal-header-padding;\r\n    }\r\n\r\n    %cal-header-year {\r\n        margin: $cal-header-year-margin;\r\n        color: currentColor;\r\n        font-size: $cal-header-year-fs;\r\n        opacity: .8;\r\n    }\r\n\r\n    %cal-header-date {\r\n        display: flex;\r\n        margin: $cal-header-date-margin;\r\n        font-size: $cal-header-date-fs;\r\n        line-height: $cal-header-date-lh;\r\n\r\n        .date-text {\r\n            @include ellipsis();\r\n        }\r\n    }\r\n\r\n    %cal-header-date--vertical {\r\n        flex-flow: column nowrap;\r\n    }\r\n\r\n    %cal-header-date-el--hover {\r\n        &:hover,\r\n        &:focus {\r\n            color: --var($theme, 'picker-text-hover-color');\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    %cal-picker-display {\r\n        display: flex;\r\n        height: em(56px);\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding-bottom: $cal-picker-padding;\r\n        padding-left: $cal-picker-padding;\r\n        padding-right: $cal-picker-padding;\r\n    }\r\n\r\n    %cal-picker-arrow {\r\n        display: inline-flex;\r\n        color: --var($theme, 'picker-arrow-color');\r\n        user-select: none;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            color: --var($theme, 'picker-arrow-hover-color');\r\n        }\r\n    }\r\n\r\n    %cal-picker-arrow--rtl {\r\n        transform: scaleX(-1);\r\n    }\r\n\r\n    %cal-picker-date {\r\n        font-size: $cal-picker-date-fs;\r\n        line-height: $cal-picker-date-lh;\r\n        font-weight: $cal-picker-date-fw;\r\n        color: --var($theme, 'picker-text-color');\r\n        text-align: center;\r\n    }\r\n\r\n    %cal-body-display {\r\n        flex: 1 1 auto;\r\n        padding-top: $cal-picker-padding;\r\n        padding-bottom: $cal-picker-padding;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %cal-row-display {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: $cal-row-padding;\r\n    }\r\n\r\n    %cal-row-display--wrap {\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    %cal-column-display {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    %cal-value {\r\n        @include ellipsis();\r\n        width: $cal-value-w;\r\n        height: $cal-value-h;\r\n        min-width: 2ch;\r\n        font-size: $cal-value-fs;\r\n        margin: $cal-value-margin;\r\n        line-height: $cal-value-lh;\r\n        text-align: center;\r\n        border-radius: $cal-value-br;\r\n        color: --var($theme, 'content-text-color');\r\n        cursor: pointer;\r\n        outline: none;\r\n        transition: background .15s ease-out;\r\n    }\r\n\r\n    %cal-value--label {\r\n        color: --var($theme, 'inactive-text-color');\r\n        cursor: default;\r\n        border-radius: 0;\r\n    }\r\n\r\n    %cal-value--weekend {\r\n        color: --var($theme, 'weekend-text-color');\r\n    }\r\n\r\n    %cal-value--year {\r\n        display: flex;\r\n        margin: 0;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: $cal-value-year-fs;\r\n        min-width: 8ch;\r\n        height: em(44px);\r\n    }\r\n\r\n    %cal-value--year-current {\r\n        font-size: $cal-value-year-current-fs;\r\n        color: --var($theme, 'year-current-text-color');\r\n    }\r\n\r\n    %cal-value--year-hover {\r\n        color: --var($theme, 'year-hover-text-color');\r\n    }\r\n\r\n    %cal-value--month-hover {\r\n        color: --var($theme, 'month-hover-text-color');\r\n    }\r\n\r\n    %cal-value--month {\r\n        display: flex;\r\n        margin: $cal-value-month-margin;\r\n        flex: 1 0 25%;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: $cal-value-month-height;\r\n    }\r\n\r\n    %cal-value--month-current {\r\n        color: --var($theme, 'month-current-text-color');\r\n    }\r\n\r\n    %cal-value--inactive {\r\n        cursor: pointer;\r\n        color: --var($theme, 'inactive-text-color');\r\n    }\r\n\r\n    %cal-value--selected {\r\n        position: relative;\r\n        color: --var($theme, 'date-selected-text-color');\r\n        background-color: --var($theme, 'date-selected-background') !important;\r\n        font-weight: $cal-value-fw;\r\n    }\r\n\r\n    %cal-value--current {\r\n        color: --var($theme, 'date-current-text-color');\r\n        font-weight: $cal-value-fw;\r\n    }\r\n\r\n    %cal-value--hover {\r\n        background-color: --var($theme, 'date-hover-background');\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Card Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null]- The card background color.\r\n/// @param {Color} $header-text-color [null] - The text color of the card title.\r\n/// @param {Color} $subtitle-text-color [null] - The text color of the card subtitle.\r\n/// @param {Color} $content-text-color [null] - The text color of the card content.\r\n/// @param {Color} $actions-text-color [null] - The text color of the card buttons.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Change the background and content text colors in card\r\n///   $my-card-theme: igx-card-theme(\r\n///     $background: #fff,\r\n///     $content-text-color: rgba(0, 0, 0, .8)\r\n///   );\r\n///   // Pass the theme to the igx-card component mixin\r\n///   @include igx-calendar($my-card-theme);\r\n@function igx-card-theme(\r\n    $palette: $default-palette,\r\n    $background: null,\r\n    $header-text-color: null,\r\n    $subtitle-text-color: null,\r\n    $content-text-color: null,\r\n    $actions-text-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-card',\r\n        background: #fff,\r\n        header-text-color: igx-color($palette, grays, 800),\r\n        subtitle-text-color: igx-color($palette, grays, 600),\r\n        content-text-color: igx-color($palette, grays, 600),\r\n        actions-text-color: igx-color($palette, grays, 600)\r\n    );\r\n\r\n    @if not($header-text-color) and $background {\r\n        $header-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($actions-text-color) and $background {\r\n        $actions-text-color: rgba(text-contrast($background), .5);\r\n    }\r\n\r\n    @if not($content-text-color) and $background {\r\n        $content-text-color: rgba(text-contrast($background), .7);\r\n    }\r\n\r\n    @if not($subtitle-text-color) and $background {\r\n        $subtitle-text-color: rgba(text-contrast($background), .7);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        header-text-color: $header-text-color,\r\n        subtitle-text-color:$subtitle-text-color,\r\n        content-text-color:$content-text-color,\r\n        actions-text-color:$actions-text-color\r\n    ));\r\n}\r\n\r\n/// Card Component\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires em\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n@mixin igx-card($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $card-border-radius: 2px;\r\n    $card-shadow: igx-elevation($elevations, 2);\r\n    $card-shadow-hover: igx-elevation($elevations, 8);\r\n\r\n    $card-title-fz: em(24px, 16px);\r\n    $card-title-line-height: em(24px, 16px);\r\n    $card-subtitle-fz: em(14px, 16px);\r\n    $card-subtitle-line-height: em(24px, 16px);\r\n    $card-content-fz: em(14px, 16px);\r\n    $card-content-lh: (20px, 16px);\r\n\r\n    $card-heading-padding: em(24px, 16px) em(16px, 16px) em(16px, 16px) em(16px, 16px);\r\n    $card-heading-compact-padding: em(16px, 16px);\r\n    $card-heading-margin: 0;\r\n    $card-content-padding: em(16px, 16px);\r\n    $card-content-margin: 0;\r\n    $card-actions-padding: em(8px, 16px);\r\n    $card-subtitle-margin: 0;\r\n    $card-tgroup-margin: 0 em(16px);\r\n    $card-transitions: box-shadow .3s cubic-bezier(.25, .8, .25, 1);\r\n\r\n    %igx-card-display {\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        box-shadow: $card-shadow;\r\n        overflow: hidden;\r\n        border-radius: $card-border-radius;\r\n        background: --var($theme, 'background');\r\n        transition: $card-transitions;\r\n        backface-visibility: hidden;\r\n\r\n        &:hover {\r\n            box-shadow: $card-shadow-hover;\r\n        }\r\n    }\r\n\r\n    %igx-card-header {\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        align-items: center;\r\n        // flex: 1 0 100%;\r\n        flex-basis: 100%;\r\n        padding: $card-heading-padding;\r\n        color: --var($theme, 'header-text-color');\r\n    }\r\n\r\n    %igx-card-header--compact {\r\n        padding: $card-heading-compact-padding;\r\n    }\r\n\r\n    %igx-card-header-title {\r\n        margin: $card-heading-margin;\r\n        flex-basis: 100%;\r\n        font-size: $card-title-fz;\r\n        line-height: $card-title-line-height;\r\n    }\r\n\r\n    %igx-card-header-title--small {\r\n        font-size: $card-subtitle-fz;\r\n    }\r\n\r\n    %igx-card-header-subtitle {\r\n        margin: $card-subtitle-margin;\r\n        color: --var($theme, 'subtitle-text-color');\r\n        font-size: $card-subtitle-fz;\r\n        line-height: $card-subtitle-line-height;\r\n    }\r\n\r\n    %igx-card-tgroup {\r\n        margin: $card-tgroup-margin;\r\n    }\r\n\r\n    %igx-card-content {\r\n        flex-basis: 100%;\r\n        padding: $card-content-padding;\r\n    }\r\n\r\n    %igx-card-content-text {\r\n        margin: $card-content-margin;\r\n        color: --var($theme, 'content-text-color');\r\n        font-size: $card-content-fz;\r\n        line-height: $card-content-lh;\r\n    }\r\n\r\n    %igx-card-media {\r\n        width: auto;\r\n        margin-right: auto;\r\n        order: -1;\r\n    }\r\n\r\n    %igx-card-media--right {\r\n        width: auto;\r\n        margin-left: auto;\r\n        order: 9999;\r\n    }\r\n\r\n    %igx-card-actions {\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        flex: 1 0 auto;\r\n        align-items: center;\r\n        padding: $card-actions-padding;\r\n        max-height: 56px;\r\n    }\r\n\r\n    %igx-card-actions-bgroup {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n\r\n        [igxButton] ~ [igxButton] {\r\n            margin-left: 8px;\r\n        }\r\n    }\r\n\r\n    %igx-card-actions-igroup {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n\r\n        .igx-button--icon {\r\n            color: --var($theme, 'actions-text-color');\r\n        }\r\n    }\r\n\r\n    %igx-card-actions-igroup--start {\r\n        margin-right: auto;\r\n    }\r\n\r\n    %igx-card-actions-igroup--end {\r\n        margin-left: auto;\r\n    }\r\n}\r\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-out-center {\n    @include keyframes (scale-out-center) {\n        0% {\n            transform: scale(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bl {\n    @include keyframes (scale-out-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-vertical {\n    @include keyframes (scale-out-vertical) {\n        0% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-top {\n    @include keyframes (scale-out-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-left {\n    @include keyframes (scale-out-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-top {\n    @include keyframes (scale-out-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tr {\n    @include keyframes (scale-out-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tl {\n    @include keyframes (scale-out-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-bottom {\n    @include keyframes (scale-out-ver-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-right {\n    @include keyframes (scale-out-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-horizontal {\n    @include keyframes (scale-out-horizontal) {\n        0% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-br {\n    @include keyframes (scale-out-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-left {\n    @include keyframes (scale-out-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bottom {\n    @include keyframes (scale-out-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-right {\n    @include keyframes (scale-out-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $button-background [null] - The previous/next buttons idle background color.\r\n/// @param {Color} $button-hover-background [null] - The previous/next buttons hover background color.\r\n/// @param {Color} $button-arrow-color [null] - The previous/next buttons idle arrow color.\r\n/// @param {Color} $button-hover-arrow-color [null] - The previous/next buttons hover arrow color.\r\n/// @param {Color} $indicator-dot-color [null] - The active indicator dot color.\r\n/// @param {Color} $indicator-border-color [null] - The idle indicator border color.\r\n/// @param {Color} $indicator-active-border-color [null] - The active indicator border color.\r\n/// @param {Bool} $disable-button-shadow [true] - Show shadow underneath the previous/next buttons.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires text-contrast\r\n/// @requires $elevations\r\n///\r\n/// @example scss Change the previous/next button colors\r\n///   $my-carousel-theme: igx-carousel-theme(\r\n///     $button-background: black,\r\n///     $button-hover-background: white\r\n///   );\r\n///   // Pass the carousel theme to the igx-carousel component mixin\r\n///   @include igx-carousel($my-carousel-theme);\r\n@function igx-carousel-theme(\r\n    $palette: $default-palette,\r\n    $button-background: null,\r\n    $button-hover-background: null,\r\n    $button-arrow-color: null,\r\n    $button-hover-arrow-color: null,\r\n\r\n    $indicator-dot-color: null,\r\n    $indicator-border-color: null,\r\n    $indicator-active-border-color: null,\r\n\r\n    $disable-button-shadow: true\r\n){\r\n    $default-theme: (\r\n        name: 'igx-carousel',\r\n        button-background: #fff,\r\n        button-hover-background: #fff,\r\n        button-arrow-color: igx-color($palette, 'grays', 600),\r\n        button-hover-arrow-color: igx-color($palette, 'grays', 900),\r\n        button-shadow: if($disable-button-shadow == true, none, igx-elevation($elevations, 1)),\r\n\r\n        indicator-dot-color: #fff,\r\n        indicator-border-color: #fff,\r\n        indicator-active-border-color: #fff\r\n    );\r\n\r\n    @if not($button-arrow-color) and $button-background {\r\n        $button-arrow-color: text-contrast($button-background);\r\n    }\r\n\r\n    @if not($button-hover-arrow-color) and $button-hover-background {\r\n        $button-hover-arrow-color: text-contrast($button-hover-background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        button-background: $button-background,\r\n        button-hover-background: $button-hover-background,\r\n        button-arrow-color: $button-arrow-color,\r\n        button-hover-arrow-color: $button-hover-arrow-color,\r\n\r\n        indicator-dot-color: $indicator-dot-color,\r\n        indicator-border-color: $indicator-border-color,\r\n        indicator-active-border-color: $indicator-active-border-color,\r\n\r\n        disable-button-shadow: $disable-button-shadow\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires --var\r\n/// @requires {mixin} animation\r\n/// @requires {mixin} scale-in-center\r\n/// @requires {mixin} scale-out-center\r\n@mixin igx-carousel($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    @include scale-in-center();\r\n    @include scale-out-center();\r\n\r\n    $carousel-arrow-margin: 0 16px;\r\n    $carousel-indicators-margin: 16px 0;\r\n    $carousel-indicators-padding: 0;\r\n    $carousel-indicator-margin: 0 5px;\r\n    $indicator-border-style: 2px solid;\r\n\r\n    %igx-carousel-display {\r\n        display: flex;\r\n        position: relative;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        align-items: center;\r\n        flex-flow: column nowrap;\r\n        transform-style: preserve-3d;\r\n        outline: none;\r\n    }\r\n\r\n    %igx-carousel-slide-wrapper {\r\n        position: relative;\r\n        width: 100%;\r\n        height: inherit;\r\n        overflow: hidden;\r\n\r\n        .active {\r\n            display: block;\r\n        }\r\n    }\r\n\r\n    %igx-carousel-arrow {\r\n        display: flex;\r\n        margin: $carousel-arrow-margin;\r\n        position: absolute;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 46px;\r\n        height: 46px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        cursor: pointer;\r\n        border-radius: 50%;\r\n        outline-style: none;\r\n        transition: all .15s ease-in-out;\r\n        color: --var($theme, 'button-arrow-color');\r\n        background-color: --var($theme, 'button-background');\r\n        box-shadow: --var($theme, 'button-shadow');\r\n\r\n        span {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n    }\r\n\r\n    %igx-carousel-arrow--hover {\r\n        color: --var($theme, 'button-hover-arrow-color');\r\n        background: --var($theme, 'button-hover-background');\r\n    }\r\n\r\n    %igx-carousel-arrow--next {\r\n        right: 0;\r\n    }\r\n\r\n    %igx-carousel-arrow--prev {\r\n        left: 0;\r\n    }\r\n\r\n    %igx-carousel-indicators {\r\n        display: flex;\r\n        margin: $carousel-indicators-margin;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: absolute;\r\n        list-style: none;\r\n        z-index: 10;\r\n        bottom: 0;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        padding: $carousel-indicators-padding;\r\n\r\n        li {\r\n            margin: $carousel-indicator-margin;\r\n            position: relative;\r\n            width: 12px;\r\n            height: 12px;\r\n            text-indent: -9999px;\r\n            cursor: pointer;\r\n            border: $indicator-border-style;\r\n            border-color: --var($theme, 'indicator-border-color');\r\n            border-radius: 50%;\r\n            transition: all .15s $ease-out-quad;\r\n            box-shadow: igx-elevation($elevations, 1);\r\n            opacity: .7;\r\n\r\n            &::after {\r\n                content: '';\r\n                position: absolute;\r\n                top: 1px;\r\n                bottom: 1px;\r\n                left: 1px;\r\n                right: 1px;\r\n                border-radius: inherit;\r\n                background: --var($theme, 'indicator-dot-color');\r\n                @include animation('scale-out-center' .15s $ease-out-quad forwards);\r\n                opacity: 0;\r\n            }\r\n\r\n            &.active {\r\n                border: $indicator-border-style;\r\n                border-color: --var($theme, 'indicator-active-border-color');\r\n                opacity: 1;\r\n            }\r\n\r\n            &.active::after {\r\n                opacity: 1;\r\n                @include animation('scale-in-center' .15s $ease-out-quad forwards);\r\n            }\r\n\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-carousel-slide {\r\n        display: none;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        transition: .5s ease-in-out left;\r\n        backface-visibility: hidden;\r\n        perspective: 1000px;\r\n    }\r\n\r\n    %igx-carousel-slide img {\r\n        width: inherit;\r\n        height: inherit;\r\n        transform: scale(1.01);\r\n    }\r\n}\r\n","////\r\n/// @group animations\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-center {\r\n    @include keyframes(scale-up-center) {\r\n        0% {\r\n            transform: scale(.5)\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1)\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-bl {\r\n    @include keyframes(scale-up-bl) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 0% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 0% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-ver-center {\r\n    @include keyframes(scale-up-ver-center) {\r\n        0% {\r\n            transform: scaleY(.4);\r\n        }\r\n\r\n        100% {\r\n            transform: scaleY(1);\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-top {\r\n    @include keyframes(scale-up-top) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 50% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 50% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-left {\r\n    @include keyframes(scale-up-left) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 0% 50%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 0% 50%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-ver-top {\r\n    @include keyframes(scale-up-ver-top) {\r\n        0% {\r\n            transform: scaleY(.4);\r\n            transform-origin: 100% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleY(1);\r\n            transform-origin: 100% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-tr {\r\n    @include keyframes(scale-up-tr) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 100% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 100% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-tl {\r\n    @include keyframes(scale-up-tl) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 0% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 0% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-ver-bottom {\r\n    @include keyframes(scale-up-ver-bottom) {\r\n        0% {\r\n            transform: scaleY(.4);\r\n            transform-origin: 0% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleY(1);\r\n            transform-origin: 0% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-right {\r\n    @include keyframes(scale-up-right) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 100% 50%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 100% 50%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-hor-center {\r\n    @include keyframes(scale-up-hor-center) {\r\n        0% {\r\n            transform: scaleX(.4);\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(1);\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-br {\r\n    @include keyframes(scale-up-br) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 100% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 100% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-hor-left {\r\n    @include keyframes(scale-up-hor-left) {\r\n        0% {\r\n            transform: scaleX(.4);\r\n            transform-origin: 0% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(1);\r\n            transform-origin: 0% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-bottom {\r\n    @include keyframes(scale-up-bottom) {\r\n        0% {\r\n            transform: scale(.5);\r\n            transform-origin: 50% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(1);\r\n            transform-origin: 50% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-up-hor-right {\r\n    @include keyframes(scale-up-hor-right) {\r\n        0% {\r\n            transform: scaleX(.4);\r\n            transform-origin: 100% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(1);\r\n            transform-origin: 100% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-center {\r\n    @include keyframes(scale-down-center) {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-bl {\r\n    @include keyframes(scale-down-bl) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 0% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 0% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-ver-center {\r\n    @include keyframes(scale-down-ver-center) {\r\n        0% {\r\n            transform: scaleY(1);\r\n        }\r\n\r\n        100% {\r\n            transform: scaleY(.3);\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-top {\r\n    @include keyframes(scale-down-top) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 50% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 50% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-left {\r\n    @include keyframes(scale-down-left) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 0% 50%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 0% 50%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-ver-top {\r\n    @include keyframes(scale-down-ver-top) {\r\n        0% {\r\n            transform: scaleY(1);\r\n            transform-origin: 100% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleY(.3);\r\n            transform-origin: 100% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-tr {\r\n    @include keyframes(scale-down-tr) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 100% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 100% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-tl {\r\n    @include keyframes(scale-down-tl) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 0% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 0% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-ver-top-bottom {\r\n    @include keyframes(scale-down-ver-to-bottom) {\r\n        0% {\r\n            transform: scaleY(1);\r\n            transform-origin: 0% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleY(.3);\r\n            transform-origin: 0% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-right {\r\n    @include keyframes(scale-down-right) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 100% 50%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 100% 50%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-hor-center {\r\n    @include keyframes(scale-down-hor-center) {\r\n        0% {\r\n            transform: scaleX(1);\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(.3);\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-br {\r\n    @include keyframes(scale-down-br) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 100% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 100% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-hor-left {\r\n    @include keyframes(scale-down-hor-left) {\r\n        0% {\r\n            transform: scaleX(1);\r\n            transform-origin: 0% 0%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(.3);\r\n            transform-origin: 0% 0%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-bottom {\r\n    @include keyframes(scale-down-bottom) {\r\n        0% {\r\n            transform: scale(1);\r\n            transform-origin: 50% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale(.5);\r\n            transform-origin: 50% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @requires {mixin} keyframes\r\n@mixin scale-down-hor-right {\r\n    @include keyframes(scale-down-hor-right) {\r\n        0% {\r\n            transform: scaleX(1);\r\n            transform-origin: 100% 100%;\r\n        }\r\n\r\n        100% {\r\n            transform: scaleX(.3);\r\n            transform-origin: 100% 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\r\n/// @param {number} $end-scale [1] - The scale to end the animation at.\r\n/// @requires {mixin} keyframes\r\n@mixin scale-in-out($start-scale: .5, $end-scale: 1) {\r\n    @include keyframes(scale-in-out) {\r\n        50% {\r\n            transform: scale($start-scale);\r\n            transform-origin: 50% 50%;\r\n        }\r\n\r\n        100% {\r\n            transform: scale($end-scale);\r\n            transform-origin: 50% 50%;\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Checkbox Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $label-color [null]- The text color used for the label text.\r\n/// @param {Color} $empty-color [null] - The unchecked border color.\r\n/// @param {Color} $fill-color [null] - The checked border and fill colors.\r\n/// @param {Color} $tick-color [null] - The checked mark color.\r\n/// @param {Color} $disabled-color [null] - The disabled border and fill colors.\r\n/// @param {Bool} $light [null] - Determines the default color scheme - light or not.\r\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be either 'dark' or 'light'.\r\n/// Set to light when the surrounding area is dark.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the checked fill color\r\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\r\n///   // Pass the theme to the igx-checkbox component mixin\r\n///   @include igx-checkbox($my-checkbox-theme);\r\n@function igx-checkbox-theme(\r\n    $palette: $default-palette,\r\n    $label-color: null,\r\n    $empty-color: null,\r\n    $fill-color: null,\r\n    $tick-color: null,\r\n    $disabled-color: null,\r\n    $variant: 'dark'\r\n) {\r\n    $name: 'igx-checkbox';\r\n\r\n    $dark-theme: (\r\n        name: $name,\r\n        label-color: igx-color($palette, grays, 900),\r\n        empty-color: igx-color($palette, 'grays', 600),\r\n        fill-color: igx-color($palette, 'secondary', 500),\r\n        tick-color: #fff,\r\n        disabled-color: igx-color($palette, grays, 400)\r\n    );\r\n\r\n    $light-theme: (\r\n        name: $name,\r\n        label-color: #fff,\r\n        empty-color: rgba(255, 255, 255, .7),\r\n        fill-color: igx-color($palette, 'secondary', 500),\r\n        tick-color: #000,\r\n        disabled-color: rgba(255, 255, 255, .3)\r\n    );\r\n\r\n    $default-theme: map-get((\r\n        dark: $dark-theme,\r\n        light: $light-theme\r\n    ), $variant);\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        label-color: $label-color,\r\n        empty-color: $empty-color,\r\n        fill-color: $fill-color,\r\n        tick-color: $tick-color,\r\n        disabled-color: $disabled-color,\r\n        variant: $variant\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires {mixin} hide-default\r\n/// @requires {mixin} igx-css-vars\r\n/// @requires {mixin} scale-in-out\r\n/// @requires {mixin} animation\r\n/// @requires {mixin} igx-ripple\r\n/// @requires igx-ripple-theme\r\n/// @requires rem\r\n/// @requires em\r\n/// @requires --var\r\n@mixin igx-checkbox($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    @include scale-in-out($start-scale: .9);\r\n\r\n    $label-font-size: em(16px);\r\n    $size: em(20px);\r\n    $border-width: 2px;\r\n    $label-margin: em(8px);\r\n    $radius: 2px;\r\n\r\n    $mark-stroke: 3;\r\n    $mark-length: 24;\r\n    $mark-x-factor: $mark-stroke / $mark-length;\r\n\r\n    $ripple-size: em(48px);\r\n    $ripple-radius: $ripple-size / 2;\r\n\r\n    $ripple-theme: igx-ripple-theme(\r\n        $color: --var($theme, 'fill-color')\r\n    );\r\n\r\n    @include scale-in-center();\r\n\r\n    %cbx-display {\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        font-size: rem(16px);\r\n    }\r\n\r\n    %cbx-display--disabled {\r\n        user-select: none;\r\n        pointer-events: none;\r\n        cursor: initial;\r\n    }\r\n\r\n    %cbx-input {\r\n        @include hide-default();\r\n    }\r\n\r\n    %cbx-composite {\r\n        position: relative;\r\n        display: inline-block;\r\n        cursor: pointer;\r\n        width: $size;\r\n        height: $size;\r\n        min-width: $size;\r\n        border-width: $border-width;\r\n        border-style: solid;\r\n        border-color: --var($theme, 'empty-color');\r\n        border-radius: $radius;\r\n        -webkit-tap-highlight-color: transparent;\r\n        transition: border-color .2s $ease-out-quad;\r\n\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            transition: background .2s $ease-out-quad;\r\n        }\r\n    }\r\n\r\n    %cbx-composite--x {\r\n        border-color: --var($theme, 'fill-color');\r\n\r\n        &::after {\r\n            background: --var($theme, 'fill-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite--disabled {\r\n        border-color: --var($theme, 'disabled-color');\r\n    }\r\n\r\n    %cbx-composite--x--disabled {\r\n        &::after {\r\n            background: --var($theme, 'disabled-color');\r\n        }\r\n    }\r\n\r\n    %cbx-composite-mark {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        stroke: --var($theme, 'tick-color');\r\n        stroke-linecap: square;\r\n        stroke-width: $mark-stroke;\r\n        stroke-dasharray: $mark-length;\r\n        stroke-dashoffset: $mark-length;\r\n        fill: none;\r\n        opacity: 0;\r\n        z-index: 1;\r\n        transition: opacity .1s $ease-out-quad;\r\n    }\r\n\r\n    %cbx-composite-mark--x {\r\n        stroke-dashoffset: 0;\r\n        opacity: 1;\r\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\r\n    }\r\n\r\n    %cbx-composite-mark--in {\r\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\r\n        opacity: 1;\r\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\r\n    }\r\n\r\n    %cbx-label {\r\n        display: inline-block;\r\n        color: --var($theme, 'label-color');\r\n        font-size: $label-font-size;\r\n        line-height: 1;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        word-wrap: break-all;\r\n\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %cbx-label-pos--after {\r\n        margin-left: $label-margin;\r\n\r\n        [dir='rtl'] & {\r\n            margin-left: initial;\r\n            margin-right: $label-margin;\r\n\r\n            &:empty {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cbx-label-pos--before {\r\n        margin-right: $label-margin;\r\n        order: -1;\r\n\r\n        [dir='rtl'] & {\r\n            margin-right: initial;\r\n            margin-left: $label-margin;\r\n\r\n            &:empty {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %cbx-label--disabled {\r\n        color: --var($theme, 'disabled-color');\r\n    }\r\n\r\n    %cbx-ripple {\r\n        @include igx-ripple($ripple-theme);\r\n        @include igx-css-vars($ripple-theme);\r\n        position: absolute;\r\n        top: calc(50% - #{$ripple-radius});\r\n        left: calc(50% - #{$ripple-radius});\r\n        width: $ripple-size;\r\n        height: $ripple-size;\r\n        border-radius: $ripple-radius;\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        filter: opacity(1);\r\n    }\r\n\r\n    %cbx-ripple--focused {\r\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\r\n        background-color: --var($theme, 'fill-color');\r\n        transition: background-color .2s $ease-out-quad;\r\n        opacity: .12;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Date Picker\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n///\r\n/// @requires extend\r\n@function igx-date-picker-theme($palette: $default-palette) {\r\n    $default-theme: (name: 'igx-date-picker');\r\n    @return extend($default-theme, ($palette: $palette));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n@mixin igx-date-picker($theme) {\r\n    %date-picker-display {\r\n        width: 340px;\r\n    }\r\n\r\n    %date-picker-display--vertical {\r\n        width: 540px;\r\n    }\r\n}\r\n\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Dialog Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The dialog background color.\r\n/// @param {Color} $title-color [null] - The dialog title text color.\r\n/// @param {Color} $message-color [null] - The dialog message text color.\r\n///\r\n/// @requires extend\r\n/// @requires text-contrast\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the background color\r\n///   $my-dialog-theme: igx-dialog-theme($background: black);\r\n///   // Pass the theme to the igx-dialog component mixin\r\n///   @include igx-dialog($my-dialog-theme);\r\n@function igx-dialog-theme(\r\n    $palette: $default-palette,\r\n    $background: null,\r\n    $title-color: null,\r\n    $message-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-dialog',\r\n        background: #fff,\r\n        title-color: igx-color($palette, grays, 800),\r\n        message-color: igx-color($palette, grays, 600)\r\n    );\r\n\r\n    @if not($title-color) and $background{\r\n        $title-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($message-color) and $background{\r\n        $message-color: rgba(text-contrast($background), .8);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        title-color: $title-color,\r\n        message-color: $message-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires $overlay-color\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-dialog($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $dialog-min-width: rem(280px);\r\n\r\n    $dialog-title-font-size: rem(20px);\r\n    $dialog-title-line-height: rem(16px);\r\n    $dialog-title-padding: rem(24px) rem(24px) rem(12px) rem(24px);\r\n    $dialog-title-font-weight: 600;\r\n\r\n    $dialog-message-font-size: rem(16px);\r\n    $dialog-message-line-height: rem(18px);\r\n\r\n    $dialog-message-padding: rem(12px) rem(24px);\r\n    $dialog-message-font-weight: 400;\r\n    $dialog-actions-padding: rem(8px);\r\n\r\n    %igx-dialog-display {\r\n        display: flex;\r\n        position: fixed;\r\n        align-items: center;\r\n        justify-content: center;\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        background: $overlay-color;\r\n        z-index: 99999;\r\n    }\r\n\r\n    %igx-dialog--hidden {\r\n        display: none;\r\n    }\r\n\r\n    %igx-dialog-window {\r\n        position: relative;\r\n        min-width: $dialog-min-width;\r\n        border-radius: 2px;\r\n        background: --var($theme, 'background');\r\n        box-shadow: igx-elevation($elevations, 24);\r\n        overflow: hidden;\r\n    }\r\n\r\n    %igx-dialog-title {\r\n        color: --var($theme, 'title-color');\r\n        font-size: $dialog-title-font-size;\r\n        line-height: $dialog-title-line-height;\r\n        padding: $dialog-title-padding;\r\n        font-weight: $dialog-title-font-weight;\r\n    }\r\n\r\n    %igx-dialog-content {\r\n        color: --var($theme, 'message-color');\r\n        max-width: 40ch;\r\n        font-size: $dialog-message-font-size;\r\n        line-height: $dialog-message-line-height;\r\n        padding: $dialog-message-padding;\r\n    }\r\n\r\n    %igx-dialog-actions {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        justify-content: flex-end;\r\n        padding: $dialog-actions-padding;\r\n\r\n        button ~ button {\r\n            margin-left: rem(8px);\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $header-background [null] - The table header background color.\r\n/// @param {Color} $header-text-color [null] - The table header text color.\r\n/// @param {Color} $content-background [null] - The table body background color.\r\n/// @param {Color} $content-text-color [null] - The table body text color.\r\n/// @param {Color} $row-selected-background [null] - The selected row background color.\r\n/// @param {Color} $row-selected-text-color [null] - The selected row text color.\r\n/// @param {Color} $row-hover-background [null] - The hover row background color.\r\n/// @param {Color} $row-border-color [null] - The row bottom border color.\r\n/// @param {Color} $pinned-border-width [null] - The border width of the pinned border.\r\n/// @param {Color} $pinned-border-style [null] - The CSS border style of the pinned border.\r\n/// @param {Color} $pinned-border-color [null] - The color of the pinned border.\r\n/// @param {Color} $cell-selected-background [null] - The selected cell background color.\r\n/// @param {Color} $cell-selected-text-color [null] - The selected cell text color.\r\n/// @param {Color} $resize-line-color [null] - The table header resize line color.\r\n///\r\n/// @requires igx-color\r\n/// @requires igx-contrast-color\r\n/// @requires text-contrast\r\n/// @requires hexrgba\r\n/// @requires extend\r\n@function igx-grid-theme(\r\n    $palette: $default-palette,\r\n\r\n    $header-background: null,\r\n    $header-text-color: null,\r\n\r\n    $content-background: null,\r\n    $content-text-color: null,\r\n\r\n    $row-selected-background: null,\r\n    $row-selected-text-color: null,\r\n    $row-hover-background: null,\r\n    $row-border-color: null,\r\n\r\n    $pinned-border-width: null,\r\n    $pinned-border-style: null,\r\n    $pinned-border-color: null,\r\n\r\n    $cell-selected-background: null,\r\n    $cell-selected-text-color: null,\r\n    $cell-editing-background: null,\r\n\r\n    $resize-line-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-grid',\r\n\r\n        header-background: hexrgba(igx-color($palette, 'grays', 100)),\r\n        header-text-color: igx-color($palette, 'grays', 600),\r\n\r\n        content-background: #fff,\r\n        content-text-color: igx-color($palette, 'grays', 800),\r\n\r\n        row-selected-background: hexrgba(igx-color($palette, 'grays', 800)),\r\n        row-selected-text-color: igx-contrast-color($palette, 'grays', 900),\r\n        row-hover-background: hexrgba(igx-color($palette, 'grays', 100)),\r\n        row-border-color: igx-color($palette, 'grays', 300),\r\n\r\n        pinned-border-width: 2px,\r\n        pinned-border-style: solid,\r\n        pinned-border-color: igx-color($palette, 'grays', 400),\r\n\r\n        cell-selected-background: igx-color($palette, 'primary'),\r\n        cell-selected-text-color: igx-contrast-color($palette, 'primary'),\r\n        cell-editing-background: #fff,\r\n\r\n        resize-line-color: igx-color($palette, 'secondary')\r\n    );\r\n\r\n    @if not($header-text-color) and $header-background {\r\n        $header-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($content-text-color) and $content-background {\r\n        $content-text-color: text-contrast($content-background);\r\n    }\r\n\r\n    @if not($cell-selected-text-color) and $cell-selected-background {\r\n        $cell-selected-text-color: text-contrast($cell-selected-background);\r\n    }\r\n\r\n    @if not($row-selected-text-color) and $row-selected-background {\r\n        $row-selected-text-color: text-contrast($row-selected-background);\r\n    }\r\n\r\n    @if not($row-hover-background) and $content-background {\r\n        $row-hover-background: rgba(text-contrast($content-background), .08)\r\n    }\r\n\r\n    @if not($row-border-color) and $content-background {\r\n        $row-border-color: rgba(text-contrast($content-background), .08)\r\n    }\r\n\r\n    @if not($pinned-border-color) and $content-background {\r\n        $pinned-border-color: rgba(text-contrast($content-background), .08)\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n\r\n        header-background: $header-background,\r\n        header-text-color: $header-text-color,\r\n\r\n        content-background: $content-background,\r\n        content-text-color: $content-text-color,\r\n\r\n        row-selected-background: $row-selected-background,\r\n        row-selected-text-color: $row-selected-text-color,\r\n        row-hover-background: $row-hover-background,\r\n        row-border-color: $row-border-color,\r\n\r\n        pinned-border-width: $pinned-border-width,\r\n        pinned-border-style: $pinned-border-style,\r\n        pinned-border-color: $pinned-border-color,\r\n\r\n        cell-selected-background: $cell-selected-background,\r\n        cell-editing-background: $cell-editing-background,\r\n        cell-selected-text-color: $cell-selected-text-color,\r\n\r\n        resize-line-color: $resize-line-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires {mixin} ellipsis\r\n/// @requires igx-color\r\n/// @requires igx-contrast-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-grid($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $palette: map-get($theme, 'palette');\r\n    // @debug $theme;\r\n\r\n    $grid-br: 2px;\r\n    $grid-shadow: igx-elevation($elevations, 2);\r\n\r\n    $grid-caption-fs: rem(20px);\r\n    $grid-caption-lh: rem(32px);\r\n    $grid-caption-padding: rem(16px) rem(24px);\r\n\r\n    $grid-head-fs: rem(12px);\r\n    $grid-head-fw: 600;\r\n\r\n    $grid-cell-padding: rem(16px) rem(24px);\r\n    $grid-cell-padding--e: 0 rem(24px);\r\n    $grid-cell-align-num: right;\r\n    $grid-cell-fs: rem(13px);\r\n    $grid-cell-lh: rem(16px);\r\n    $grid-cell-pinned-style: 1px solid;\r\n    $grid-cell-pinned-border-color: igx-color($palette, 'grays', 300);\r\n\r\n    $cell-pin: (\r\n        style: --var($theme, 'pinned-border-width') --var($theme, 'pinned-border-style'),\r\n        color: --var($theme, 'pinned-border-color')\r\n    );\r\n\r\n    %grid-display {\r\n        display: grid;\r\n        grid-template-rows: auto 1fr auto auto;\r\n        grid-template-columns: 1fr;\r\n        border-radius: $grid-br;\r\n        box-shadow: $grid-shadow;\r\n        outline-style: none;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %grid-caption {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: $grid-caption-fs;\r\n        line-height: $grid-caption-lh;\r\n        padding: $grid-caption-padding;\r\n    }\r\n\r\n    %grid-thead,\r\n    %grid-tfoot {\r\n        position: relative;\r\n        display: block;\r\n        background: --var($theme, 'header-background');\r\n        color: --var($theme, 'header-text-color');\r\n\r\n        %grid-row {\r\n            background: inherit;\r\n\r\n            &:hover {\r\n                background: inherit;\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid-thead {\r\n        grid-row: 2;\r\n        border-bottom: 1px dotted igx-color($palette, 'grays', 400);\r\n        z-index: 2;\r\n        height: fit-content;\r\n    }\r\n\r\n    %grid-tfoot {\r\n        grid-row: 4;\r\n        border-top: 1px dotted igx-color($palette, 'grays', 400);\r\n    }\r\n\r\n    %grid-display-container-thead {\r\n        width: 100%;\r\n        overflow: visible;\r\n    }\r\n\r\n    %grid-display-container-tr {\r\n        width: 100%;\r\n        overflow: visible;\r\n    }\r\n\r\n    %grid-tbody {\r\n        position: relative;\r\n        grid-row: 3;\r\n        background: --var($theme, 'content-background');\r\n        color: --var($theme, 'content-text-color');\r\n        overflow: hidden;\r\n        z-index: 1;\r\n    }\r\n\r\n    %grid-tbody-message {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        color: --var($theme, 'content-text-color');\r\n    }\r\n\r\n    %grid-scroll {\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        grid-row: 5;\r\n        width: 100%;\r\n        background: --var($theme, 'header-background');\r\n    }\r\n\r\n    %grid-scroll-start {\r\n        background: igx-color($palette, 'grays', 200);\r\n    }\r\n\r\n    %grid-scroll-main {\r\n        igx-display-container {\r\n            height: 0;\r\n        }\r\n    }\r\n\r\n    %grid-row {\r\n        display: flex;\r\n        background-color: --var($theme, 'content-background');\r\n        border-bottom: 1px solid --var($theme, 'row-border-color');\r\n        outline-style: none;\r\n\r\n        &:last-of-type {\r\n            border-bottom: 0;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: --var($theme, 'row-hover-background');\r\n        }\r\n    }\r\n\r\n    %grid-row--selected {\r\n        color: --var($theme, 'row-selected-text-color');\r\n        background-color: --var($theme, 'row-selected-background');\r\n\r\n        &:hover {\r\n            background-color: --var($theme, 'row-selected-background');\r\n        }\r\n    }\r\n\r\n    %grid-row--group {\r\n        position: relative;\r\n        background: --var($theme, 'header-background') !important;        \r\n    }\r\n\r\n    %grid__groupLabel {\r\n        display: inline-flex;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    %grid__groupCount {\r\n        display: inline-flex;\r\n        padding: 5px;\r\n    }\r\n\r\n    %grid__groupContent {\r\n        width: 100%;\r\n        border-bottom: 1px solid --var($theme, 'row-border-color');\r\n    }\r\n    \r\n    %grid__groupIndentation {\r\n        background: --var($theme, 'header-background');\r\n        z-index: 9999;\r\n    }\r\n\r\n    %grid-grouparea {\r\n        grid-row: 1;\r\n        border-bottom: 1px dotted igx-color($palette, 'grays', 400);\r\n        z-index: 2;\r\n        height: 60px;\r\n        background: --var($theme, 'header-background');\r\n    }\r\n\r\n    %grid__groupField {\r\n        color: #09f;\r\n        padding-right: 10px;\r\n    }\r\n\r\n    %grid__groupCount > div.igx-badge__circle {\r\n        background-color: igx-color($palette, 'grays', 200);\r\n        color: --var($theme, 'content-text-color');\r\n        font-size: $grid-head-fs;\r\n    }\r\n\r\n    %grid-cell-display {\r\n        flex: 1 1 0%;\r\n        outline-style: none;\r\n        padding: $grid-cell-padding;\r\n        font-size: $grid-cell-fs;\r\n        line-height: $grid-cell-lh;\r\n        color: inherit;\r\n        text-align: left;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    %grid-cell--fixed-width {\r\n        flex-grow: 0;\r\n    }\r\n\r\n    %grid-cell--selected {\r\n        color: --var($theme, 'cell-selected-text-color');\r\n        background-color: --var($theme, 'cell-selected-background') !important;\r\n        border-bottom: 0;\r\n    }\r\n\r\n    %grid-cell--editing {\r\n        padding: $grid-cell-padding--e;\r\n        background-color: --var($theme, 'cell-editing-background') !important;\r\n        border: 1px solid --var($theme, 'cell-selected-background');\r\n        box-shadow: igx-elevation($elevations, 2);\r\n    }\r\n\r\n    %grid-cell--pinned {\r\n        position: relative;\r\n        background-color: inherit;\r\n        z-index: 9999;\r\n    }\r\n\r\n    %grid-cell--pinned-last {\r\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color') !important;\r\n    }\r\n\r\n    %grid-cell-header {\r\n        display: flex;\r\n        position: relative;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        font-size: $grid-head-fs;\r\n        font-weight: $grid-head-fw;\r\n        overflow: visible;\r\n        min-width: 0;\r\n        border-right: 1px dotted igx-color($palette, 'grays', 400);\r\n\r\n        &:last-of-type {\r\n            border-right: transparent;\r\n        }\r\n    }\r\n\r\n    %grid-cell-header-title {\r\n        @include ellipsis();\r\n        user-select: none;\r\n        cursor: initial;\r\n        flex-grow: 1; /* hey IE, the text should take most of the space */\r\n    }\r\n\r\n    %grid-cell-header-icons {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n        user-select: none;\r\n        min-width: 39px; /* sort-icon width + filtering toggle icon width */\r\n        height: 24px;\r\n\r\n        &:empty {\r\n            min-width: 0;\r\n        }\r\n\r\n        .sort-icon {\r\n            width: rem(15px);\r\n            height: rem(15px);\r\n            min-width: rem(15px); /* yeah IE, it really needs to be 15px wide... */\r\n            font-size: rem(15px);\r\n        }\r\n    }\r\n\r\n    %grid-cell-number {\r\n        text-align: $grid-cell-align-num;\r\n\r\n        %grid-cell-header-icons {\r\n            justify-content: flex-start;\r\n            order: -1;\r\n\r\n            .sort-icon {\r\n                order: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    %grid__cbx-selection {\r\n        padding: 0 rem(24px);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        z-index: 1;\r\n        position: relative;\r\n        background: inherit;\r\n    }\r\n\r\n    %grid__resize-handle {\r\n        position: absolute;\r\n        width: 4px;\r\n        top: 0;\r\n        right: -2px;\r\n        height: 100%;\r\n        z-index: 2;\r\n    }\r\n\r\n    %grid__resize-line {\r\n        position: absolute;\r\n        cursor: col-resize;\r\n        width: 4px;\r\n        background-color: --var($theme, 'resize-line-color');\r\n        z-index: 2;\r\n\r\n        &::before,\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            height: 100%;\r\n            width: 96px;\r\n        }\r\n\r\n        &::before {\r\n            right: 100%;\r\n        }\r\n\r\n        &::after {\r\n            left: 100%;\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Grid Filtering Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $toggle-icon-color [null] - The idle toggle icon color.\r\n/// @param {Color} $toggle-icon-hover-color [null] - The hover toggle icon color.\r\n/// @param {Color} $toggle-icon-active-color [null] - The active toggle icon color.\r\n/// @param {Color} $toggle-icon-filtered-color [null] - The filtered toggle icon color.\r\n/// @param {Color} $toggle-background [null] - The idle toggle background color.\r\n/// @param {Color} $toggle-hover-background [null] - The hover toggle background color.\r\n/// @param {Color} $toggle-active-background [null] - The active toggle background color.\r\n/// @param {Color} $toggle-filtered-background [null] - The filtered toggle background color.\r\n/// @param {Color} $menu-background [null] - The idle menu background color.\r\n/// @param {Color} $menu-text-color [null] - The idle menu text color.\r\n/// @param {Color} $menu-button-text-color [null] - The menu button text color.\r\n/// @param {Color} $menu-button-disabled-text-color [null] - The menu disabled button text color.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires igx-contrast-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Change the menu background color\r\n///   $my-filtering-theme: igx-grid-filtering-theme(\r\n///     $menu-background: black,\r\n///     $menu-text-color: white\r\n///   );\r\n///   // Pass the theme to the igx-grid-filtering component mixin\r\n///   @include igx-grid-filtering($my-filtering-theme);\r\n@function igx-grid-filtering-theme(\r\n    $palette: $default-palette,\r\n\r\n    $toggle-icon-color: null,\r\n    $toggle-icon-hover-color: null,\r\n    $toggle-icon-active-color: null,\r\n    $toggle-icon-filtered-color: null,\r\n    $toggle-background: null,\r\n    $toggle-hover-background: null,\r\n    $toggle-active-background: null,\r\n    $toggle-filtered-background: null,\r\n\r\n    $menu-background: null,\r\n    $menu-text-color: null,\r\n    $menu-button-text-color: null,\r\n    $menu-button-disabled-text-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-grid-filtering',\r\n        toggle-icon-color: inherit,\r\n        toggle-icon-hover-color: #fff,\r\n        toggle-icon-active-color: igx-contrast-color($palette, 'secondary'),\r\n        toggle-icon-filtered-color: igx-color($palette, 'secondary'),\r\n        toggle-hover-background: igx-color($palette, 'grays', 300),\r\n        toggle-active-background: igx-color($palette, 'secondary'),\r\n        toggle-filtered-background: transparent,\r\n        menu-background: #fff,\r\n        menu-text-color: igx-color($palette, 'grays', 900),\r\n        menu-button-text-color: igx-color($palette, 'secondary')\r\n    );\r\n\r\n    @if not($menu-text-color) and $menu-background {\r\n        $menu-text-color: text-contrast($menu-background);\r\n    }\r\n\r\n    @if not($menu-button-text-color) and $menu-background {\r\n        $menu-button-text-color: rgba(text-contrast($menu-background), .24);\r\n    }\r\n\r\n    @if not($menu-button-disabled-text-color) and $menu-background {\r\n        $menu-button-disabled-text-color: rgba(text-contrast($menu-background), .3)\r\n    }\r\n\r\n    @if not($toggle-icon-active-color) and $toggle-active-background {\r\n        $toggle-icon-active-color: text-contrast($toggle-active-background)\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n\r\n        toggle-icon-color: $toggle-icon-color,\r\n        toggle-icon-hover-color: $toggle-icon-hover-color,\r\n        toggle-icon-active-color: $toggle-icon-active-color,\r\n        toggle-icon-filtered-color: $toggle-icon-filtered-color,\r\n        toggle-background: $toggle-background,\r\n        toggle-hover-background: $toggle-hover-background,\r\n        toggle-active-background: $toggle-active-background,\r\n        toggle-filtered-background: $toggle-filtered-background,\r\n\r\n        menu-background: $menu-background,\r\n        menu-text-color: $menu-text-color,\r\n        menu-button-text-color: $menu-button-text-color,\r\n        menu-button-disabled-text-color: $menu-button-disabled-text-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-button-theme\r\n/// @requires {mixin} igx-button\r\n/// @requires igx-color\r\n/// @requires igx-contrast-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-grid-filtering($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $palette: map-get($theme, 'palette');\r\n\r\n    $grid-filtering-options-padding: rem(8px, 16px);\r\n    $grid-head-icon-size: rem(15px);\r\n    $grid-head-icon-lh: rem(15px);\r\n    $grid-head-icon-padding: rem(4.5px);\r\n\r\n    $filtering-menu-min-width: 240px;\r\n    $filtering-menu-shadow: igx-elevation($elevations, 8);\r\n    $filtering-menu-radius: 4px;\r\n    $filtering-menu-distance-to-toggle: 24px;\r\n\r\n    %igx-filtering-display {\r\n        position: static;\r\n    }\r\n\r\n    %igx-filtering-icon {\r\n        cursor: pointer;\r\n        color: --var($theme, 'toggle-icon-color');\r\n\r\n        igx-icon {\r\n            font-size: $grid-head-icon-size !important;\r\n            line-height: $grid-head-icon-lh;\r\n            padding: $grid-head-icon-padding;\r\n            font-weight: 400;\r\n        }\r\n    }\r\n\r\n    %igx-filtering-icon--active {\r\n        color: --var($theme, 'toggle-icon-active-color');\r\n    }\r\n\r\n    %igx-filtering-icon--filtered {\r\n        color: --var($theme, 'toggle-icon-filtered-color');\r\n    }\r\n\r\n    %igx-filtering-toggle {\r\n        @extend %igx-filtering-icon;\r\n\r\n        user-select: none;\r\n        background: --var($theme, 'toggle-background');\r\n        border-radius: 50%;\r\n    }\r\n\r\n    %igx-filtering-toggle--hover {\r\n        background: --var($theme, 'toggle-hover-background');\r\n    }\r\n\r\n    %igx-filtering-toggle--active {\r\n        @extend %igx-filtering-icon;\r\n        @extend %igx-filtering-icon--active;\r\n\r\n        background: --var($theme, 'toggle-active-background');\r\n    }\r\n\r\n    %igx-filtering-toggle--filtered {\r\n        @extend %igx-filtering-icon;\r\n        @extend %igx-filtering-icon--filtered;\r\n\r\n        background: --var($theme, 'toggle-filtered-background');\r\n    }\r\n\r\n    %igx-filtering-menu {\r\n        display: block;\r\n        position: absolute;\r\n        font-size: initial;\r\n        font-weight: initial;\r\n\r\n        min-width: $filtering-menu-min-width;\r\n        user-select: none;\r\n        background: --var($theme, 'menu-background');\r\n        color: --var($theme, 'menu-text-color');\r\n        margin-top: $filtering-menu-distance-to-toggle;\r\n\r\n        box-shadow: $filtering-menu-shadow;\r\n        border: 1px solid --var($theme, 'menu-background');\r\n        border-radius: $filtering-menu-radius;\r\n        padding: $grid-filtering-options-padding;\r\n        z-index: 10;\r\n\r\n        @include igx-button(igx-button-theme(\r\n            $flat-text-color: --var($theme, 'menu-button-text-color'),\r\n            $disabled-color: --var($theme, 'menu-button-disabled-text-color'),\r\n            $disabled-background: transparent\r\n        ));\r\n\r\n        // TODO: remove after SELECT theme is created\r\n        select {\r\n            width: 100%;\r\n            color: igx-color($palette, 'grays', 900);\r\n            outline-style: none;\r\n            border-radius: 4px;\r\n        }\r\n    }\r\n\r\n    %igx-filtering-menu--to-left {\r\n        right: 16px;\r\n    }\r\n\r\n    %igx-filtering-menu--to-right {\r\n        right: initial;\r\n    }\r\n\r\n    %igx-filtering-menu-buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n\r\n        [igxbutton] + [igxbutton] {\r\n            margin-left: 8px;\r\n        }\r\n\r\n        &[dir='rtl'] {\r\n            [igxbutton] + [igxbutton] {\r\n                margin-right: 8px;\r\n            }\r\n        }\r\n    }\r\n\r\n    %igx-filtering-op {\r\n        margin: 24px 0 12px;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Grid Summary Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background-color [null] - The summaries background color.\r\n/// @param {Color} $label-color [null] - The summaries label color.\r\n/// @param {Color} $result-color [null] - The summaries value/result color.\r\n/// @param {Color} $border-color [null] - The summaries border color.\r\n/// @param {Color} $pinned-border-width - The border width of the summary panel.\r\n/// @param {Color} $pinned-border-style - The border style of the summary panel.\r\n/// @param {Color} $pinned-border-color - The border color of the summary panel.\r\n/// @param {Color} $inactive-color [null] - The summaries inactive label color.\r\n/// @param {Color} $label-hover-color [null] - The summaries hover label color.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the summaries background nad labels color\r\n///   $my-summary-theme: igx-grid-summary-theme(\r\n///     $background-color: black,\r\n///     $label-color: white\r\n///   );\r\n///   // Pass the theme to the igx-grid-filtering component mixin\r\n///   @include igx-grid-summary($my-summary-theme);\r\n@function igx-grid-summary-theme(\r\n    $palette: $default-palette,\r\n    $background-color: null,\r\n    $label-color: null,\r\n    $result-color: null,\r\n    $border-color: null,\r\n    $pinned-border-width: null,\r\n    $pinned-border-style: null,\r\n    $pinned-border-color: null,\r\n    $inactive-color: null,\r\n    $label-hover-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-grid-summary',\r\n        background-color: rgba(0, 0, 0, .02),\r\n        label-color: igx-color($palette, 'primary', 500),\r\n        label-hover-color: igx-color($palette, 'primary', 700),\r\n        result-color: igx-color($palette, 'grays', 800),\r\n        border-color: igx-color($palette, 'grays', 400),\r\n        pinned-border-width: 2px,\r\n        pinned-border-style: solid,\r\n        pinned-border-color: igx-color($palette, 'grays', 400),\r\n        inactive-color: igx-color($palette, 'grays', 400)\r\n    );\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background-color: $background-color,\r\n        label-color: $label-color,\r\n        result-color: $result-color,\r\n        border-color: $border-color,\r\n        pinned-border-width: $pinned-border-width,\r\n        pinned-border-style: $pinned-border-style,\r\n        pinned-border-color: $pinned-border-color,\r\n        inactive-color: $inactive-color,\r\n        label-hover-color: $label-hover-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-color\r\n/// @requires {mixin} ellipsis\r\n/// @requires --var\r\n/// @requires rem\r\n@mixin igx-grid-summary($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $cell-pin: (\r\n        style: --var($theme, 'pinned-border-width') --var($theme, 'pinned-border-style'),\r\n        color: --var($theme, 'pinned-border-color')\r\n    );\r\n\r\n    %igx-grid-summary {\r\n        display: flex;\r\n        flex-direction: column;\r\n        border-left: 1px dotted --var($theme, 'border-color');\r\n        flex: 1 1 0%;\r\n        padding: 0 rem(24px);\r\n        overflow: hidden;\r\n\r\n        &:first-of-type {\r\n            border-left: 0;\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary--pinned {\r\n        position: relative;\r\n        background-color: inherit;\r\n        z-index: 1;\r\n    }\r\n\r\n    %grid-summary--fixed-width {\r\n        flex-grow: 0;\r\n    }\r\n\r\n    %igx-grid-summary--pinned-last {\r\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color');\r\n    }\r\n\r\n    %igx-grid-summary--empty {\r\n        border-left: 1px dotted --var($theme, 'border-color');\r\n    }\r\n\r\n    %igx-grid-summary__item {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: rem(5px) 0;\r\n        font-size: rem(12px);\r\n        position: relative;\r\n    }\r\n\r\n    %igx-grid-summary__label {\r\n        color: --var($theme, 'label-color');\r\n        min-width: rem(30px);\r\n        margin-right: rem(3px);\r\n\r\n        &:hover {\r\n            color: --var($theme, 'label-hover-color');\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary__result {\r\n        color: --var($theme, 'result-color');\r\n        font-weight: 800;\r\n        flex: 1 1 auto;\r\n        text-align: right;\r\n    }\r\n\r\n    %igx-grid-summary__item--inactive {\r\n        %igx-grid-summary__label {\r\n            color: --var($theme, 'inactive-color');\r\n        }\r\n\r\n        %igx-grid-summary__result {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    %igx-grid-summary__label,\r\n    %igx-grid-summary__result {\r\n        @include ellipsis();\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $color [null] - The icon color.\r\n/// @param {String} $size [null] - The icon size.\r\n/// @param {Color} $disabled-color [null] - The disabled icon color.\r\n///\r\n/// @requires igx-color\r\n/// @requires extend\r\n/// @requires rem\r\n///\r\n/// @example scss Change the icon color\r\n///   $my-icon-theme: igx-icon-theme($color: orange);\r\n///   // Pass the theme to the igx-icon component mixin\r\n///   @include igx-icon($my-icon-theme);\r\n@function igx-icon-theme(\r\n    $palette: $default-palette,\r\n    $color: null,\r\n    $size: null,\r\n    $disabled-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-icon',\r\n        color: currentColor,\r\n        size: rem(24px),\r\n        disabled-color: igx-color($palette, 'grays', 500)\r\n    );\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        color: $color,\r\n        size: $size,\r\n        disabled-color: $disabled-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-icon($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    $igx-icon-font-size: --var($theme, 'size');\r\n\r\n    %igx-icon-display {\r\n        width: $igx-icon-font-size;\r\n        height: $igx-icon-font-size;\r\n        font-size: $igx-icon-font-size;\r\n        color: --var($theme, 'color');\r\n    }\r\n\r\n    %igx-icon--inactive {\r\n        color: --var($theme, 'disabled-color') !important;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $idle-text-color [null] - The input text color in the idle state.\r\n/// @param {Color} $filled-text-color [null] - The input text color in the filled state.\r\n/// @param {Color} $focused-text-color [null] - The input text color in the focused state.\r\n/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.\r\n///\r\n/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.\r\n/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.\r\n/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.\r\n///\r\n/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.\r\n/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.\r\n/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.\r\n/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.\r\n/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.\r\n/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border.\r\n///\r\n/// @param {Color} $box-background [null] - The background color of an input group of type box.\r\n/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.\r\n///\r\n/// @param {Color} $border-background [null] - The background color of an input group of type border.\r\n/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.\r\n///\r\n/// @param {Color} $search-background [null] - The background color of an input group of type search.\r\n/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.\r\n/// @param {Color} $search-shadow-color [null] - The shadow color of an input group of type search.\r\n/// @param {Color} $search-disabled-shadow-color [null] - The shadow color of an input group of type search in the disabled state.\r\n///\r\n/// @param {Color} $success-secondary-color [igx-color($palette, 'success')] - The success color used in the valid state.\r\n/// @param {Color} $warning-secondary-color [igx-color($palette, 'warn')] - The warning color used in the warning state.\r\n/// @param {Color} $error-secondary-color [igx-color($palette, 'error)] - The error color used in the error state.\r\n///\r\n/// @param {String} $variant ['dark'] - Can be either 'dark' or 'light'. Use 'light' when the input is used on dark backgrounds.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the focused border and label colors\r\n///   $my-input-group-theme: igx-input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\r\n///   // Pass the theme to the igx-input-group component mixin\r\n///   @include igx-input-group($my-input-group-theme);\r\n@function igx-input-group-theme(\r\n    $palette: $default-palette,\r\n\r\n    $idle-text-color: null,\r\n    $filled-text-color: null,\r\n    $focused-text-color: null,\r\n    $disabled-text-color: null,\r\n\r\n    $idle-secondary-color: null,\r\n    $filled-secondary-color: null,\r\n    $focused-secondary-color: null,\r\n\r\n    $idle-bottom-line-color: null,\r\n    $hover-bottom-line-color: null,\r\n    $filled-bottom-line-color: null,\r\n    $focused-bottom-line-color: null,\r\n    $interim-bottom-line-color: null,\r\n    $disabled-bottom-line-color: null,\r\n    $disabled-border-color: null,\r\n\r\n    $box-background: null,\r\n    $box-disabled-background: null,\r\n    $border-background: null,\r\n    $border-disabled-background: null,\r\n\r\n    $search-background: null,\r\n    $search-disabled-background: null,\r\n    $search-shadow-color: null,\r\n    $search-disabled-shadow-color: null,\r\n\r\n    $success-secondary-color: null,\r\n    $warning-secondary-color: null,\r\n    $error-secondary-color: null,\r\n\r\n    $variant: 'dark'\r\n) {\r\n    $name: 'igx-input-group';\r\n\r\n    $dark-theme: (\r\n        name: $name,\r\n\r\n        idle-text-color: igx-color($palette, 'grays', 600),\r\n        filled-text-color: igx-color($palette, 'grays', 900),\r\n        focused-text-color: igx-color($palette, 'grays', 900),\r\n        disabled-text-color: igx-color($palette, 'grays', 500),\r\n\r\n        idle-secondary-color: igx-color($palette, 'grays', 600),\r\n        filled-secondary-color: igx-color($palette, 'grays', 600),\r\n        focused-secondary-color: igx-color($palette, 'primary'),\r\n\r\n        idle-bottom-line-color: igx-color($palette, 'grays', 600),\r\n        hover-bottom-line-color: igx-color($palette, 'grays', 900),\r\n        filled-bottom-line-color: igx-color($palette, 'grays', 600),\r\n        focused-bottom-line-color: igx-color($palette, 'primary'),\r\n        interim-bottom-line-color: rgba(igx-color($palette, 'primary'), .12),\r\n        disabled-bottom-line-color: rgba(0, 0, 0, .42),\r\n        disabled-border-color: rgba(igx-color($palette, 'grays', 500), .06),\r\n\r\n        box-background: rgba(0, 0, 0, .06),\r\n        box-disabled-background: rgba(0, 0, 0, .03),\r\n\r\n        border-background: transparent,\r\n        border-disabled-background: rgba(0, 0, 0, .03),\r\n\r\n        search-background: white,\r\n        search-disabled-background: white,\r\n        search-shadow-color: igx-color($palette, 'grays', 600),\r\n        search-disabled-shadow-color: igx-color($palette, 'grays', 300),\r\n\r\n        success-secondary-color: igx-color($palette, 'success'),\r\n        warning-secondary-color: igx-color($palette, 'warn'),\r\n        error-secondary-color: igx-color($palette, 'error')\r\n    );\r\n\r\n    $light-theme: (\r\n        name: $name,\r\n\r\n        idle-text-color: white,\r\n        filled-text-color: white,\r\n        focused-text-color: white,\r\n        disabled-text-color: rgba(255, 255, 255, .5),\r\n\r\n        idle-secondary-color: rgba(255, 255, 255, .7),\r\n        filled-secondary-color: rgba(255, 255, 255, .7),\r\n        focused-secondary-color: igx-color($palette, 'primary'),\r\n\r\n        idle-bottom-line-color: rgba(255, 255, 255, .7),\r\n        hover-bottom-line-color: white,\r\n        filled-bottom-line-color: rgba(255, 255, 255, .7),\r\n        focused-bottom-line-color: igx-color($palette, 'primary'),\r\n        interim-bottom-line-color: rgba(igx-color($palette, 'primary'), .12),\r\n        disabled-bottom-line-color: rgba(255, 255, 255, .7),\r\n        disabled-border-color: rgba(rgba(255, 255, 255, .5), .06),\r\n\r\n        box-background: rgba(255, 255, 255, .1),\r\n        box-disabled-background: rgba(255, 255, 255, .06),\r\n\r\n        border-background: transparent,\r\n        border-disabled-background: rgba(255, 255, 255, .06),\r\n\r\n        search-background: rgba(255, 255, 255, .1),\r\n        search-disabled-background: rgba(255, 255, 255, .06),\r\n        search-shadow-color: igx-color($palette, 'grays', 600),\r\n        search-disabled-shadow-color: igx-color($palette, 'grays', 300),\r\n\r\n        success-secondary-color: igx-color($palette, 'success'),\r\n        warning-secondary-color: igx-color($palette, 'warn'),\r\n        error-secondary-color: igx-color($palette, 'error')\r\n    );\r\n\r\n    $default-theme: map-get((\r\n        dark: $dark-theme,\r\n        light: $light-theme\r\n    ), $variant);\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n\r\n        idle-text-color: $idle-text-color,\r\n        filled-text-color: $filled-text-color,\r\n        focused-text-color: $focused-text-color,\r\n        disabled-text-color: $disabled-text-color,\r\n\r\n        idle-secondary-color: $idle-secondary-color,\r\n        filled-secondary-color: $filled-secondary-color,\r\n        focused-secondary-color: $focused-secondary-color,\r\n\r\n        idle-bottom-line-color: $idle-bottom-line-color,\r\n        hover-bottom-line-color: $hover-bottom-line-color,\r\n        filled-bottom-line-color: $filled-bottom-line-color,\r\n        focused-bottom-line-color: $focused-bottom-line-color,\r\n        interim-bottom-line-color: $interim-bottom-line-color,\r\n        disabled-bottom-line-color: $disabled-bottom-line-color,\r\n        disabled-border-color: $disabled-border-color,\r\n\r\n        box-background: $box-background,\r\n        box-disabled-background: $box-disabled-background,\r\n\r\n        border-background: $border-background,\r\n        border-disabled-background: $border-disabled-background,\r\n\r\n        search-background: $search-background,\r\n        search-disabled-background: $search-disabled-background,\r\n        search-shadow-color: $search-shadow-color,\r\n        search-disabled-shadow-color: $search-disabled-shadow-color,\r\n\r\n        success-secondary-color: $success-secondary-color,\r\n        warning-secondary-color: $warning-secondary-color,\r\n        error-secondary-color: $error-secondary-color,\r\n\r\n        variant: $variant\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires em\r\n/// @requires {mixin} ellipsis\r\n@mixin igx-input-group($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $palette: map-get($theme, 'palette');\r\n\r\n    $transition-timing: .25s $ease-out-cubic;\r\n    $search-shadow: igx-elevation($elevations, 1);\r\n    $search-shadow-hover: igx-elevation($elevations, 2);\r\n    $search-shadow-disabled: igx-elevation($elevations, 1);\r\n\r\n    $group-font-size: em(16px);\r\n    $group-top-margin: em(12px);\r\n    $group-bundle-border-radius: 4px;\r\n    $group-bundle--box-padding: 0 em(16px);\r\n    $group-bundle-main--box-padding: em(18px);\r\n\r\n    $label-font-size: em(16px);\r\n    $label-height: em(18px);\r\n    $required-symbol: '*';\r\n    $required-symbol-margin: 2px;\r\n\r\n    $input-font-size: em(16px);\r\n    $input-line-height: em(16px);\r\n    $input-height: em(32px);\r\n    $input-padding: 0 0 em(8px);\r\n    $input-border-top: em(8px) solid rgba(0, 0, 0, 0);\r\n\r\n    $textarea-min-height: em(82px);\r\n    $textarea-line-height: em(22px);\r\n    $textarea-padding: em(16px);\r\n\r\n    $prefix-height: em(32px);\r\n\r\n    $_hint-base-font-size: 12px;\r\n    $hint-font-size: em($_hint-base-font-size);\r\n    $hint-line-height: em(14px, $_hint-base-font-size);\r\n    $hint-padding-top: em(8px, $_hint-base-font-size);\r\n    $hint--box-margin: em(16px, $_hint-base-font-size);\r\n\r\n    %form-group-display {\r\n        position: relative;\r\n        display: block;\r\n        font-size: $group-font-size; /* 16px, when base is 16px(html) */\r\n        margin-top: $group-top-margin; /* 12px when base is 16px (self) */\r\n        color: --var($theme, 'idle-text-color');\r\n    }\r\n\r\n    %form-group-display--no-margin {\r\n        margin-top: 0;\r\n    }\r\n\r\n    %form-group-box-wrapper {\r\n        border-radius: $group-bundle-border-radius;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %form-group-display--hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    %form-group-display--disabled {\r\n        pointer-events: none;\r\n        user-select: none;\r\n        color: --var($theme, 'disabled-text-color');\r\n    }\r\n\r\n    %form-group-bundle {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-flow: row nowrap;\r\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'idle-bottom-line-color');\r\n        transition: box-shadow $transition-timing, color $transition-timing;\r\n    }\r\n\r\n    %form-group-bundle--box {\r\n        padding: $group-bundle--box-padding;\r\n        background: --var($theme, 'box-background');\r\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'idle-bottom-line-color');\r\n\r\n        %form-group-label--box + %form-group-input--box {\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n\r\n    %form-group-bundle--hover {\r\n        cursor: pointer;\r\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'hover-bottom-line-color');\r\n    }\r\n\r\n    %form-group-bundle--focus {\r\n        caret-color: --var($theme, 'focused-secondary-color');\r\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'interim-bottom-line-color');\r\n    }\r\n\r\n    %form-group-bundle--success {\r\n        caret-color: --var($theme, 'success-secondary-color');\r\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle--error {\r\n        caret-color: --var($theme, 'error-secondary-color');\r\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle--disabled {\r\n        box-shadow: none;\r\n        background-image: linear-gradient(to right, --var($theme, 'disabled-bottom-line-color') 40%, transparent 10%);\r\n        background-position: bottom;\r\n        background-size: 4px 1px;\r\n        background-repeat: repeat-x;\r\n    }\r\n\r\n    %form-group-bundle--box-disabled {\r\n        background: --var($theme, 'box-disabled-background');\r\n    }\r\n\r\n    %form-group-bundle--border {\r\n        padding: $group-bundle--box-padding;\r\n        box-shadow: inset 0 0 0 1px --var($theme, 'idle-bottom-line-color');\r\n        border-radius: $group-bundle-border-radius;\r\n        background: --var($theme, 'border-background');\r\n\r\n        %form-group-label--box + %form-group-input--box {\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-border--hover {\r\n        box-shadow: inset 0 0 0 2px --var($theme, 'idle-text-color');\r\n    }\r\n\r\n    %form-group-bundle-border--focus {\r\n        box-shadow: inset 0 0 0 2px --var($theme, 'focused-bottom-line-color');\r\n    }\r\n\r\n    %form-group-bundle-border--error {\r\n        box-shadow: inset 0 0 0 2px --var($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle-border--success {\r\n        box-shadow: inset 0 0 0 2px --var($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-bundle-border--disabled {\r\n        background: --var($theme, 'border-disabled-background');\r\n        box-shadow: inset 0 0 0 1px --var($theme, 'disabled-border-color');\r\n    }\r\n\r\n    %form-group-bundle--search {\r\n        padding: $group-bundle--box-padding;\r\n        border-radius: $group-bundle-border-radius;\r\n        border-bottom: none;\r\n        background: --var($theme, 'search-background');\r\n        box-shadow: $search-shadow;\r\n\r\n        %form-group-label--box + %form-group-input--box {\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n\r\n    %form-group-bundle-search--hover {\r\n        box-shadow: $search-shadow-hover;\r\n    }\r\n\r\n    %form-group-bundle-search--focus {\r\n        box-shadow: $search-shadow-hover;\r\n    }\r\n\r\n    %form-group-bundle-search--error {\r\n        box-shadow: $search-shadow-hover;\r\n    }\r\n\r\n    %form-group-bundle-search--success {\r\n        box-shadow: $search-shadow-hover;\r\n    }\r\n\r\n    %form-group-bundle-search--disabled {\r\n        background: --var($theme, 'search-disabled-background');\r\n        box-shadow: $search-shadow-disabled;\r\n    }\r\n\r\n    %form-group-bundle-main {\r\n        position: relative;\r\n        flex-grow: 1;\r\n    }\r\n\r\n    %form-group-bundle-main--box {\r\n        padding-top: $group-bundle-main--box-padding;\r\n    }\r\n\r\n    %form-group-label {\r\n        @include ellipsis();\r\n        position: absolute;\r\n        width: 100%;\r\n        transform: translateY(50%); /* 8px, base is 16px */\r\n        font-size: $label-font-size; /* 16px, base is 16px */\r\n        line-height: 1;\r\n        height: $label-height; /* 18px, base is 16px(self) */\r\n        backface-visibility: hidden;\r\n        will-change: transform;\r\n        transform-origin: top left;\r\n        transition: transform $transition-timing, color $transition-timing;\r\n\r\n        [dir='rtl'] & {\r\n            transform-origin: top right;\r\n        }\r\n    }\r\n\r\n    %form-group-label--box {\r\n        transform: translateY(0);\r\n    }\r\n\r\n    %form-group-label--float {\r\n        transform: translateY(-50%) scale(.75);\r\n    }\r\n\r\n    %form-group-label--fixed {\r\n        transition: color $transition-timing;\r\n    }\r\n\r\n    %form-group-label--focus {\r\n        color: --var($theme, 'focused-secondary-color');\r\n    }\r\n\r\n    %form-group-label--success {\r\n        color: --var($theme, 'focused-secondary-color');\r\n    }\r\n\r\n    %form-group-label--error {\r\n        color: --var($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-label--required {\r\n        &::after {\r\n            content: '#{$required-symbol}';\r\n            font-size: inherit;\r\n            vertical-align: top;\r\n            margin-left: $required-symbol-margin; /* 2px base is 16px */\r\n            line-height: 1;\r\n        }\r\n    }\r\n\r\n    %form-group-input {\r\n        position: relative;\r\n        display: block;\r\n        border: none;\r\n        font-size: $input-font-size;\r\n        line-height: $input-line-height;\r\n        height: $input-height; /* 32px, base is 16px */\r\n        padding: $input-padding; /* 8px, base is 16px */\r\n        border-top: $input-border-top;\r\n        width: 100%;\r\n        min-width: 0;\r\n        overflow: visible;\r\n        font-family: inherit;\r\n        background: transparent;\r\n        color: --var($theme, 'filled-text-color');\r\n        outline-style: none;\r\n        box-shadow: none;\r\n\r\n        &::-webkit-input-placeholder {\r\n            padding: 4px 0;\r\n        }\r\n\r\n        &::placeholder {\r\n            color: igx-color($palette, 'grays', 500);\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    %chrome-autofill-fix {\r\n        &:-webkit-autofill,\r\n        &:-webkit-autofill:hover,\r\n        &:-webkit-autofill:focus,\r\n        &:-webkit-autofill:active { -webkit-transition-delay: 99999s; }\r\n    }\r\n\r\n    %form-group-input--box {\r\n        transform: translateY(-25%);\r\n    }\r\n\r\n    %form-group-input--hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    %form-group-input--focus {\r\n        cursor: text;\r\n        color: --var($theme, 'focused-text-color');\r\n    }\r\n\r\n    %form-group-input--disabled {\r\n        color: --var($theme, 'disabled-text-color');\r\n\r\n        &::placeholder {\r\n            color: igx-color($palette, 'grays', 400);\r\n        }\r\n    }\r\n\r\n    %form-group-textarea {\r\n        min-height: $textarea-min-height; /* 3 lines * 22px + 8px bottom padding + 8px top padding */\r\n        margin-right: -#{$textarea-padding}; /* this fixes resizing in chrome !?!? */\r\n        height: auto;\r\n        line-height: $textarea-line-height; /* 22px, base is 16px */\r\n        resize: vertical;\r\n        overflow: hidden;\r\n\r\n        [dir='rtl'] & {\r\n            margin-right: initial;\r\n            margin-left: -#{$textarea-padding};\r\n        }\r\n    }\r\n\r\n    %form-group-textarea--box {\r\n        width: calc(100% + #{$textarea-padding * 2}); /* add the padding to the width */\r\n        margin: 0 -#{$textarea-padding};\r\n        padding-left: $textarea-padding;\r\n        padding-right: $textarea-padding;\r\n    }\r\n\r\n    %form-group-prefix,\r\n    %form-group-suffix {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        line-height: 1;\r\n        height: $prefix-height; /* 32px, base is 16px */\r\n        transition: all $transition-timing;\r\n    }\r\n\r\n    %form-group-prefix {\r\n        padding: .5em .5em .5em 0; /* 8px, base is 16px */\r\n\r\n        [dir='rtl'] & {\r\n            padding: .5em 0 .5em .5em; /* 8px, base is 16px */\r\n        }\r\n    }\r\n\r\n    %form-group-suffix {\r\n        padding: .5em 0; /* 8px, base is 16px */\r\n    }\r\n\r\n    %form-group-prefix--box,\r\n    %form-group-suffix--box {\r\n        height: 100%;\r\n    }\r\n\r\n    %form-group-prefix--box {\r\n        padding: 0 .5em 0 0; /* 8px, base is 16px */\r\n\r\n        [dir='rtl'] & {\r\n            padding: 0 0 0 .5em; /* 8px, base is 16px */\r\n        }\r\n    }\r\n\r\n    %form-group-suffix--box {\r\n        padding: 0;\r\n    }\r\n\r\n    %form-group-prefix--error,\r\n    %form-group-suffix--error {\r\n        color: --var($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-border {\r\n        height: 2px; /* 2px, when base is 16px */\r\n        margin-top: -2px; /* 2px, when base is 16px */\r\n        transform: scaleX(0);\r\n        transform-origin: center;\r\n        background: --var($theme, 'focused-secondary-color');\r\n    }\r\n\r\n    %form-group-border--focus {\r\n        transform: scaleX(1);\r\n        transition: transform $transition-timing;\r\n    }\r\n\r\n    %form-group-border--success {\r\n        background: --var($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-border--warning {\r\n        background: --var($theme, 'warning-secondary-color');\r\n    }\r\n\r\n    %form-group-border--error {\r\n        background: --var($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-border--hidden {\r\n        display: none;\r\n    }\r\n\r\n    %form-group-helper {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: $hint-font-size; /* 12px */\r\n        line-height: $hint-line-height; /* 13.5px, base is 12px */\r\n        padding-top: $hint-padding-top; /* 8px, base is 12px */\r\n    }\r\n\r\n    %form-group-helper--box {\r\n        margin-left: $hint--box-margin; /* 16px, base is 12px */\r\n        margin-right: $hint--box-margin; /* 16px, base is 12px */\r\n    }\r\n\r\n    %form-group-helper--success {\r\n        color: --var($theme, 'success-secondary-color');\r\n    }\r\n\r\n    %form-group-helper--error {\r\n        color: --var($theme, 'error-secondary-color');\r\n    }\r\n\r\n    %form-group-helper-item {\r\n        @include ellipsis();\r\n        position: relative;\r\n        min-width: 0;\r\n        max-width: 100%;\r\n    }\r\n\r\n    %form-group-helper-item--start {\r\n        order: 0;\r\n    }\r\n\r\n    %form-group-helper-item--end {\r\n        order: 1;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The list background color.\r\n/// @param {Color} $header-background [null] - The list header background color.\r\n/// @param {Color} $header-text-color [null] - The list header text color.\r\n/// @param {Color} $item-background [null] - The list item background color.\r\n/// @param {Color} $item-text-color [null] - The list item text color.\r\n/// @param {Color} $item-background-active [null] - The active list item background color.\r\n/// @param {Color} $item-text-color-active [null] - The active list item text color.\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Change the list background color\r\n///   $my-list-theme: igx-list-theme($background: black);\r\n///   // Pass the theme to the igx-list component mixin\r\n///   @include igx-avatar($my-list-theme);\r\n@function igx-list-theme(\r\n    $palette: $default-palette,\r\n    $background: null,\r\n    $header-background: null,\r\n    $header-text-color: null,\r\n    $item-background: null,\r\n    $item-text-color: null,\r\n    $item-background-active: null,\r\n    $item-text-color-active: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-list',\r\n        background: #fff,\r\n        header-text-color: igx-color($palette, 'secondary'),\r\n        item-text-color: igx-color($palette, 'grays', 800),\r\n        item-background-active: igx-color($palette, 'grays', 100),\r\n        item-text-color-active: igx-color($palette, 'grays', 800)\r\n    );\r\n\r\n    @if not($header-background) and $background {\r\n        $header-background: $background;\r\n    }\r\n\r\n    @if not($item-background) and $background {\r\n        $item-background: $background;\r\n    }\r\n\r\n    @if not($item-background-active) and $background {\r\n        @if lightness($background) > 50 {\r\n            $item-background-active: rgba(text-contrast($background), .04);\r\n        } @else {\r\n            $item-background-active: rgba(text-contrast($background), .12);\r\n        }\r\n    }\r\n\r\n    @if not($header-text-color) and $header-background {\r\n        $header-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($item-text-color) and $item-background {\r\n        $item-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-text-color-active) and $item-text-color {\r\n        $item-text-color-active: $item-text-color;\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        header-background: $header-background,\r\n        header-text-color: $header-text-color,\r\n        item-background: $item-background,\r\n        item-text-color: $item-text-color,\r\n        item-background-active: $item-background-active,\r\n        item-text-color-active: $item-text-color-active\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires igx-color\r\n/// @requires em\r\n@mixin igx-list($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    $list-header-font-size: em(13px);\r\n    $list-header-font-weight: normal;\r\n    $list-header-height: em(48px);\r\n    $list-header-line-height: em(48px);\r\n    $list-item-height: em(48px);\r\n    $list-item-font-size: em(16px);\r\n    $list-item-padding: em(8px) em(16px);\r\n    $list-empty-padding: em(16px, 16px);\r\n\r\n    %igx-list {\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        background-color: --var($theme, 'background');\r\n        height: 100%;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %igx-list-empty {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-list-empty-image {\r\n        width: auto;\r\n        max-height: 120px;\r\n    }\r\n\r\n    %igx-list-empty-message {\r\n        text-align: center;\r\n        color: --var($theme, 'item-text-color');\r\n        padding: $list-empty-padding;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-list-header {\r\n        display: flex;\r\n        align-items: center;\r\n        color: --var($theme, 'header-text-color');\r\n        background-color: --var($theme, 'header-background');\r\n        font-size: $list-header-font-size;\r\n        font-weight: $list-header-font-weight;\r\n        height: $list-header-height;\r\n        line-height: $list-header-line-height;\r\n        padding: $list-item-padding;\r\n        user-select: none;\r\n    }\r\n\r\n    %igx-list-item {\r\n        display: flex;\r\n        position: relative;\r\n        flex-flow: column wrap;\r\n        justify-content: center;\r\n        padding: $list-item-padding;\r\n        min-height: $list-item-height;\r\n        font-size: $list-item-font-size;\r\n        color: --var($theme, 'item-text-color');\r\n        background-color: --var($theme, 'item-background');\r\n        z-index: 2;\r\n    }\r\n\r\n    %igx-list-item--active {\r\n        color: --var($theme, 'item-text-color-active');\r\n        background-color: --var($theme, 'item-background-active');\r\n        z-index: 3;\r\n    }\r\n\r\n    %igx-list-item--inactive {\r\n        transition: left .3s $ease-out-quad;\r\n    }\r\n}\r\n\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Navbar Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The navbar background color.\r\n/// @param {Color} $text-color [null] - The navbar text color.\r\n/// @param {Color} $idle-icon-color [null] - The navbar idle icon color.\r\n/// @param {Color} $hover-icon-color [null] - The navbar hover icon color.\r\n/// @param {Bool} $disable-shadow [true] - Sets the navbar shadow visibility.\r\n///\r\n/// @requires extend\r\n/// @requires text-contrast\r\n/// @requires igx-elevations\r\n/// @requires $elevations\r\n///\r\n/// @example scss Change the background color\r\n///   $my-navbar-theme: igx-navbar-theme($background: green);\r\n///   // Pass the theme to the igx-navbar component mixin\r\n///   @include igx-navbar($my-navbar-theme);\r\n@function igx-navbar-theme(\r\n    $palette: $default-palette,\r\n    $background: null,\r\n    $text-color: null,\r\n    $idle-icon-color: null,\r\n    $hover-icon-color: null,\r\n    $disable-shadow: false\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-navbar',\r\n        background: igx-color($palette, 'primary'),\r\n        text-color: #fff,\r\n        idle-icon-color: #fff,\r\n        hover-icon-color: #fff,\r\n        nav-shadow: if($disable-shadow == false, igx-elevation($elevations, 4), none)\r\n    );\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($idle-icon-color) and $background {\r\n        $idle-icon-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($hover-icon-color) and $background {\r\n        $hover-icon-color: text-contrast($background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        text-color: $text-color,\r\n        idle-icon-color: $idle-icon-color,\r\n        hover-icon-color: $hover-icon-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires em\r\n/// @requires --var\r\n@mixin igx-navbar($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $navbar-padding: 0 em(16px);\r\n    $navbar-title-fz: em(18px, 16px);\r\n    $navbar-title-lh: em(18px, 16px);\r\n    $navbar-title-margin: 0;\r\n\r\n    %igx-navbar-display {\r\n        display: flex;\r\n        position: relative;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        height: 56px;\r\n        padding: $navbar-padding;\r\n        background: --var($theme, 'background');\r\n        color: --var($theme, 'text-color');\r\n        box-shadow: --var($theme, 'nav-shadow');\r\n        z-index: 4;\r\n    }\r\n\r\n    %igx-navbar-title {\r\n        margin: $navbar-title-margin;\r\n        font-size: $navbar-title-fz;\r\n        line-height: $navbar-title-lh;\r\n    }\r\n\r\n    %igx-navbar-bundle {\r\n        display: flex;\r\n        align-items: center;\r\n        user-select: none;\r\n\r\n        * + * {\r\n            margin-left: 16px;\r\n        }\r\n    }\r\n\r\n    %igx-navbar-icon-display {\r\n        igx-icon {\r\n            cursor: pointer;\r\n            color: --var($theme, 'idle-icon-color');\r\n            transition: color .15s $ease-out-quad;\r\n\r\n            &:hover {\r\n                color: --var($theme, 'hover-icon-color');\r\n            }\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The navigation drawer background color.\r\n/// @param {Color} $border-color [null] - The navigation drawer right border color.\r\n/// @param {Color} $item-header-text-color [null] - The header's idle text color.\r\n/// @param {Color} $item-text-color [null] - The item's idle text color.\r\n/// @param {Color} $item-icon-color [null] - The item's icon color.\r\n/// @param {Color} $item-active-text-color [null] - The item's active text color.\r\n/// @param {Color} $item-active-background [null] - The item's active background color.\r\n/// @param {Color} $item-active-icon-color [null] - The item's icon active color.\r\n/// @param {Color} $item-hover-background [null] - The item's hover background color.\r\n/// @param {Color} $item-hover-text-color [null] - The item's hover text color.\r\n/// @param {Color} $item-hover-icon-color [null] - The item's hover icon color.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Change the background and item colors\r\n///   $navdrawer-theme: igx-navdrawer-theme(\r\n///     $background: #2d313a,\r\n///     $item-active-background: #ecc256,\r\n///     $item-icon-color: #ecc256\r\n///   );\r\n///   // Pass the theme to the igx-navdrawer component mixin\r\n///   @include igx-navdrawer($navdrawer-theme);\r\n@function igx-navdrawer-theme(\r\n    $palette: $default-palette,\r\n\r\n    $background: null,\r\n    $border-color: null,\r\n\r\n    $item-header-text-color: null,\r\n    $item-text-color: null,\r\n    $item-icon-color: null,\r\n\r\n    $item-active-text-color: null,\r\n    $item-active-background: null,\r\n    $item-active-icon-color:null,\r\n\r\n    $item-hover-background: null,\r\n    $item-hover-text-color: null,\r\n    $item-hover-icon-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-navdrawer',\r\n        background: #fff,\r\n        border-color: rgba(0, 0, 0, .14),\r\n        item-text-color: igx-color($palette, grays, 800),\r\n        item-active-text-color: igx-color($palette, primary, 500),\r\n        item-active-background: igx-color($palette, grays, 100),\r\n        item-hover-background: igx-color($palette, grays, 200),\r\n        item-hover-text-color: igx-color($palette, grays, 800),\r\n        item-header-text-color: igx-color($palette, grays, 600),\r\n        item-icon-color: igx-color($palette, grays, 600),\r\n        item-active-icon-color: igx-color($palette, primary, 500),\r\n        item-hover-icon-color: igx-color($palette, grays, 800)\r\n    );\r\n\r\n    @if not($item-header-text-color) and $background {\r\n        $item-header-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($item-text-color) and $background {\r\n        $item-text-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($item-icon-color) and $background {\r\n        $item-icon-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($item-active-background) and $background {\r\n        $item-active-background: rgba(text-contrast($background), .24);\r\n    }\r\n\r\n    @if not($item-active-text-color) and $item-active-background {\r\n        $item-active-text-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($item-active-icon-color) and $item-active-background {\r\n        $item-active-icon-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($item-hover-background) and $background {\r\n        $item-hover-background: rgba(text-contrast($background), .08);\r\n    }\r\n\r\n    @if not($item-hover-text-color) and $background {\r\n        $item-hover-text-color: text-contrast($background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        border-color: $border-color,\r\n        item-text-color:$item-text-color,\r\n        item-active-text-color: $item-active-text-color,\r\n        item-active-background: $item-active-background,\r\n        item-hover-background: $item-hover-background,\r\n        item-hover-text-color:$item-hover-text-color,\r\n        item-header-text-color:$item-header-text-color,\r\n        item-icon-color:$item-icon-color,\r\n        item-active-icon-color:$item-active-icon-color,\r\n        item-hover-icon-color: $item-hover-icon-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires $overlay-color\r\n/// @requires rem\r\n@mixin igx-navdrawer($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    %animation {\r\n        transition: flex-basis;\r\n        transition-duration: .3s;\r\n        transition-timing-function: $ease-out-quad;\r\n    }\r\n\r\n    %aside {\r\n        position: fixed;\r\n        width: rem(242px);\r\n        height: 100%;\r\n        max-width: 90%;\r\n        min-height: 100%;\r\n        overflow-x: hidden;\r\n        background-color: --var($theme, 'background');\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 999;\r\n        transition: width, transform;\r\n        transition-duration: .3s, .3s;\r\n        transition-timing-function: $ease-out-quad, $ease-out-quad;\r\n        box-shadow: igx-elevation($elevations, 5);\r\n        border-right: 1px solid --var($theme, 'border-color');\r\n    }\r\n\r\n    %aside-panning {\r\n        overflow-x: hidden;\r\n        transition: none;\r\n    }\r\n\r\n    %aside--pinned {\r\n        position: relative;\r\n        max-width: 100%;\r\n        box-shadow: none;\r\n        z-index: 0;\r\n    }\r\n\r\n    %igx-nav-drawer__aside--collapsed {\r\n        transform: none;\r\n        width: 0;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %aside--collapsed {\r\n        transform: translate3d(-300px, 0, 0);\r\n        box-shadow: none;\r\n    }\r\n\r\n    %aside--right {\r\n        left: auto;\r\n        right: 0;\r\n        border-right: none;\r\n        border-left: 1px solid --var($theme, 'border-color');\r\n    }\r\n\r\n    %aside--collapsed--right {\r\n        transform: translate3d(300px, 0, 0);\r\n        box-shadow: none;\r\n    }\r\n\r\n    %aside--mini {\r\n        width: rem(60px);\r\n        transition-duration: .2s, .2s;\r\n    }\r\n\r\n    %overlay {\r\n        opacity: 1;\r\n        background-color: $overlay-color;\r\n        transition: opacity, visibility;\r\n        transition-duration: .25s, .25s;\r\n        transition-timing-function: ease-in, step-start;\r\n        transition-delay: 0s, 0s;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        visibility: visible;\r\n        z-index: 999;\r\n    }\r\n\r\n    %overlay-panning {\r\n        transform: translate3d(0, 0, 0);\r\n        transition: none;\r\n    }\r\n\r\n    %overlay--hidden {\r\n        transition-timing-function: ease-in-out, step-end;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n    }\r\n\r\n    %overlay-panning--hidden {\r\n        /* must be visible during pan.. */\r\n        visibility: visible;\r\n    }\r\n\r\n    %item {\r\n        position: relative;\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        color: --var($theme, 'item-text-color');\r\n        max-height: 48px;\r\n        padding: 12px 16px;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n        align-items: center;\r\n        font-weight: 600;\r\n        user-select: none;\r\n        outline: transparent;\r\n        white-space: nowrap;\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background-color: --var($theme, 'item-hover-background');\r\n            color: --var($theme, 'item-hover-text-color');\r\n        }\r\n\r\n        > igx-icon + span {\r\n            margin-left: 32px;\r\n        }\r\n\r\n        &[dir='rtl'] {\r\n            > igx-icon + span {\r\n                margin-right: 32px;\r\n            }\r\n        }\r\n\r\n        .igx-icon {\r\n            color: --var($theme, 'item-icon-color');\r\n        }\r\n    }\r\n\r\n    %item--active {\r\n        // should be app primary color\r\n        color: --var($theme, 'item-active-text-color');\r\n        background-color: --var($theme, 'item-active-background');\r\n\r\n        &:focus,\r\n        &:hover {\r\n            color: --var($theme, 'item-active-text-color');\r\n            background-color: --var($theme, 'item-active-background');\r\n        }\r\n\r\n        .igx-icon {\r\n            color: --var($theme, 'item-active-icon-color');\r\n        }\r\n    }\r\n\r\n    %item--header {\r\n        display: block;\r\n        padding: 12px 16px;\r\n        white-space: nowrap;\r\n        color: --var($theme, 'item-header-text-color');\r\n    }\r\n\r\n    %style-dummy {\r\n        height: 0;\r\n        background: none;\r\n        box-shadow: none;\r\n        transition: none;\r\n        visibility: hidden;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// Grid Paging Theme\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $text-color [null] - The text color.\r\n/// @param {Color} $background-color [null] - The background color of the paging panel.\r\n/// @param {Color} $border-color [null] - The border color of the paging panel.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the stripes color\r\n///   $my-grid-paginator-theme: igx-grid-paginator-theme(\r\n///     $stripes-color: orange\r\n///   );\r\n///   // Pass the theme to the igx-grid-paginator component mixin\r\n///   @include igx-grid-paginator($my-grid-paginator-theme);\r\n@function igx-grid-paginator-theme(\r\n    $palette: $default-palette,\r\n    $text-color: null,\r\n    $background-color: null,\r\n    $border-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-grid-paginator',\r\n        text-color: currentColor,\r\n        background-color: rgb(245, 245, 245),\r\n        border-color: igx-color($palette, 'grays', 400)\r\n    );\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        text-color: $text-color,\r\n        background-color: $background-color,\r\n        border-color: $border-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-grid-paginator($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    %igx-grid-paginator {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: --var($theme, 'text-color');\r\n        background: --var($theme, 'background-color');\r\n        grid-row: 6;\r\n        padding: rem(5px) 0;\r\n        font-size: 12px;\r\n        border-top: 1px dotted --var($theme, 'border-color');\r\n\r\n        &:empty {\r\n            padding: 0;\r\n        }\r\n\r\n        > * {\r\n            margin: 0 rem(5px);\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $track-color [null] - The main track color.\r\n/// @param {Color} $fill-color-default [null] - The track default fill color.\r\n/// @param {Color} $fill-color-danger [null] - The track danger fill color.\r\n/// @param {Color} $fill-color-warning [null] - The track warning fill color.\r\n/// @param {Color} $fill-color-info [null] - The track info fill color.\r\n/// @param {Color} $fill-color-success [null] - The track success fill color.\r\n/// @param {Color} $stripes-color [null] - The track stripes color.\r\n/// @param {Color} $text-color [null] - The track value text color.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the stripes color\r\n///   $my-progress-linear-theme: igx-progress-linear-theme(\r\n///     $stripes-color: orange\r\n///   );\r\n///   // Pass the theme to the igx-progress-linear component mixin\r\n///   @include igx-progress-linear($my-progress-linear-theme);\r\n@function igx-progress-linear-theme(\r\n    $palette: $default-palette,\r\n    $track-color: null,\r\n    $fill-color-default: null,\r\n    $fill-color-danger: null,\r\n    $fill-color-warning: null,\r\n    $fill-color-info: null,\r\n    $fill-color-success: null,\r\n    $stripes-color: null,\r\n    $text-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-progress-linear',\r\n        track-color: igx-color($palette, 'grays', 300),\r\n        fill-color-default: igx-color($palette, 'primary'),\r\n        fill-color-danger: igx-color($palette, 'error'),\r\n        fill-color-warning: igx-color($palette, 'warn'),\r\n        fill-color-info: igx-color($palette, 'info'),\r\n        fill-color-success: igx-color($palette, 'success'),\r\n        stripes-color: rgba(#fff, .7),\r\n        text-color: igx-color($palette, 'grays', 700)\r\n    );\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        track-color: $track-color,\r\n        fill-color-default: $fill-color-default,\r\n        fill-color-danger: $fill-color-danger,\r\n        fill-color-warning: $fill-color-warning,\r\n        fill-color-info: $fill-color-info,\r\n        fill-color-success: $fill-color-success,\r\n        stripes-color: $stripes-color,\r\n        text-color: $text-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires em\r\n/// @requires --var\r\n@mixin igx-progress-linear($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    $bar-height: 4px;\r\n    $stripe-color: --var($theme, 'stripes-color');\r\n    $value-fs: em(14px, 16px);\r\n    $value-fw: 600;\r\n    $value-margin: 0;\r\n\r\n    %linear-display {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-flow: column nowrap;\r\n        width: 100%;\r\n    }\r\n\r\n    %linear-bar {\r\n        width: inherit;\r\n        height: $bar-height;\r\n        overflow: hidden;\r\n    }\r\n\r\n    %linear-bar-base {\r\n        position: absolute;\r\n        width: inherit;\r\n        height: inherit;\r\n        background: --var($theme, 'track-color');\r\n        z-index: 0;\r\n    }\r\n\r\n    %linear-bar-progress {\r\n        width: 100%;\r\n        position: relative;\r\n        height: inherit;\r\n        backface-visibility: hidden;\r\n    }\r\n\r\n    %linear-bar-progress--striped {\r\n        background-image: linear-gradient(\r\n            -45deg,\r\n            $stripe-color 25%,\r\n            transparent 25%,\r\n            transparent 50%,\r\n            $stripe-color 50%,\r\n            $stripe-color 75%,\r\n            transparent 75%,\r\n            transparent\r\n        );\r\n        background-size: 40px 40px;\r\n    }\r\n\r\n    %linear-bar-progress--default {\r\n        background: --var($theme, 'fill-color-default')\r\n    }\r\n\r\n    %linear-bar-progress--danger {\r\n        background-color: --var($theme, 'fill-color-danger');\r\n    }\r\n\r\n    %linear-bar-progress--warning {\r\n        background-color: --var($theme, 'fill-color-warning');\r\n    }\r\n\r\n    %linear-bar-progress--info {\r\n        background-color: --var($theme, 'fill-color-info');\r\n    }\r\n\r\n    %linear-bar-progress--success {\r\n        background-color: --var($theme, 'fill-color-success');\r\n    }\r\n\r\n\r\n    %linear-value {\r\n        margin: $value-margin;\r\n        color: --var($theme, 'text-color');\r\n        font-size: $value-fs;\r\n        font-weight: $value-fw;\r\n    }\r\n\r\n    %linear-value--start {\r\n        align-self: flex-start;\r\n    }\r\n\r\n    %linear-value--center {\r\n        align-self: center;\r\n    }\r\n\r\n    %linear-value--end {\r\n        align-self: flex-end;\r\n    }\r\n\r\n    %linear-value--top {\r\n        order: -1;\r\n    }\r\n\r\n    %linear-value--hidden {\r\n        display: none;\r\n    }\r\n}\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $base-circle-color [null] - The base circle fill color.\r\n/// @param {Color} $progress-circle-color [null] - The progress circle fill color.\r\n/// @param {Color} $text-color [null] - The value text color.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the circle progress color\r\n///   $my-progress-circular-theme: igx-progress-circular-theme(\r\n///     $progress-circle-color: purple\r\n///   );\r\n///   // Pass the theme to the igx-progress-circular component mixin\r\n///   @include igx-progress-circular($my-progress-circle-theme);\r\n@function igx-progress-circular-theme(\r\n    $palette: $default-palette,\r\n\r\n    $base-circle-color: null,\r\n    $progress-circle-color: null,\r\n    $text-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-progress-circular',\r\n        base-circle-color: igx-color($palette, 'grays', 300),\r\n        progress-circle-color: igx-color($palette, 'primary'),\r\n        text-color: igx-color($palette, 'grays', 700)\r\n    );\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        base-circle-color: $base-circle-color,\r\n        progress-circle-color: $progress-circle-color,\r\n        text-color: $text-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-progress-circular($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    $circular-value-fs: rem(32px, 16px);\r\n    $circular-value-fw: 600;\r\n\r\n    %circular-display {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    %circular-innercircle {\r\n        stroke-width: 4;\r\n        fill: transparent;\r\n        stroke: --var($theme, 'base-circle-color');\r\n    }\r\n\r\n    %circular-circle {\r\n        fill: transparent;\r\n        stroke: --var($theme, 'progress-circle-color');\r\n        stroke-width: 6;\r\n        stroke-linecap: round;\r\n        stroke-dashoffset: 289;\r\n        stroke-dasharray: 289;\r\n        transform-origin: 50% 50%;\r\n        transform: rotate(-90deg);\r\n    }\r\n\r\n    %circular-text {\r\n        font-size: $circular-value-fs;\r\n        font-weight: $circular-value-fw;\r\n        fill: --var($theme, 'text-color');\r\n    }\r\n\r\n    %circular-text--hidden {\r\n        visibility: hidden;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $label-color [null]- The text color used for the label text.\r\n/// @param {Color} $empty-color [null] - The unchecked border color.\r\n/// @param {Color} $fill-color [null] - The checked border and dot colors.\r\n/// @param {Color} $disabled-color [null] - The disabled border and dot colors.\r\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be 'light' or 'dark'.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n///\r\n/// Set light to true when the surrounding area is dark.\r\n/// @example scss Change the checked dot and border colors\r\n///   $my-radio-theme: igx-radio-theme($fill-color: magenta);\r\n///   // Pass the theme to the igx-radio component mixin\r\n///   @include igx-radio($my-radio-theme);\r\n@function igx-radio-theme(\r\n    $palette: $default-palette,\r\n    $label-color: null,\r\n    $empty-color: null,\r\n    $fill-color: null,\r\n    $disabled-color: null,\r\n\r\n    $variant: 'dark'\r\n) {\r\n    $name: 'igx-radio';\r\n\r\n    $dark-theme: (\r\n        name: $name,\r\n        label-color: igx-color($palette, 'grays', 900),\r\n        empty-color: igx-color($palette, 'grays', 600),\r\n        fill-color: igx-color($palette, 'secondary', 500),\r\n        disabled-color: igx-color($palette, 'grays', 400)\r\n    );\r\n\r\n    $light-theme: (\r\n        name: $name,\r\n        label-color: #fff,\r\n        empty-color: rgba(255, 255, 255, .7),\r\n        fill-color: igx-color($palette, 'secondary', 500),\r\n        disabled-color: rgba(255, 255, 255, .3)\r\n    );\r\n\r\n    $default-theme: map-get((\r\n        dark: $dark-theme,\r\n        light: $light-theme\r\n    ), $variant);\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        label-color: $label-color,\r\n        empty-color: $empty-color,\r\n        fill-color: $fill-color,\r\n        disabled-color: $disabled-color,\r\n        variant: $variant\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires {mixin} igx-css-vars\r\n/// @requires {mixin} scale-in-out\r\n/// @requires {mixin} animation\r\n/// @requires {mixin} igx-ripple\r\n/// @requires {mixin} hide-default\r\n/// @requires igx-ripple-theme\r\n/// @requires em\r\n/// @requires --var\r\n@mixin igx-radio($theme) {\r\n    @include igx-root-css-vars($theme);\r\n    @include scale-in-out($start-scale: .9);\r\n\r\n    $font-size: 16px;\r\n    $label-margin: em(8px);\r\n\r\n    $size: em(20px);\r\n\r\n    $border-style: 2px solid;\r\n    $border-radius: 50% 50%;\r\n\r\n    $transition: all .2s ease-in;\r\n\r\n    $ripple-size: em(48px);\r\n    $ripple-radius: $ripple-size / 2;\r\n\r\n    $ripple-theme: igx-ripple-theme(\r\n        $color: --var($theme, 'fill-color')\r\n    );\r\n\r\n    %radio-display {\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        font-size: $font-size;\r\n        color: --var($theme, 'label-color');\r\n    }\r\n\r\n    %radio-input {\r\n        @include hide-default();\r\n    }\r\n\r\n    %radio-display--disabled {\r\n        pointer-events: none;\r\n        color: --var($theme, 'disabled-color');\r\n        user-select: none;\r\n    }\r\n\r\n    %radio-composite {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: $size;\r\n        height: $size;\r\n        min-width: $size;\r\n        line-height: $size;\r\n        cursor: pointer;\r\n        color: --var($theme, 'label-color');\r\n        user-select: none;\r\n\r\n        &::before,\r\n        &::after {\r\n            position: absolute;\r\n            content: '';\r\n            width: $size;\r\n            height: $size;\r\n            left: 0;\r\n            top: 0;\r\n            border-radius: $border-radius;\r\n        }\r\n\r\n        &::before {\r\n            backface-visibility: hidden;\r\n            transform: scale3d(0, 0, 0);\r\n            transition: $transition;\r\n        }\r\n\r\n        &::after {\r\n            border: $border-style --var($theme, 'empty-color');\r\n        }\r\n    }\r\n\r\n    %radio-composite--x {\r\n        &::before {\r\n            border: $border-style --var($theme, 'fill-color');\r\n            background-color: --var($theme, 'fill-color');\r\n            transform: scale3d(.5, .5, .5);\r\n        }\r\n\r\n        &::after {\r\n            border: $border-style --var($theme, 'fill-color');\r\n        }\r\n    }\r\n\r\n    %radio-composite--disabled {\r\n        &::after {\r\n            border: $border-style --var($theme, 'disabled-color');\r\n        }\r\n    }\r\n\r\n    %radio-composite--x--disabled {\r\n        &::after {\r\n            border: $border-style --var($theme, 'disabled-color');\r\n        }\r\n\r\n        &::before {\r\n            background-color: --var($theme, 'disabled-color');\r\n            border: $border-style transparent;\r\n        }\r\n    }\r\n\r\n    %radio-label {\r\n        color: currentColor;\r\n        font-size: $font-size;\r\n        line-height: 1;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        word-wrap: break-all;\r\n    }\r\n\r\n    %radio-label--after {\r\n        margin-left: $label-margin;\r\n\r\n        [dir='rtl'] & {\r\n            margin-left: initial;\r\n            margin-right: $label-margin;\r\n\r\n            &:empty {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-label--before {\r\n        order: -1;\r\n        margin-right: $label-margin;\r\n\r\n        [dir='rtl'] & {\r\n            margin-right: initial;\r\n            margin-left: $label-margin;\r\n\r\n            &:empty {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %radio-ripple {\r\n        @include igx-ripple($ripple-theme);\r\n        @include igx-css-vars($ripple-theme);\r\n        position: absolute;\r\n        top: calc(50% - #{$ripple-radius});\r\n        left: calc(50% - #{$ripple-radius});\r\n        width: $ripple-size;\r\n        height: $ripple-size;\r\n        border-radius: $ripple-radius;\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        filter: opacity(1);\r\n    }\r\n\r\n    %radio-ripple--focused {\r\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\r\n        background-color: --var($theme, 'fill-color');\r\n        transition: background-color .2s $ease-out-quad;\r\n        opacity: .12;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $track-color [null] - The color of the track.\r\n/// @param {Color} $thumb-color [null] - The color of the thumb.\r\n/// @param {Color} $label-background-color [null] - The background color of the bubble label.\r\n/// @param {Color} $label-text-color [null] - The text color of the bubble label.\r\n/// @param {Bool} $variant ['dark'] - Determines the default color scheme - can be 'light' or 'dark'.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n/// @requires hexrgba\r\n///\r\n/// Set light to true when the surrounding area is dark.\r\n/// @example scss Set custom track and thumb on colors\r\n///   $my-switch-theme: igx-toast-theme($thumb-on-color: black, $track-on-color: yellow);\r\n///   // Pass the theme to the igx-bottom-nav component mixin\r\n///   @include igx-switch($my-switch-theme);\r\n@function igx-slider-theme(\r\n    $palette: $default-palette,\r\n\r\n    $track-color: null,\r\n    $thumb-color: null,\r\n\r\n    $label-background-color: null,\r\n    $label-text-color: null,\r\n\r\n    $variant: 'dark'\r\n) {\r\n    $name: 'igx-slider';\r\n\r\n    $dark-theme: (\r\n        name: $name,\r\n        track-color: igx-color($palette, 'secondary'),\r\n\r\n        thumb-color: igx-color($palette, 'secondary'),\r\n        disabled-thumb-color: hexrgba(igx-color($palette, 'grays', 400)),\r\n\r\n        label-background-color: igx-color($palette, 'secondary'),\r\n\r\n        base-track-color: igx-color($palette, 'grays'),\r\n        disabled-base-track-color: igx-color($palette, 'grays', 400)\r\n    );\r\n\r\n    $light-theme: (\r\n        name: $name,\r\n        track-color: igx-color($palette, 'secondary'),\r\n\r\n        thumb-color: igx-color($palette, 'secondary'),\r\n        disabled-thumb-color: rgba(#fff, .3),\r\n\r\n        label-background-color: igx-color($palette, 'secondary'),\r\n\r\n        base-track-color: rgba(#fff, .3),\r\n        disabled-base-track-color: rgba(#fff, .3)\r\n    );\r\n\r\n    $default-theme: map-get((\r\n        dark: $dark-theme,\r\n        light: $light-theme\r\n    ), $variant);\r\n\r\n    @if not($label-text-color) and not($label-background-color) {\r\n        $label-text-color: text-contrast(map-get($default-theme, 'label-background-color'));\r\n    }\r\n\r\n    @if not($label-text-color) and $label-background-color {\r\n        $label-text-color: text-contrast($label-background-color);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        track-color: $track-color,\r\n        thumb-color: $thumb-color,\r\n        label-background-color: $label-background-color,\r\n        label-text-color: $label-text-color,\r\n        variant: $variant\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-slider($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    $slider-height: 48px;\r\n    $slider-track-height: 2px;\r\n\r\n    // Slider Thumb\r\n    $slider-thumb-width: 14px;\r\n    $slider-thumb-height: $slider-thumb-width;\r\n    $slider-thumb-radius: $slider-thumb-width / 2;\r\n\r\n    // Slider Label\r\n    $slider-label-width: 28px;\r\n    $slider-label-height: $slider-label-width;\r\n    $slider-label-radius: $slider-label-width / 2;\r\n    $slider-label-font-size: rem(11px);\r\n    $slider-label-font-weight: 600;\r\n    $slider-label-padding: 0 2px;\r\n    $slider-background--start: #fff;\r\n\r\n    %igx-slider-display {\r\n        display: flex;\r\n        position: relative;\r\n        height: $slider-height;\r\n        align-items: center;\r\n    }\r\n\r\n    %igx-slider-thumbs-container {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 0;\r\n        cursor: default;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-slider-track {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: $slider-track-height;\r\n        background: --var($theme, 'base-track-color');\r\n        transition: background .2s ease;\r\n    }\r\n\r\n    %igx-slider-track--disabled {\r\n        background: --var($theme, 'disabled-base-track-color');\r\n    }\r\n\r\n    %igx-slider-track-ticks {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: $slider-track-height;\r\n        background-size: 100% $slider-track-height;\r\n        opacity: .85;\r\n        transition: opacity .2s ease;\r\n        z-index: 1;\r\n    }\r\n\r\n    %igx-slider-track-ticks--disabled {\r\n        visibility: hidden;\r\n    }\r\n\r\n    %igx-slider-track-fill {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: inherit;\r\n        background: --var($theme, 'track-color');\r\n        transform-origin: 0 0 0;\r\n        transform: scaleX(0);\r\n    }\r\n\r\n    %igx-slider-track-fill--disabled {\r\n        visibility: hidden;\r\n    }\r\n\r\n    %igx-thumb-display {\r\n        display: flex;\r\n        position: absolute;\r\n        justify-content: center;\r\n        flex-flow: row nowrap;\r\n        width: $slider-thumb-width;\r\n        height: $slider-thumb-height;\r\n        margin-left: -$slider-thumb-width / 2;\r\n        top: -$slider-thumb-height / 2;\r\n        outline: none;\r\n    }\r\n\r\n    %igx-thumb-label {\r\n        display: flex;\r\n        position: relative;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex: 0 0 auto;\r\n        min-width: $slider-label-width;\r\n        height: $slider-label-height;\r\n        padding: $slider-label-padding;\r\n        border-radius: $slider-label-radius;\r\n        top: -36px;\r\n        font-size: $slider-label-font-size;\r\n        font-weight: $slider-label-font-weight;\r\n        line-height: $slider-label-font-size;\r\n        color: --var($theme, 'label-text-color');\r\n        background: --var($theme, 'label-background-color');\r\n        opacity: .5;\r\n        transform: scale(0);\r\n        border-color: --var($theme, 'label-background-color') transparent transparent;\r\n        transform-origin: 50% 150% 0;\r\n        transition: transform .2s ease-out;\r\n        z-index: -1;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            left: 50%;\r\n            width: 0;\r\n            height: 0;\r\n            transform: translateX(-50%);\r\n            border-left: 10px solid;\r\n            border-right: 10px solid;\r\n            border-top: 12px solid;\r\n            border-color: inherit;\r\n            top: 24px;\r\n            z-index: -1;\r\n        }\r\n    }\r\n\r\n    %igx-thumb-dot {\r\n        position: absolute;\r\n        left: 0;\r\n        width: inherit;\r\n        height: inherit;\r\n        border-radius: $slider-thumb-radius;\r\n        background: --var($theme, 'thumb-color');\r\n        transform: scale(1);\r\n        transform-origin: 50% 50% 0;\r\n        opacity: 1;\r\n        transition: transform .2s ease-out;\r\n    }\r\n\r\n    %igx-thumb-dot--disabled {\r\n        background: --var($theme, 'disabled-thumb-color');\r\n        transform: scale(.9);\r\n        border: 2px solid transparent;\r\n    }\r\n\r\n    %igx-thumb-dot--active {\r\n        opacity: 0;\r\n        transform: scale(0);\r\n    }\r\n\r\n    %igx-thumb-label--active {\r\n        opacity: .85;\r\n        transform: scale(1.2);\r\n    }\r\n\r\n    %igx-thumb-dot--start,\r\n    %igx-thumb-label--start {\r\n        background: $slider-background--start;\r\n        border-color: $slider-background--start transparent transparent;\r\n    }\r\n\r\n    %igx-thumb--active {\r\n        z-index: 1;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If you specify a background color, but do not specify colors for either the\r\n/// button or the text, their colors will be set automatically to a contrasting color.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The background color used in the snackbar.\r\n/// @param {Color} $text-color [null] - The text color used in the snackbar.\r\n/// @param {Color} $button-color [null] - The button color used in the snackbar.\r\n///\r\n/// @requires extend\r\n/// @requires text-contrast\r\n/// @requires igx-color\r\n///\r\n/// @todo Add light option\r\n///\r\n/// @example scss Set a custom background color\r\n///   $my-snackbar-theme: igx-snackbar-theme($background: white);\r\n///   // Pass the theme to the igx-bottom-nav component mixin\r\n///   @include igx-snackbar($my-snackbar-theme);\r\n@function igx-snackbar-theme(\r\n    $palette: $default-palette,\r\n    $background: null,\r\n    $text-color: null,\r\n    $button-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-snackbar',\r\n        background: #323232,\r\n        text-color: #fff,\r\n        button-color: igx-color($palette, 'secondary')\r\n    );\r\n\r\n    @if not($button-color) and $background {\r\n        $button-color: text-contrast($background);\r\n    }\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        text-color: $text-color,\r\n        button-color: $button-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-snackbar($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    // @debug $theme;\r\n\r\n    $snackbar-min-height: rem(48px);\r\n    $snackbar-padding: rem(7px) rem(24px);\r\n    $snackbar-button-left-margin: rem(24px);\r\n    $snackbar-font-size: rem(14px);\r\n    $snackbar-button-line-height: rem(16px);\r\n    $snackbar-button-font-weight: 600;\r\n\r\n    %igx-snackbar-display {\r\n        position: relative;\r\n        display: flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        min-height: $snackbar-min-height;\r\n        padding: $snackbar-padding;\r\n        color: --var($theme, 'text-color');\r\n        background: --var($theme, 'background');\r\n        backface-visibility: hidden;\r\n    }\r\n\r\n    %igx-snackbar-message {\r\n        font-size: $snackbar-font-size;\r\n    }\r\n\r\n    %igx-snackbar-button {\r\n        background: transparent;\r\n        color: --var($theme, 'button-color');\r\n        border: 0;\r\n        line-height: $snackbar-button-line-height;\r\n        margin-left: $snackbar-button-left-margin;\r\n        text-transform: uppercase;\r\n        user-select: none;\r\n        font-weight: $snackbar-button-font-weight;\r\n        -webkit-tap-highlight-color: transparent;\r\n        outline: none;\r\n        transition: color .2s ease;\r\n\r\n        &:hover {\r\n            color: --var($theme, 'button-color');\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $thumb-on-color [null] - The color of the thumb when the switch is on.\r\n/// @param {Color} $track-on-color [null] - The color of the track when the switch is on.\r\n/// @param {Color} $thumb-off-color [null] - The color of the thumb when the switch is off.\r\n/// @param {Color} $track-off-color [null] - The color of the track when the switch is off.\r\n/// @param {Color} $thumb-disabled-color [null] - The color of the thumb when the switch is disabled.\r\n/// @param {Color} $track-disabled-color [null] - The color of the track when the switch is disabled.\r\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be 'light' or 'dark'.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires hexrgba\r\n///\r\n/// Set light to true when the surrounding area is dark.\r\n/// @example scss Set custom track and thumb on colors\r\n///   $my-switch-theme: igx-toast-theme($thumb-on-color: black, $track-on-color: yellow);\r\n///   // Pass the theme to the igx-bottom-nav component mixin\r\n///   @include igx-switch($my-switch-theme);\r\n@function igx-switch-theme(\r\n    $palette: $default-palette,\r\n\r\n    $thumb-on-color: null,\r\n    $track-on-color: null,\r\n\r\n    $thumb-off-color: null,\r\n    $track-off-color: null,\r\n\r\n    $track-disabled-color: null,\r\n    $thumb-disabled-color: null,\r\n\r\n    $label-color: null,\r\n    $label-disabled-color: null,\r\n\r\n    $variant: 'dark'\r\n) {\r\n    $name: 'igx-switch';\r\n\r\n    $dark-theme: (\r\n        name: $name,\r\n\r\n        thumb-on-color: igx-color($palette, 'secondary', 500),\r\n        track-on-color: rgba(igx-color($palette, 'secondary', 500), .5),\r\n\r\n        thumb-off-color: #fafafa,\r\n        track-off-color: rgba(0, 0, 0, .5),\r\n\r\n        label-color: igx-color($palette, grays, 900),\r\n        label-disabled-color: igx-color($palette, grays, 400),\r\n\r\n        track-disabled-color: rgba(0, 0, 0, .12),\r\n        thumb-disabled-color: hexrgba(igx-color($palette, 'grays', 400))\r\n    );\r\n\r\n    $light-theme: (\r\n        name: $name,\r\n\r\n        thumb-on-color: igx-color($palette, 'secondary', 200),\r\n        track-on-color: rgba(igx-color($palette, 'secondary', 200), .5),\r\n\r\n        thumb-off-color: #bdbdbd,\r\n        track-off-color: rgba(255, 255, 255, .3),\r\n\r\n        label-color: #fff,\r\n        label-disabled-color: rgba(255, 255, 255, .3),\r\n\r\n        track-disabled-color: #424242,\r\n        thumb-disabled-color: #6c6c6c\r\n    );\r\n\r\n    $default-theme: map-get((\r\n        dark: $dark-theme,\r\n        light: $light-theme\r\n    ), $variant);\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n\r\n        thumb-on-color: $thumb-on-color,\r\n        track-on-color: $track-on-color,\r\n\r\n        thumb-off-color: $thumb-off-color,\r\n        track-off-color: $track-off-color,\r\n\r\n        track-disabled-color: $track-disabled-color,\r\n        thumb-disabled-color: $thumb-disabled-color,\r\n\r\n        label-color: $label-color,\r\n        label-disabled-color: $label-disabled-color,\r\n\r\n        variant: $variant\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires {mixin} igx-css-vars\r\n/// @requires {mixin} scale-in-out\r\n/// @requires {mixin} igx-ripple\r\n/// @requires {mixin} hide-default\r\n/// @requires igx-ripple-theme\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires em\r\n/// @requires {mixin} scale-in-out\r\n/// @requires {mixin} animation\r\n/// @requires --var\r\n@mixin igx-switch($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    @include scale-in-out($start-scale: .9);\r\n\r\n    // @debug $theme;\r\n\r\n    $switch-width: 36px ;\r\n    $switch-height: 14px ;\r\n    $switch-radius: 100px ;\r\n\r\n    $switch-thumb-width: 20px ;\r\n    $switch-thumb-height: $switch-thumb-width ;\r\n\r\n    $switch-shadow: igx-elevation($elevations, 2);\r\n    $switch-hover-shadow: igx-elevation($elevations, 3);\r\n    $switch-disabled-shadow: igx-elevation($elevations, 1);\r\n\r\n    $ripple-size: em(48px);\r\n    $ripple-radius: $ripple-size / 2;\r\n\r\n    $label-font-size: em(16px);\r\n    $label-margin: em(8px);\r\n\r\n    $input-transition: all .2s $ease-in-out-quad;\r\n\r\n    $ripple-theme: igx-ripple-theme(\r\n        $color: --var($theme, 'thumb-on-color')\r\n    );\r\n\r\n    %switch-display {\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        font-size: 16px;\r\n    }\r\n\r\n    %switch-input {\r\n        @include hide-default();\r\n    }\r\n\r\n    %switch-display--disabled {\r\n        user-select: none;\r\n        pointer-events: none;\r\n        cursor: initial;\r\n    }\r\n\r\n    %switch-composite {\r\n        display: flex;\r\n        align-items: center;\r\n        width: $switch-width;\r\n        height: $switch-height;\r\n        border-radius: $switch-radius;\r\n        background-color: --var($theme, 'track-off-color');\r\n        cursor: pointer;\r\n        user-select: none;\r\n        transition: $input-transition;\r\n    }\r\n\r\n    %switch-composite--x {\r\n        background-color: --var($theme, 'track-on-color');\r\n    }\r\n\r\n    %switch-composite--disabled {\r\n        background: --var($theme, 'track-disabled-color');\r\n    }\r\n\r\n    %switch-composite-thumb {\r\n        position: relative;\r\n        display: block;\r\n        width: $switch-thumb-width;\r\n        height: $switch-thumb-height;\r\n        min-width: $switch-thumb-width;\r\n        border-radius: 50%;\r\n        background: --var($theme, 'thumb-off-color');\r\n        box-shadow: $switch-shadow;\r\n        transition: $input-transition;\r\n\r\n        &:hover {\r\n            box-shadow: $switch-hover-shadow;\r\n        }\r\n    }\r\n\r\n    %switch-composite-thumb--x {\r\n        transform: translateX(#{$switch-width - $switch-thumb-width});\r\n        background: --var($theme, 'thumb-on-color');\r\n\r\n        [dir='rtl'] & {\r\n            transform: translateX(-#{$switch-width - $switch-thumb-width});\r\n        }\r\n    }\r\n\r\n    %switch-composite-thumb--disabled {\r\n        background: --var($theme, 'thumb-disabled-color');\r\n        box-shadow: $switch-disabled-shadow;\r\n    }\r\n\r\n    %switch-ripple {\r\n        @include igx-ripple($ripple-theme);\r\n        @include igx-css-vars($ripple-theme);\r\n        position: absolute;\r\n        top: calc(50% - #{$ripple-radius});\r\n        left: calc(50% - #{$ripple-radius});\r\n        width: $ripple-size;\r\n        height: $ripple-size;\r\n        border-radius: $ripple-radius;\r\n        overflow: hidden;\r\n        pointer-events: none;\r\n        filter: opacity(1);\r\n    }\r\n\r\n    %switch-ripple--focused {\r\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\r\n        background-color: --var($theme, 'thumb-on-color');\r\n        transition: background-color .2s $ease-out-quad;\r\n        opacity: .12;\r\n    }\r\n\r\n    %switch-label {\r\n        display: inline-block;\r\n        color: --var($theme, 'label-color');\r\n        font-size: $label-font-size;\r\n        line-height: 1;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        word-wrap: break-all;\r\n\r\n        &:empty {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    %switch-label--after {\r\n        margin-left: $label-margin;\r\n\r\n        [dir='rtl'] & {\r\n            margin-left: initial;\r\n            margin-right: $label-margin;\r\n\r\n            &:empty {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-label--before {\r\n        order: -1;\r\n        margin-right: $label-margin;\r\n\r\n        [dir='rtl'] & {\r\n            margin-right: initial;\r\n            margin-left: $label-margin;\r\n\r\n            &:empty {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    %switch-label--disabled {\r\n        color: --var($theme, 'label-disabled-color');\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified,\r\n/// the idle item color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $item-background [null] - The background color used for the tabs header.\r\n/// @param {Color} $item-hover-background [null] - The text-color used for the tabs.\r\n/// @param {Color} $item-text-color [null] - The color used for the tab text color.\r\n/// @param {Color} $item-hover-color [null] - The color used for the tab text color when is on :hover.\r\n///\r\n/// @param {Color} $item-active-color [null] - The color used for the active tabs text.\r\n/// @param {Color} $item-active-icon-color [null] - The color used for the active tabs icon.\r\n/// @param {Color} $item-active-background [null] - The color used for the active/focused tab background.\r\n///\r\n/// @param {Color} $indicator-color [null] - The color used for the active tab indicator.\r\n/// @param {Color} $item-focus-bg [null] - The background color used for the selected/focused tab.\r\n/// @param {Color} $button-color [null] - The color used for the button icon/text color.\r\n/// @param {Color} $button-hover-color [null] - The color used for the button icon/text color when is on :hover.\r\n/// @param {Color} $button-background [null] - The color used for the button background.\r\n/// @param {Color} $button-hover-background [null] - The color used for the button background when is on :hover.\r\n///\r\n/// @param {Color} $tab-ripple-color [null] - The color used for the button background.\r\n/// @param {Color} $button-ripple-color [null] - The color used for the button background when is on :hover.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Set a custom background color\r\n///   $my-tabs-theme: igx-tabs-theme(\r\n///      $item-background: orange\r\n///    );\r\n///   // Pass the theme to the igx-tabs component mixin\r\n///   @include igx-tabs($my-tabs-theme);\r\n\r\n@function igx-tabs-theme(\r\n    $palette: $default-palette,\r\n\r\n    $item-background: null,\r\n    $item-text-color: null,\r\n\r\n    $item-hover-background: null,\r\n    $item-hover-color: null,\r\n\r\n    $item-active-color: null,\r\n    $item-active-icon-color: null,\r\n    $item-active-background: null,\r\n    $indicator-color: null,\r\n\r\n    $button-color: null,\r\n    $button-background: null,\r\n    $button-hover-background: null,\r\n    $button-hover-color: null,\r\n\r\n    $tab-ripple-color: null,\r\n    $button-ripple-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-tabs',\r\n\r\n        item-text-color: igx-color($palette, 'grays', 600),\r\n        item-background: white,\r\n        item-hover-color: igx-color($palette, 'grays', 600),\r\n        item-hover-background: igx-color($palette, 'grays', 200),\r\n\r\n        item-active-color: igx-color($palette, 'grays', 800),\r\n        item-active-icon-color: igx-color($palette, 'primary', 500),\r\n        item-active-background: igx-color($palette, 'grays', 200),\r\n\r\n        indicator-color: igx-color($palette, 'primary', 500),\r\n\r\n        button-color: igx-color($palette, 'grays', 500),\r\n        button-background: white,\r\n        button-hover-background: igx-color($palette, 'grays', 100),\r\n        button-hover-color: igx-color($palette, 'grays', 600),\r\n\r\n        tab-ripple-color: igx-color($palette, 'grays', 100),\r\n        button-ripple-color: igx-color($palette, 'grays', 100)\r\n    );\r\n\r\n    @if not($item-text-color) and $item-background {\r\n        $item-text-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($item-hover-color) and $item-hover-background {\r\n        $item-hover-color: text-contrast($item-hover-background);\r\n    }\r\n\r\n    @if not($item-active-color) and $item-active-background {\r\n        $item-active-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($item-active-icon-color) and $item-active-background {\r\n        $item-active-icon-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($button-color) and $button-background {\r\n        $button-color: text-contrast($button-background);\r\n    }\r\n\r\n    @if not($button-hover-color) and $button-hover-background {\r\n        $button-hover-color: text-contrast($button-hover-background);\r\n    }\r\n\r\n    @if not($tab-ripple-color) and $item-active-background {\r\n        $tab-ripple-color: text-contrast($item-active-background);\r\n    }\r\n\r\n    @if not($tab-ripple-color) and $item-background {\r\n        $tab-ripple-color: text-contrast($item-background);\r\n    }\r\n\r\n    @if not($button-ripple-color) and $button-background {\r\n        $button-ripple-color: text-contrast($button-background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        item-text-color: $item-text-color,\r\n        item-background: $item-background,\r\n        item-hover-color: $item-hover-color,\r\n        item-hover-background: $item-hover-background,\r\n        item-active-color: $item-active-color,\r\n        item-active-icon-color: $item-active-icon-color,\r\n        item-active-background: $item-active-background,\r\n        indicator-color: $indicator-color,\r\n        button-color: $button-color,\r\n        button-background: $button-background,\r\n        button-hover-background:$button-hover-background,\r\n        button-hover-color:$button-hover-color,\r\n        tab-ripple-color: $tab-ripple-color,\r\n        button-ripple-color: $button-ripple-color,\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires {mixin} igx-css-vars\r\n/// @requires igx-ripple-theme\r\n/// @requires {mixin} igx-ripple\r\n/// @requires igx-color\r\n/// @requires igx-elevation\r\n/// @requires $elevations\r\n/// @requires {mixin} ellipsis\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-tabs($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $item-min-width-small-res: 74px;\r\n    $item-min-width: 160px;\r\n\r\n    $item-max-width: 264px;\r\n    $item-padding: 0 rem(24px);\r\n    $tabs-height: rem(48px);\r\n    $tabs-height-icon: rem(77px);\r\n    $label-font-size: rem(14px, 16px);\r\n    $label-line-height: rem(16px, 16px);\r\n    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);\r\n    $icon-label-space: rem(10px);\r\n\r\n    $tabs-ripple-theme: igx-ripple-theme($color: --var($theme, 'tab-ripple-color'));\r\n    $button-ripple-theme: igx-ripple-theme($color: --var($theme, 'button-ripple-color'));\r\n\r\n    %igx-tabs {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    %igx-tabs__header {\r\n        display: flex;\r\n        align-items: center;\r\n        overflow: hidden;\r\n        background: --var($theme, 'item-background');\r\n    }\r\n\r\n    // ITEM WRAPPER\r\n    %igx-tabs__content-fixed {\r\n        min-width: $item-max-width\r\n    }\r\n\r\n    %igx-tabs__content-fixed,\r\n    %igx-tabs__header-wrapper-fixed {\r\n        flex: 1 1 auto;\r\n        overflow: hidden;\r\n    }\r\n\r\n    // ITEM HOLDER (The element that scrolls)\r\n    %igx-tabs__content-fluid,\r\n    %igx-tabs__header-wrapper-fluid {\r\n        position: relative;\r\n        flex-wrap: nowrap;\r\n        transition: transform .2s $tabs-animation-function;\r\n    }\r\n\r\n    %igx-tabs__header-wrapper-fluid {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        min-width: 100%;\r\n    }\r\n\r\n    %igx-tabs__content-fluid {\r\n        display: flex;\r\n    }\r\n\r\n    // MENU ITEM\r\n    %igx-tabs__header-menu-item {\r\n        display: inline-flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: $item-min-width;\r\n        @media only screen and (max-width: 600px) {\r\n            min-width: $item-min-width-small-res;\r\n        }\r\n        max-width: $item-max-width;\r\n        height: $tabs-height;\r\n        // Flex basis & shrink are Needed for IE11\r\n        flex-basis: auto;\r\n        flex-shrink: 0;\r\n        padding: $item-padding;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n        position: relative;\r\n        transition: background .3s $tabs-animation-function;\r\n        user-select: none;\r\n        background: --var($theme, 'item-background');\r\n        color: --var($theme, 'item-text-color');\r\n        outline: 0;\r\n\r\n        &::-moz-focus-inner {\r\n            border: 0;\r\n        }\r\n\r\n        &:focus {\r\n            background: --var($theme, 'item-active-background');\r\n        }\r\n\r\n        &:hover {\r\n            background: --var($theme, 'item-hover-background');\r\n            color: --var($theme, 'item-hover-color');\r\n        }\r\n\r\n        @include igx-ripple($tabs-ripple-theme);\r\n        @include igx-css-vars($tabs-ripple-theme);\r\n    }\r\n\r\n    %igx-tabs__header-menu-item--selected {\r\n        outline: 0;\r\n        color: --var($theme, 'item-active-color');\r\n\r\n        &:focus {\r\n            background: --var($theme, 'item-active-background');\r\n            color: --var($theme, 'item-active-color');\r\n        }\r\n\r\n        &:hover {\r\n            background: --var($theme, 'item-active-background');\r\n            color: --var($theme, 'item-active-color');\r\n        }\r\n\r\n        %igx-tabs__header-menu-item-icon {\r\n            color: --var($theme, 'item-active-icon-color');\r\n        }\r\n    }\r\n\r\n    %igx-tabs__header-menu-item--disabled {\r\n        outline: 0;\r\n        opacity: .5;\r\n        cursor: default;\r\n        pointer-events: none;\r\n    }\r\n\r\n    %igx-tabs__header-menu-item-icon {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        + %igx-tabs__item-label {\r\n            padding-top: $icon-label-space;\r\n        }\r\n    }\r\n\r\n    %igx-tabs__header-menu-item-indicator {\r\n        position: absolute;\r\n        bottom: 0;\r\n        // We need to explicitly set the default for IE 11\r\n        left: 0;\r\n        transform: translateX(0);\r\n        height: 2px;\r\n        min-width: $item-min-width;\r\n        @media only screen and (max-width: 600px) {\r\n            min-width: $item-min-width-small-res;\r\n        }\r\n        background: --var($theme, 'indicator-color');\r\n        transition: transform .3s $tabs-animation-function, width .2s $tabs-animation-function;\r\n    }\r\n\r\n    // SCROLL BUTTONS\r\n    %igx-tabs__header-button {\r\n        z-index: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: none;\r\n        padding: 0;\r\n        min-width: rem(48px);\r\n        width: rem(48px);\r\n        min-height: $tabs-height;\r\n        height: $tabs-height;\r\n        cursor: pointer;\r\n        position: relative;\r\n        background: --var($theme, 'button-background');\r\n        color: --var($theme, 'button-color');\r\n        outline: 0;\r\n        box-shadow: igx-elevation($elevations, 4);\r\n\r\n        &:hover {\r\n            background: --var($theme, 'button-hover-background');\r\n            color: --var($theme, 'button-hover-color');\r\n        }\r\n\r\n        &:focus {\r\n            outline: 0;\r\n            background: --var($theme, 'button-hover-background');\r\n        }\r\n\r\n        &::-moz-focus-inner {\r\n            // remove focus dotted border in firefox\r\n            border: 0;\r\n        }\r\n\r\n        @include igx-ripple($button-ripple-theme);\r\n        @include igx-css-vars($button-ripple-theme);\r\n    }\r\n\r\n    %igx-tabs__header-button--hidden {\r\n        visibility: hidden;\r\n    }\r\n\r\n    %igx-tabs__header-button--none {\r\n        display: none;\r\n    }\r\n\r\n    %igx-tabs__item-label {\r\n        @include ellipsis();\r\n        font-size: $label-font-size;\r\n        line-height: $label-line-height;\r\n        max-width: 100%;\r\n        text-align: center;\r\n\r\n        + %igx-tabs__header-menu-item-icon {\r\n            padding-top: $icon-label-space;\r\n        }\r\n    }\r\n\r\n    %igx-tabs__group {\r\n        display: inline-block;\r\n        min-width: 100%;\r\n    }\r\n\r\n    %igx-tabs--fixed {\r\n        %igx-tabs__header-menu-item {\r\n            flex: 1 1 auto;\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    %igx-tabs--icons {\r\n        %igx-tabs__header-button,\r\n        %igx-tabs__header-menu-item {\r\n            min-height: $tabs-height-icon;\r\n            height: $tabs-height-icon;\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified,\r\n/// the text-color will be assigned automatically to a contrasting color.\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $background [null] - The background color used for the toast.\r\n/// @param {Color} $text-color [null] - The text-color used for the toast.\r\n///\r\n/// @requires extend\r\n/// @requires igx-color\r\n/// @requires text-contrast\r\n///\r\n/// @example scss Set a custom background color\r\n///   $my-toast-theme: igx-toast-theme($background: green);\r\n///   // Pass the theme to the igx-toast component mixin\r\n///   @include igx-toast($my-toast-theme);\r\n@function igx-toast-theme(\r\n    $palette: $default-palette,\r\n    $background: null,\r\n    $text-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-toast',\r\n        background: igx-color($palette, 'grays', 600),\r\n        text-color: #fff\r\n    );\r\n\r\n    @if not($text-color) and $background {\r\n        $text-color: text-contrast($background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        background: $background,\r\n        text-color: $text-color\r\n    ));\r\n}\r\n\r\n/// Toast Component\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-toast($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $toast-width: 52px;\r\n    $toast-padding: rem(16px) rem(24px);\r\n    $toast-margin: rem(42px) auto;\r\n    $toast-border-radius: ($toast-width / 2);\r\n    $toast-font-size: rem(14px);\r\n    $toast-line-height: rem(24px);\r\n\r\n    // @debug $theme;\r\n\r\n    %igx-toast-display {\r\n        position: fixed;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        left: 50%;\r\n        transform: translate3d(-50%, 0, 0);\r\n        margin: $toast-margin;\r\n        padding: $toast-padding;\r\n        min-width: $toast-width;\r\n        font-size: $toast-font-size;\r\n        line-height: $toast-line-height;\r\n        color: --var($theme, 'text-color');\r\n        background-color: --var($theme, 'background');\r\n        border-radius: $toast-border-radius;\r\n        opacity: 0;\r\n        z-index: 999999;\r\n    }\r\n\r\n    %igx-toast--top {\r\n        top: 0;\r\n    }\r\n\r\n    %igx-toast--middle {\r\n        top: 50%;\r\n        transform: translate3d(-50%, -50%, 0);\r\n    }\r\n\r\n    %igx-toast--bottom {\r\n        bottom: 0;\r\n    }\r\n}\r\n","////\r\n/// @group themes\r\n/// @access public\r\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\r\n////\r\n\r\n/// If only background color is specified, text/icon color\r\n/// will be assigned automatically to a contrasting color.\r\n/// Does ___not___ apply for disabled state colors.\r\n///\r\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\r\n/// @param {Color} $text-color [null] - The text color of a open time picker.\r\n/// @param {Color} $hover-text-color [null] - The hover text color of a open time picker.\r\n/// @param {Color} $selected-text-color [null] -  The text color of a selected item in time picker.\r\n/// @param {Color} $active-item-background [null] - The background color for current item in focused column inside the time picker.\r\n/// @param {Color} $header-background [null] - The header background color of a time picker.\r\n/// @param {Color} $header-hour-text-color [null] - The header hour text color of a time picker.\r\n/// @param {Color} $header-time-period-color [null] - The header AM/PM text color of a time picker.\r\n/// @param {Color} $background-color [null] - The time-picker panel background color.\r\n///\r\n/// @requires extend\r\n/// @requires text-contrast\r\n/// @requires igx-color\r\n///\r\n/// @example scss Change the background and text colors in  time picker\r\n///   $my-time-picker-theme: igx-time-picker-theme(\r\n///     $text-color: white,\r\n///     $background-color: black\r\n///   );\r\n///   // Pass the theme to the igx-time-picker component mixin\r\n///   @include igx-time-picker($my-button-theme);\r\n@function igx-time-picker-theme(\r\n    $palette: $default-palette,\r\n    $text-color: null,\r\n    $hover-text-color: null,\r\n    $selected-text-color: null,\r\n    $active-item-background: null,\r\n    $header-background: null,\r\n    $header-hour-text-color: null,\r\n    $header-time-period-color: null,\r\n    $background-color: null\r\n) {\r\n    $default-theme: (\r\n        name: 'igx-time-picker',\r\n        text-color: igx-color($palette, 'grays', 500),\r\n        hover-text-color: igx-color($palette, 'secondary', 500),\r\n        selected-text-color: igx-color($palette, 'secondary', 500),\r\n        active-item-background: igx-color($palette, 'grays', 100),\r\n        header-background: igx-color($palette, 'secondary', 500),\r\n        header-hour-text-color: white,\r\n        header-time-period-color: rgba(255, 255, 255, .8),\r\n        background-color: white\r\n    );\r\n\r\n    @if not($text-color) and $background-color {\r\n        $text-color: text-contrast($background-color);\r\n    }\r\n\r\n    @if not($header-hour-text-color) and $header-background {\r\n        $header-hour-text-color: text-contrast($header-background);\r\n    }\r\n\r\n    @if not($header-time-period-color) and $header-background {\r\n        $header-time-period-color: rgba(text-contrast($header-background), .8);\r\n    }\r\n\r\n    @if not($selected-text-color) and $active-item-background {\r\n        $selected-text-color: text-contrast($active-item-background);\r\n    }\r\n\r\n    @return extend($default-theme, (\r\n        palette: $palette,\r\n        text-color: $text-color,\r\n        hover-text-color: $hover-text-color,\r\n        selected-text-color: $selected-text-color,\r\n        active-item-background: $active-item-background,\r\n        header-background: $header-background,\r\n        header-hour-text-color: $header-hour-text-color,\r\n        header-time-period-color: $header-time-period-color,\r\n        background-color: $background-color\r\n    ));\r\n}\r\n\r\n/// @param {Map} $theme - The theme used to style the component.\r\n/// @requires {mixin} igx-root-css-vars\r\n/// @requires rem\r\n/// @requires --var\r\n@mixin igx-time-picker($theme) {\r\n    @include igx-root-css-vars($theme);\r\n\r\n    $vertical-header-width: rem(168px);\r\n\r\n    %igx-time-picker__body {\r\n        display: flex;\r\n        padding: 10px 0;\r\n        justify-content: center;\r\n        background: --var($theme, 'background-color');\r\n    }\r\n\r\n    %igx-time-picker__body--vertical {\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    %time-picker-display {\r\n        max-width: 340px;\r\n        min-width: 320px;\r\n        padding: 0;\r\n    }\r\n\r\n    %time-picker-display--vertical {\r\n        width: 540px;\r\n    }\r\n\r\n    // Take effect only in vertical mode\r\n    %igx-time-picker__wrapper {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n    }\r\n\r\n    %time-picker-content {\r\n        width: 100%;\r\n        padding: 0;\r\n        color: inherit;\r\n        font-size: initial;\r\n        line-height: initial;\r\n    }\r\n\r\n    %time-picker-dialog-title {\r\n        display: none;\r\n    }\r\n\r\n    %time-picker-dialog-actions {\r\n        margin: 0;\r\n    }\r\n\r\n    %igx-time-picker__hourList {\r\n        text-align: right;\r\n    }\r\n\r\n    %igx-time-picker__minuteList {\r\n        text-align: center;\r\n    }\r\n\r\n    %igx-time-picker__ampmList {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-top: 48px;\r\n    }\r\n\r\n    %igx-time-picker__column {\r\n        max-width: 64px;\r\n        height: 325px;\r\n        font-size: 16px;\r\n        padding: 0;\r\n        cursor: pointer;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        color: --var($theme, 'text-color');\r\n        overflow: hidden;\r\n\r\n        &:focus,\r\n        &:active {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    %igx-time-picker__item {\r\n        width: 54px;\r\n        padding: 5px 10px;\r\n        border-radius: 15px;\r\n        height: 48px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        &:focus,\r\n        &:active {\r\n            outline: none;\r\n        }\r\n\r\n        &:hover {\r\n            color: --var($theme, 'hover-text-color');\r\n        }\r\n    }\r\n\r\n    %igx-time-picker__item--selected {\r\n        font-size: 24px;\r\n        color: --var($theme, 'selected-text-color');\r\n    }\r\n\r\n    %igx-time-picker__item--active {\r\n        background: --var($theme, 'active-item-background');\r\n    }\r\n\r\n    %igx-time-picker__header {\r\n        background: --var($theme, 'header-background');\r\n        padding: rem(24px) rem(16px);\r\n    }\r\n\r\n    %igx-time-picker__header-ampm {\r\n        color: --var($theme, 'header-time-period-color');\r\n        font-size: rem(16px);\r\n    }\r\n\r\n    %igx-time-picker__header--vertical {\r\n        width: $vertical-header-width;\r\n        position: relative;\r\n    }\r\n\r\n    %igx-time-picker__header--vertical-after {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 100%;\r\n        height: 100%;\r\n        background: --var($theme, 'header-background');\r\n    }\r\n\r\n    %igx-time-picker__header-hour {\r\n        color: --var($theme, 'header-hour-text-color');\r\n        font-size: rem(40px);\r\n        display: flex;\r\n    }\r\n\r\n    %igx-time-picker__header-ampm,\r\n    %igx-time-picker__header-hour {\r\n        margin: 0;\r\n    }\r\n}\r\n"]}