import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, TemplateRef } from "@angular/core";
import { IgxSelectionAPIService } from "../core/selection";
import { IgxGridAPIService } from "./api.service";
import { IgxColumnComponent } from "./column.component";
import { IGridBus } from "./grid.common";
export declare class IgxGridCellComponent implements IGridBus, OnInit, OnDestroy, AfterViewInit {
    gridAPI: IgxGridAPIService;
    selectionApi: IgxSelectionAPIService;
    cdr: ChangeDetectorRef;
    private element;
    column: IgxColumnComponent;
    row: any;
    cellTemplate: TemplateRef<any>;
    value: any;
    highlightClass: string;
    activeHighlightClass: string;
    readonly formatter: (value: any) => any;
    readonly context: any;
    readonly template: TemplateRef<any>;
    readonly gridID: any;
    readonly grid: any;
    readonly rowIndex: number;
    readonly columnIndex: number;
    readonly visibleColumnIndex: number;
    readonly unpinnedColumnIndex: number;
    readonly cellID: {
        rowID: any;
        columnID: number;
        rowIndex: number;
    };
    readonly nativeElement: any;
    inEditMode: boolean;
    tabindex: number;
    role: string;
    readonly readonly: boolean;
    readonly cellInEditMode: boolean;
    readonly describedby: string;
    readonly styleClasses: string;
    readonly width: string;
    readonly editModeCSS: boolean;
    focused: boolean;
    readonly applyNumberCSSClass: boolean;
    readonly isPinned: boolean;
    readonly isLastPinned: boolean;
    readonly isLastUnpinned: boolean;
    selected: boolean;
    protected defaultCellTemplate: TemplateRef<any>;
    protected inlineEditorTemplate: TemplateRef<any>;
    private highlight;
    protected defaultCssClass: string;
    protected isFocused: boolean;
    protected isSelected: boolean;
    protected _inEditMode: boolean;
    protected chunkLoadedHor: any;
    protected chunkLoadedVer: any;
    private cellSelectionID;
    constructor(gridAPI: IgxGridAPIService, selectionApi: IgxSelectionAPIService, cdr: ChangeDetectorRef, element: ElementRef);
    private _updateCellSelectionStatus();
    private _clearCellSelection();
    private _getLastSelectedCell();
    isCellSelected(): boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    update(val: any): void;
    onDoubleClick(event: any): void;
    onClick(event: any): void;
    onContextMenu(event: any): void;
    onFocus(event: any): void;
    onBlur(event: any): void;
    onKeydownArrowLeft(event: any): void;
    onKeydownCtrlArrowLeft(): void;
    onKeydownArrowRight(event: any): void;
    onKeydownCtrlArrowRight(): void;
    onKeydownArrowUp(event: any): void;
    onKeydownArrowDown(event: any): void;
    onKeydownEnterEditMode(): void;
    onKeydownExitEditMode(): void;
    highlightText(text: string, caseSensitive?: boolean): number;
    clearHighlight(): void;
}
