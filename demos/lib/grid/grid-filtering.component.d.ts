import { ChangeDetectorRef, DoCheck, ElementRef, NgZone, OnDestroy, OnInit, TemplateRef } from "@angular/core";
import { Subject, Subscription } from "rxjs";
import { DataType } from "../data-operations/data-util";
import { IgxToggleDirective } from "../directives/toggle/toggle.directive";
import { IgxGridAPIService } from "./api.service";
import { IGridBus } from "./grid.common";
export declare class IgxGridFilterComponent implements IGridBus, OnInit, OnDestroy, DoCheck {
    private zone;
    gridAPI: IgxGridAPIService;
    cdr: ChangeDetectorRef;
    private elementRef;
    column: any;
    value: any;
    readonly dataType: DataType;
    readonly conditions: any[];
    readonly template: TemplateRef<any>;
    readonly filterCSS: string;
    readonly gridID: string;
    readonly styleClasses: string;
    booleanFilterAll: string;
    dialogShowing: boolean;
    dialogPosition: string;
    protected UNARY_CONDITIONS: string[];
    protected _value: any;
    protected _filterCondition: any;
    protected filterChanged: Subject<{}>;
    protected conditionChanged: Subject<{}>;
    protected unaryConditionChanged: Subject<{}>;
    protected chunkLoaded: Subscription;
    private MINIMUM_VIABLE_SIZE;
    protected defaultFilterUI: TemplateRef<any>;
    protected defaultDateUI: TemplateRef<any>;
    protected toggleDirective: IgxToggleDirective;
    protected select: ElementRef;
    protected input: ElementRef;
    constructor(zone: NgZone, gridAPI: IgxGridAPIService, cdr: ChangeDetectorRef, elementRef: ElementRef);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    refresh(): void;
    isActive(value: any): boolean;
    readonly unaryCondition: boolean;
    filter(): void;
    clearFiltering(resetCondition: boolean): void;
    selectionChanged(value: any): void;
    onInputChanged(val: any): void;
    clearInput(): void;
    focusInput(): void;
    readonly disabled: boolean;
    onMouseDown(): void;
    onDatePickerClick(): void;
    onClick(event: any): void;
    protected getCondition(value: any): any;
    protected transformValue(value: any): any;
    protected filteringExpression(): boolean;
}
